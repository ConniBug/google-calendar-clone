{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAC4C;AACG;AACc;AAC7D;AACA;AACsD;AACtD;AACA;AAC8C;AACiB;AAC/D;AACA;AAIgC;AAChC;AACA;AAOkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qEAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oCAAoC,EAAE,IAAI,IAAI,KAAK;AAC/E;AACA;AACA,kDAAkD,qEAAe;AACjE,qDAAqD,UAAU;AAC/D;AACA,gDAAgD,qEAAe;AAC/D,mDAAmD,UAAU;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8DAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,sBAAsB,0EAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,cAAc,GAAG,OAAO,eAAe,GAAG;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,GAAG;AACvE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,4DAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,4DAAM;AACtB;AACA;AACA,MAAM,UAAU,kEAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,6BAA6B,kCAAkC;AAC/D;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAkD;AACzE;AACA;AACA;AACA;AACA,IAAI,6DAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gEAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,YAAY;AACzD,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oBAAoB,GAAG,MAAM,mBAAmB,GAAG,SAAS,gBAAgB,aAAa;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAU;AACjC,sBAAsB,8DAAU;AAChC;AACA;AACA,sBAAsB,8DAAU;AAChC,oBAAoB,8DAAU;AAC9B,qBAAqB,8DAAU;AAC/B;AACA;AACA,uBAAuB,8DAAU;AACjC;AACA;AACA,6BAA6B,8DAAU;AACvC;AACA;AACA,qBAAqB,8DAAU;AAC/B,sBAAsB,8DAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvpBsC;AACtC;AACA;AACA,sBAAsB,sEAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,IAAI;AACjC,8BAA8B,KAAK;AACnC,gCAAgC,OAAO;AACvC,+BAA+B,MAAM;AACrC,gCAAgC,oDAAoD;AACpF,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,GAAG,QAAQ;AACpC;AACA;AACA,2BAA2B,kCAAkC,EAAE,eAAe,IAAI,mBAAmB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe;;;;;;;;;;;;;;;;;ACzJuB;AACM;AACkB;AAC9D,oBAAoB,2EAA+B;AACnD,wBAAwB,0EAA8B;AACtD;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oEAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4DAAQ;AACd,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oBAAoB,EAAE,KAAK,EAAE,KAAK;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrKe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,kBAAkB;AAC/B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,QAAQ;AACR,QAAQ;AACR,QAAQ;AACR;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxEoD;AAMjB;AACU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,GAAG,EAAE,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kEAAY;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qEAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,EAAE,GAAG,EAAE,GAAG,EAAE;AACjE,oCAAoC,8CAA8C,EAAE,EAAE,IAAI,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAY,kEAAkE,kEAAY;AACnG,yDAAyD,EAAE,GAAG,EAAE,GAAG,EAAE;AACrE,wCAAwC,8CAA8C,EAAE,EAAE,IAAI,EAAE;AAChG;AACA;AACA;AACA;AACA,sBAAsB,0EAAoB;AAC1C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAU;AACjC,oBAAoB,8DAAU;AAC9B,oBAAoB,8DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/NsC;AACiB;AACvD,kBAAkB,gEAAe;AACjC,6BAA6B,0DAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mBAAmB;AACnB,uBAAuB;AACvB,aAAa;AACb,cAAc;AACd,eAAe;AACf,kBAAkB;AAClB,eAAe;AACf,qBAAqB;AACrB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,GAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACzN6C;AACQ;AACN;AACyB;AACR;AAChE;AAKmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4EAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8DAAU;AAC9B,sBAAsB,8DAAU;AAChC,qBAAqB,8DAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvKsC;AACwB;AAC/C;AACf;AACA;AACA,2CAA2C,uEAA2B,gBAAgB,IAAI,qEAAyB,mBAAmB,EAAE,eAAe;AACvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wBAAwB,EAAE,iBAAiB,IAAI,kBAAkB;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB,EAAE,kBAAkB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qCAAqC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC/F4C;AACiB;AACvB;AACtC;AAM6B;AAC7B;AAIgC;AAChC;AAC+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,IAAI,6DAAQ;AACZ;AACA;AACA;AACA,IAAI,oEAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAe;AACjC,MAAM;AACN;AACA,kBAAkB,gEAAe;AACjC;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA,yBAAyB,+DAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB,6DAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA,yCAAyC,gBAAgB,QAAQ,KAAK;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ,IAAI,KAAK;AAC9D;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ,QAAQ,gBAAgB,EAAE,KAAK;AACxF,+BAA+B,gEAAe;AAC9C;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAAU;AACrC,uBAAuB,8DAAU;AACjC,yBAAyB,8DAAU;AACnC,oBAAoB,8DAAU;AAC9B,oBAAoB,8DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,MAAM,0DAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0DAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrX4D;AACf;AACO;AACpD;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO,EAAE,KAAK;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qEAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAU;AACjC,oBAAoB,8DAAU;AAC9B,oBAAoB,8DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1NkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8DAAU;AACnC,oBAAoB,8DAAU;AAC9B,kBAAkB,8DAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9F+D;AACH;AACR;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA,QAAQ;AACR,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA,wBAAwB,YAAY,MAAM,cAAc;AACxD,MAAM;AACN,wBAAwB,WAAW;AACnC,MAAM;AACN,gDAAgD,cAAcaAAa,OAAO,gBAAgB,GAAG,qEAAe,GAAG;AACrF,oCAAoC,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAQ;AACZ;AACA;AACA;AACA;AACA,IAAI,4DAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8DAAU;AACtC,0BAA0B,8DAAU;AACpC,qBAAqB,8DAAU;AAC/B,2BAA2B,8DAAU;AACrC,2BAA2B,8DAAU;AACrC,qCAAqC,8DAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/T6B;AAC7B;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gEAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AAC+C;AACN;AAIX;AAC0B;AACxD;AACA;AACgE;AAChE;AAUkC;AAClC;AAgBkC;AAClC;AAIgC;AAChC;AAC8C;AAC9C;AAIsC;AACtC;AACsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA,kBAAkB,iDAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,iDAAiD;AACjD;AACA;AACA;AACA,6BAA6B,wEAAkB;AAC/C;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC,QAAQ;AACR,wBAAwB,eAAe;AACvC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC,QAAQ;AACR,2BAA2B,aAAa;AACxC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC,yEAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gEAAS;AACf;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,wEAAkB;AACtB;AACA;AACA;AACA,oBAAoB,0EAAoB;AACxC;AACA;AACA,MAAM,uEAAiB;AACvB;AACA;AACA;AACA;AACA;AACA,IAAI,yEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,QAAQ,sEAAgB;AACxB,QAAQ;AACR,QAAQ,0EAAoB;AAC5B;AACA;AACA,qBAAqB,gEAAQ;AAC7B;AACA;AACA;AACA,QAAQ,2EAAoB;AAC5B;AACA;AACA;AACA,UAAU,gEAAa;AACvB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yEAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wEAAkB;AACtB;AACA;AACA;AACA,oBAAoB,0EAAoB;AACxC;AACA;AACA,MAAM,uEAAiB;AACvB;AACA;AACA;AACA,IAAI,yEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sEAAgB;AAC1B;AACA;AACA,UAAU,yEAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB,IAAI,iCAAiC;AACtF;AACA,sBAAsB,qEAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,QAAQ,0EAAoB;AAC5B;AACA;AACA,qBAAqB,gEAAQ;AAC7B;AACA;AACA;AACA,QAAQ,0EAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gEAAa;AACvB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wEAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAS;AAC/B;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uEAAiB;AACpC;AACA;AACA,IAAI,8EAAoC;AACxC;AACA,IAAI,kEAAwB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yEAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wEAAkB;AAChD;AACA,mBAAmB;AACnB,iDAAiD,qEAAe;AAChE;AACA;AACA;AACA,8BAA8B;AAC9B,mCAAmC;AACnC;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA,gBAAgB,2EAAqB;AACrC,eAAe,6EAAuB;AACtC;AACA;AACA,+BAA+B,gEAAU,uBAAuB;AAChE,kCAAkC,gEAAU,kBAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kEAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yEAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAa;AACjB;AACA;AACA;AACA,QAAQ,8DAAU;AAClB;AACA;AACA;AACA;AACA,QAAQ,8DAAU;AAClB;AACA;AACA;AACA;AACA,QAAQ,8DAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA,WAAW;AACX,4DAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC,4BAA4B,QAAQ;AACpC,UAAU,cAAc,0BAA0B,QAAQ;AAC1D,UAAU,cAAc,iCAAiC,QAAQ;AACjE,UAAU,cAAc,iCAAiC,QAAQ;AACjE,UAAU,cAAc,wBAAwB,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACzlBwD;AACX;AACJ;AACO;AAIhB;AAQE;AAC6B;AACzB;AACtC;AACA,mBAAmB,0EAA8B;AACjD,qBAAqB,4EAAgC;AACrD;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU,IAAI,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mEAAa;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B,EAAE,eAAe,EAAE,yBAAyB;AAC7F,MAAM;AACN,qBAAqB,yEAAmB;AACxC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6DAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAS;AAC/B;AACA;AACA;AACA,mBAAmB,uEAAiB;AACpC,IAAI,8EAAoC;AACxC;AACA,8BAA8B,kEAAwB;AACtD,IAAI,+DAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0EAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8DAAU;AAChC,mBAAmB,8DAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,KAAK,GAAG,MAAM,GAAG,IAAI;AACnD;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,OAAO,IAAI;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,oCAAoC,wEAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpQA;AAC6C;AACiB;AACd;AACP;AACe;AACxD;AACA;AACiD;AACjD;AACA;AAC8C;AAIR;AACtC;AACA;AASkC;AAClC;AACA;AAIgC;AAChC;AACA;AAC8D;AAC9D;AACA;AACsC;AACtC,mBAAmB,uEAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA,uBAAuB,wDAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qEAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,0BAA0B,qBAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,cAAc,kEAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,sEAAgB;AAC7D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,6BAA6B,0EAAoB;AACjD;AACA;AACA;AACA;AACA;AACA,eAAe,wEAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mDAAmD;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C,2BAA2B,SAAS;AACpC,4BAA4B,UAAU;AACtC,0BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6BAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,KAAK,GAAG,KAAK;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yEAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,MAAM,yEAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0EAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,4BAA4B,0CAA0C;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0CAA0C;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mFAA6B;AACpD;AACA;AACA;AACA;AACA,0BAA0B,yEAA4B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI,YAAY;AACrB;AACA;AACA;AACA;AACA,KAAK,IAAI,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,cAAc;AAC7E;AACA;AACA;AACA;AACA,0BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,uDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0EAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6DAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAS;AAC/B;AACA;AACA;AACA,mBAAmB,uEAAiB;AACpC;AACA,IAAI,8EAAoC;AACxC;AACA;AACA;AACA,8BAA8B,kEAAwB;AACtD,IAAI,+DAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+DAAW;AACnB;AACA;AACA;AACA,UAAU,gFAAuB;AACjC,UAAU,sFAA6B;AACvC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,6BAA6B,0EAAoB;AACjD,UAAU,0EAAoB;AAC9B;AACA;AACA,4BAA4B,6DAAS;AACrC;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAS;AACnC;AACA;AACA;AACA;AACA,uBAAuB,uEAAiB;AACxC;AACA;AACA,QAAQ,8EAAoC;AAC5C,QAAQ,kEAAwB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8DAAU;AACnC,+BAA+B,8DAAU;AACzC,uBAAuB,8DAAU;AACjC,2BAA2B,8DAAU;AACrC,4BAA4B,8DAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8DAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC54B4C;AACiB;AACd;AACN;AACe;AACZ;AACN;AAC0B;AAS9B;AAgBA;AACkB;AACN;AAIR;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA,kBAAkB,kDAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,EAAE,GAAG,EAAE,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yBAAyB,0EAAoB;AAC7C;AACA;AACA;AACA,MAAM,6DAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qEAAoB;AAC1B;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C,6BAA6B,oBAAoB;AACjD;AACA;AACA;AACA,MAAM,+DAAS;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,KAAK,oCAAoC,KAAK;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wEAAkB;AAC7C;AACA;AACA,+BAA+B,wEAAkB,yBAAyB;AAC1E;AACA;AACA,+BAA+B,iEAAW;AAC1C;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uEAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW,EAAE,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,IAAI;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAS;AAC/B;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uEAAiB;AACpC;AACA;AACA,IAAI,8EAAoC;AACxC,IAAI,kEAAwB;AAC5B;AACA;AACA;AACA;AACA,IAAI,wEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA,oBAAoB,0EAAoB;AACxC;AACA;AACA,MAAM,uEAAiB;AACvB;AACA;AACA;AACA;AACA;AACA,IAAI,yEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,QAAQ,sEAAgB;AACxB;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB,IAAI,iCAAiC;AACtF;AACA,sBAAsB,qEAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,QAAQ,0EAAoB;AAC5B,qBAAqB,gEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gEAAa;AACvB,UAAU;AACV;AACA;AACA;AACA;AACA,MAAM,wEAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA,kBAAkB,0EAAoB;AACtC;AACA;AACA,MAAM,uEAAiB;AACvB;AACA;AACA;AACA;AACA,IAAI,wEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,QAAQ,0EAAoB;AAC5B;AACA;AACA,qBAAqB,gEAAQ;AAC7B;AACA,QAAQ,0EAAoB;AAC5B;AACA;AACA;AACA,UAAU,gEAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wEAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yEAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wEAAkB;AAChD;AACA,mBAAmB;AACnB,iDAAiD,qEAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,kCAAkC;AAClC,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gEAAU,uBAAuB;AAChE,kCAAkC,gEAAU,kBAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kEAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wEAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+DAAU;AAClB;AACA;AACA;AACA;AACA,QAAQ,+DAAU;AAClB;AACA;AACA;AACA;AACA,QAAQ,+DAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+DAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gEAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvpB4C;AACN;AACc;AACY;AACY;AAC5E,mBAAmB,qEAAyB;AAC5C,qBAAqB,yEAA6B;AAClD;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gFAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,KAAK,GAAG,MAAM,GAAG,IAAI;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qBAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0EAAoB;AACnD;AACA;AACA;AACA,IAAI,4DAAQ;AACZ;AACA;AACA;AACA;AACA,QAAQ,8DAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9KA;AACgD;AAChD;AACe;AACf;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,EAAE,6DAAQ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBkC;AACyB;AACc;AACG;AAChB;AACH;AACW;AACE;AACH;AACjB;AACgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAQ;AACZ;AACA;AACA;AACA,gDAAgD,iDAAiD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gFAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA,MAAM,+EAAuB;AAC7B,MAAM,4EAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uEAAY;AAChB;AACA,uCAAuC,QAAQ,SAAS,UAAU,YAAY;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAiB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,KAAK,EAAE,SAAS;AAC7D,IAAI,yEAAa;AACjB;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8DAAU;AAClC,qBAAqB,8DAAU;AAC/B,oBAAoB,8DAAU;AAC9B,oBAAoB,8DAAU;AAC9B,qBAAqB,8DAAU;AAC/B,qBAAqB,8DAAU;AAC/B,mBAAmB,8DAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAoB;AAC5B;AACA;AACA,QAAQ,4EAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kEAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,+BAA+B,4DAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC/mBkD;AACI;AACE;AACF;AACF;AACE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oEAAS;AACjB,QAAQ,qEAAU;AAClB;AACA;AACA;AACA;AACA,QAAQ,oEAAS;AACjB,QAAQ,sEAAW;AACnB;AACA;AACA;AACA;AACA,QAAQ,oEAAS;AACjB,QAAQ,uEAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,oEAAS;AACjB,QAAQ,sEAAW;AACnB;AACA;AACA;AACA;AACA,QAAQ,oEAAS;AACjB,QAAQ,sEAAW;AACnB;AACA;AACA;AACA;AACA,QAAQ,oEAAS;AACjB,QAAQ,uEAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzFqD;AAClB;AACnC,eAAe,0DAAcoBAAoB,OAAO;AAC3B;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAwB,EAAE,IAAI,IAAI,GAAG,IAAI,2BAA2B;AACpF,MAAM;AACN,gBAAgB,wBAAwB,EAAE,IAAI,IAAI,IAAI,EAAE,uBAAuB,IAAI,2BAA2B;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA,MAAM;AACN,sBAAsB,oCAAoC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kEAAY;AACzB,MAAM;AACN,aAAa,kEAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oCAAoC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,OAAO,EAAC;AACvB;AACA;AACA;;;;;;;;;;;;;;;AC3mBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe;;;;;;;;;;;;;;;;;;;;ACnBuB;AACM;AACmB;AAC5B;AACwB;AACpB;AACvC,eAAe,0DAAckDAAkD,2CAAQ;AAC1D;AACA;AACA;AACA;AACA,kBAAkB,oCAAoC;AACtD,eAAe,oCAAoC;AACnD,iBAAiB,oCAAoC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,6BAA6B,0DAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wDAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,6CAA6C;AAC7C,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8DAAQ,SAAS,8DAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAY;AACrB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmaAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,SAAS;AACnC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAyB;AAC/C;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC,WAAW,2DAA2B;AACtiEAAe;;;;;;;;;;;;;;;;;;ACz5BkC;AACjD;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACe;AACf;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AACloBAAoB,gBAAgB;AACpC,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;ACjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,aAAa;;;;;;;;;;;;;;AC/B5B,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;AC5FA,iEAAe;AACf,OAAO,2CAA2C;AAClD,OAAO,+CAA+C;AACtD,OAAO,gDAAgD;AACvD,OAAO,iDAAiD;AACxD,OAAO,gDAAgD;AACvD,OAAO,gDAAgD;AACvD,OAAO,8CAA8C;AACrD,OAAO,4CAA4C;AACnD,OAAO,8CAA8C;AACrD,OAAO,iDAAiD;AACxD,OAAO,oDAAoD;AAC3D,OAAO,0CAA0C;AACjD,OAAO,sCAAsC;AAC7C,QAAQ,yCAAyC;AACjD,QAAQ,oCAAoC;AAC5C,QAAQ,iDAAiD;AACzD,QAAQ,wCAAwC;AAChD,QAAQ,yDAAyD;AACjE,QAAQ,+CAA+C;AACvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB6D;AAC1B;AACnC,eAAe,0DAAc;AAC7B;AACA;AACe;AACf,yBAAyB,sBAAsB,IAAI;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAmB,GAAG,oBAAoB,GAAG,eAAe;AACxE;AACA;AACA;AACA;AACA,YAAY,mBAAmB,GAAG,gBAAgB,GAAG,eAAe;AACpE;AACA;AACA;AACA;AACA,gBAAgB,sEAA0B;AAC1C;AACA;AACA;AACA,2BAA2B,MAAM;AACjC,+BAA+B,QAAQ;AACvC,cAAc,MAAM,GAAG,QAAQ;AAC/B,YAAY,OAAO,EAAE,KAAK,EAAE,mBAAmB,KAAK,GAAG;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY,EAAE,UAAU,EAAE,UAAU;AACtD,QAAQ;AACR;AACA,kBAAkB,YAAY,EAAE,UAAU,IAAI,OAAO,IAAI,UAAU;AACnE;AACA,MAAM;AACN;AACA,gBAAgB,YAAY,EAAE,UAAU,IAAI,UAAU,EAAE,OAAO,IAAI,UAAU;AAC7E;AACA,IAAI;AACJ;AACA,cAAc,YAAY,EAAE,SAAS,IAAI,eAAe,IAAI,UAAU,EAAE,OAAO,IAAI,YAAY;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sDAAU;AAC5B,gBAAgB,sDAAU;AAC1B;AACA;AACA;AACA;AACA,YAAY,WAAW,IAAI,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB,EAAE,GAAG,IAAI,IAAI,GAAG,+DAAmB,yBAAyB;AACtG;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,mBAAmB,uBAAuB,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG;AAC9D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,iBAAiB,wBAAwB,EAAE,IAAI,IAAI,wBAAwB,EAAE,GAAG,IAAI,GAAG;AACvF;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,eAAe,wBAAwB,EAAE,GAAG,IAAI,IAAI,IAAI,wBAAwB,EAAE,GAAG,IAAI,GAAG;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM,EAAE,IAAI;AACxB,eAAe,mBAAmB,EAAE,gBAAgB,EAAE,eAAe,EAAE,gBAAgB,EAAE,kBAAkB;AAC3G;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChSkC;AAClpB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC,2CAA2C,UAAU,IAAI,iBAAiB;AAC1E;AACA,mCAAmC,gBAAgB,EAAE,eAAe;AACpE;AACA,MAAM;AACN,mCAAmC,gBAAgB,EAAE,iBAAiB,EAAE,eAAe;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B,sBAAsB,QAAQ;AAC9B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA,0BAA0B,eAAe;AACzC,wBAAwB,eAAe;AACvC,wBAAwB,eAAe;AACvC,IAAI;AACJ,wBAAwB,YAAY;AACpC,wBAAwB,YAAY;AACpC,wBAAwB,YAAY;AACpC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,4BAA4B,sDAAQ;AACpC;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uCAAuC;AAChE;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE,IAAI,OAAO,aAAa,SAAS,eAAe,QAAQ,cAAc,mBAAmB,iBAAiB;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,aAAa;;;;;;;;;;;;;;;;;;;;ACvW5B;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACdiEAAe,QAAQ,EAAC;AAOvB;;;;;;;;;;;;;;;;;;;;;;;;;;AC5ID;AACA,iEAAe,CAAC;AAChcC;;;;;;;;;;;;;;;;;;AC9MD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM,EAAE,GAAG;AACzB,IAAI;AACJ,cAAc,MAAM,GAAG,QAAQ,EAAE,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO,IAAI,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc,IAAI,WAAW;AAClD;AACA;AACA;AACA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;UClExB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNiE;AAC9B;AACc;AACH;AAC9C;AACA;AACA;AACA;AACA;AACA;AAC2B;AAC3B;AAC4B;AAC5B;AACgC;AACF;AACC;AACD;AACD;AACC;AACD;AACK;AAClC;AACiC;AACD;AACM;AACI;AACE;AACA;AAC5C;AACgC;AACA;AACC;AACO;AACR;AACK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAAc,CAAC,2DAAO,EAAE,sDAAK;AAC7B,+DAAW,CAAC,2DAAO,EAAE,kEAAiB,EAAE,sDAAK","sources":["webpack://google-calendar-clone-vanilla/./src/styles/aside/changeViewModule.css?b618","webpack://google-calendar-clone-vanilla/./src/styles/aside/editCategoryForm.css?2f49","webpack://google-calendar-clone-vanilla/./src/styles/aside/entryOptions.css?3047","webpack://google-calendar-clone-vanilla/./src/styles/aside/form.css?3b11","webpack://google-calendar-clone-vanilla/./src/styles/aside/goto.css?a335","webpack://google-calendar-clone-vanilla/./src/styles/aside/info.css?a2a4","webpack://google-calendar-clone-vanilla/./src/styles/aside/popup.css?6c1a","webpack://google-calendar-clone-vanilla/./src/styles/aside/shortcuts.css?d958","webpack://google-calendar-clone-vanilla/./src/styles/aside/sidebarSubMenu.css?2969","webpack://google-calendar-clone-vanilla/./src/styles/aside/toast.css?b787","webpack://google-calendar-clone-vanilla/./src/styles/aside/toggleForm.css?b005","webpack://google-calendar-clone-vanilla/./src/styles/containers.css?237c","webpack://google-calendar-clone-vanilla/./src/styles/datepicker.css?6e2c","webpack://google-calendar-clone-vanilla/./src/styles/dayview.css?51ee","webpack://google-calendar-clone-vanilla/./src/styles/header.css?1fd8","webpack://google-calendar-clone-vanilla/./src/styles/listview.css?b33b","webpack://google-calendar-clone-vanilla/./src/styles/monthview.css?663e","webpack://google-calendar-clone-vanilla/./src/styles/root.css?a5ee","webpack://google-calendar-clone-vanilla/./src/styles/sbdatepicker.css?4a96","webpack://google-calendar-clone-vanilla/./src/styles/sidebar.css?2133","webpack://google-calendar-clone-vanilla/./src/styles/weekview.css?102b","webpack://google-calendar-clone-vanilla/./src/styles/yearview.css?56bf","webpack://google-calendar-clone-vanilla/./src/components/forms/entryForm.js","webpack://google-calendar-clone-vanilla/./src/components/forms/formUtils.js","webpack://google-calendar-clone-vanilla/./src/components/forms/goto.js","webpack://google-calendar-clone-vanilla/./src/components/forms/setForm.js","webpack://google-calendar-clone-vanilla/./src/components/menus/datepicker.js","webpack://google-calendar-clone-vanilla/./src/components/menus/editCategory.js","webpack://google-calendar-clone-vanilla/./src/components/menus/entryOptions.js","webpack://google-calendar-clone-vanilla/./src/components/menus/header.js","webpack://google-calendar-clone-vanilla/./src/components/menus/shortcutsModal.js","webpack://google-calendar-clone-vanilla/./src/components/menus/sidebarCategories.js","webpack://google-calendar-clone-vanilla/./src/components/menus/sidebarDatepicker.js","webpack://google-calendar-clone-vanilla/./src/components/menus/sidebarFooter.js","webpack://google-calendar-clone-vanilla/./src/components/menus/sidebarSubMenu.js","webpack://google-calendar-clone-vanilla/./src/components/toastPopups/toast.js","webpack://google-calendar-clone-vanilla/./src/components/toastPopups/toastCallbacks.js","webpack://google-calendar-clone-vanilla/./src/components/views/dayview.js","webpack://google-calendar-clone-vanilla/./src/components/views/listview.js","webpack://google-calendar-clone-vanilla/./src/components/views/monthview.js","webpack://google-calendar-clone-vanilla/./src/components/views/weekview.js","webpack://google-calendar-clone-vanilla/./src/components/views/yearview.js","webpack://google-calendar-clone-vanilla/./src/config/appDefaults.js","webpack://google-calendar-clone-vanilla/./src/config/renderViews.js","webpack://google-calendar-clone-vanilla/./src/config/setViews.js","webpack://google-calendar-clone-vanilla/./src/context/appContext.js","webpack://google-calendar-clone-vanilla/./src/context/constants.js","webpack://google-calendar-clone-vanilla/./src/context/store.js","webpack://google-calendar-clone-vanilla/./src/factory/entries.js","webpack://google-calendar-clone-vanilla/./src/factory/queries.js","webpack://google-calendar-clone-vanilla/./src/locales/en.js","webpack://google-calendar-clone-vanilla/./src/locales/kbDefault.js","webpack://google-calendar-clone-vanilla/./src/utilities/dateutils.js","webpack://google-calendar-clone-vanilla/./src/utilities/dragutils.js","webpack://google-calendar-clone-vanilla/./src/utilities/helpers.js","webpack://google-calendar-clone-vanilla/./src/utilities/svgs.js","webpack://google-calendar-clone-vanilla/./src/utilities/timeutils.js","webpack://google-calendar-clone-vanilla/webpack/bootstrap","webpack://google-calendar-clone-vanilla/webpack/runtime/define property getters","webpack://google-calendar-clone-vanilla/webpack/runtime/hasOwnProperty shorthand","webpack://google-calendar-clone-vanilla/webpack/runtime/make namespace object","webpack://google-calendar-clone-vanilla/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// render methods\r\nimport setViews from \"../../config/setViews\"\r\nimport setDatepicker from \"../menus/datepicker\"\r\nimport setSidebarDatepicker from \"../menus/sidebarDatepicker\"\r\n\r\n// svgs\r\nimport { createCheckIcon } from \"../../utilities/svgs\"\r\n\r\n// popups\r\nimport createToast from \"../toastPopups/toast\"\r\nimport toastCallbackSaving from \"../toastPopups/toastCallbacks\"\r\n\r\n// helpers\r\nimport {\r\n  getClosest,\r\n  hextorgba\r\n} from \"../../utilities/helpers\"\r\n\r\n// date / time helpers\r\nimport {\r\n  getDateForStore,\r\n  isBeforeDate,\r\n  isDate,\r\n  getDateFromAttribute,\r\n  formatDateForDisplay\r\n} from \"../../utilities/dateutils\"\r\n\r\n\r\n// main app sidebar\r\nconst sidebar = document.querySelector(\".sidebar\")\r\n// main app datepicker / overlay\r\nconst datepicker = document.querySelector(\".datepicker\")\r\nconst datepickeroverlay = document.querySelector(\".datepicker-overlay\")\r\n\r\n// form wrappers / overlay\r\nconst formOverlay = document.querySelector(\".form-overlay\")\r\nconst formModalOverlay = document.querySelector(\".form-modal-overlay\")\r\nconst entriesFormWrapper = document.querySelector(\".entries__form\")\r\nconst entriesForm = document.querySelector(\".entry-form\")\r\n\r\n// title / description inputs\r\nconst titleInput = document.querySelector(\".form--body__title-input\")\r\nconst descriptionInput = document.querySelector(\".form--body__description-input\")\r\n\r\n// start date / time\r\n// end date / time\r\nconst startDateInput = document.querySelector(\".form--body-start__date\")\r\nconst endDateInput = document.querySelector(\".form--body-end__date\")\r\nconst startTimeInput = document.querySelector(\".form--body-start__time\")\r\nconst endTimeInput = document.querySelector(\".form--body-end__time\")\r\nconst starthourInput = document.querySelector(\".form--body-start__hour\")\r\n\r\n// category modal\r\nconst categoryModal = document.querySelector(\".form--body__category-modal\")\r\nconst categoryModalIcon = document.querySelector(\".form--body__category-icon\")\r\nconst categoryModalWrapper = document.querySelector(\".form--body__category-modal--wrapper\")\r\nconst selectedCategoryWrapper = document.querySelector(\".form--body__category-modal--wrapper-selection\")\r\nconst selectedCategoryColor = document.querySelector(\".form--body__category-modal--wrapper__color\")\r\nconst selectedCategoryTitle = document.querySelector(\".form--body__category-modal--wrapper__title\")\r\n\r\n// reset / save btns\r\nconst formSubmitButton = document.querySelector(\".form--footer__button-save\");\r\n// const formClearButton = document.querySelector(\".form--footer__button-cancel\");\r\n\r\nexport default function setEntryForm(context, store, datepickerContext) {\r\n\r\n  let categories;\r\n  let activeCategories;\r\n  let currentComponent;\r\n  let [year, month, day] = [null, null, null]\r\n\r\n\r\n  function renderSidebarDatepickerForm() {\r\n    if (!sidebar.classList.contains(\"hide-sidebar\")) {\r\n      // datepickerContext.setDate(year, month, day)\r\n      context.setDateSelected(day)\r\n      setSidebarDatepicker(context, store, datepickerContext)\r\n    }\r\n  }\r\n\r\n  function getDefaultCategory() {\r\n    if (activeCategories.length === 0) {\r\n      return [categories[0][0], categories[0][1].color]\r\n    } else {\r\n      return [activeCategories[0][0], activeCategories[0][1].color]\r\n    }\r\n  }\r\n\r\n  function setInitialFormCategory() {\r\n    let [categoryTitle, categoryColor] = getDefaultCategory();\r\n    categoryModalWrapper.setAttribute(\"data-form-category\", categoryTitle)\r\n\r\n    selectedCategoryWrapper.style.backgroundColor = categoryColor\r\n    selectedCategoryTitle.textContent = categoryTitle\r\n    selectedCategoryColor.style.backgroundColor = categoryColor\r\n    categoryModalIcon.firstElementChild.setAttribute(\"fill\", categoryColor)\r\n  }\r\n\r\n  function setFormInitialValues() {\r\n    // variable setup\r\n    categories = Object.entries(store.getAllCtg())\r\n    activeCategories = store.getActiveCategoriesKeyPair()\r\n    currentComponent = context.getComponent()\r\n    year = context.getYear()\r\n    month = context.getMonth()\r\n    day = context.getDay()\r\n    // ****************************************** //\r\n    // title / description\r\n    descriptionInput.value = \"\";\r\n    setTimeout(() => {\r\n      let tempval = titleInput.value;\r\n      titleInput.value = \"\";\r\n      titleInput.focus();\r\n      titleInput.value = tempval;\r\n    }, 10)\r\n    // ****************************************** //\r\n    // category setup \r\n    setInitialFormCategory()\r\n    // ****************************************** // \r\n\r\n    // date picker setup\r\n    datepickerContext.setDate(year, month, day)\r\n    context.setDateSelected(day)\r\n    // ****************************************** // \r\n\r\n    // date inputs setup\r\n    const dateSelected = `${context.getMonthName().slice(0, 3)} ${day}, ${year}`\r\n    let temphours = new Date().getHours()\r\n    startDateInput.textContent = dateSelected\r\n    startDateInput.setAttribute(\"data-form-date\", getDateForStore(context.getDate()))\r\n    startDateInput.setAttribute(\"data-form-time\", `${temphours}:00`)\r\n    endDateInput.textContent = dateSelected\r\n    endDateInput.setAttribute(\"data-form-date\", getDateForStore(context.getDate()))\r\n    endDateInput.setAttribute(\"data-form-time\", `${temphours}:30`)\r\n    // ****************************************** // \r\n\r\n    // submit button setup \r\n    formSubmitButton.setAttribute(\"data-form-action\", \"create\")\r\n    formSubmitButton.setAttribute(\"data-form-id\", \"\")\r\n    // ****************************************** // \r\n\r\n\r\n    // ****************************************** // \r\n\r\n    // approve form event delegation\r\n    entriesFormWrapper.onmousedown = delegateEntryFormEvents\r\n    formOverlay.onmousedown = handleOverlayClose\r\n    document.addEventListener(\"keydown\", delegateFormKeyDown)\r\n    // ****************************************** // \r\n  }\r\n\r\n  function getDatePicker(year, month, day) {\r\n    datepickeroverlay.classList.remove(\"hide-datepicker-overlay\")\r\n    datepicker.classList.remove(\"hide-datepicker\")\r\n    store.addActiveOverlay(\"hide-datepicker-overlay\")\r\n    datepickerContext.setDate(year, month, day)\r\n    datepickerContext.setDateSelected(day)\r\n    setDatepicker(context, store, datepickerContext, \"form\")\r\n  }\r\n\r\n  function handleOverlayClose(e) {\r\n    if (e.target.classList.contains(\"form-overlay\")) {\r\n      handleFormClose(e)\r\n    }\r\n  }\r\n\r\n  function handleSetDate(e, type) {\r\n    if (type === \"start\") {\r\n      startDateInput.setAttribute(\"class\", \"form--body-start__date active-form-date\");\r\n      endDateInput.setAttribute(\"class\", \"form--body-end__date inactive-form-date\");\r\n    } else {\r\n      startDateInput.setAttribute(\"class\", \"form--body-start__date inactive-form-date\");\r\n      endDateInput.setAttribute(\"class\", \"form--body-end__date active-form-date\");\r\n    }\r\n\r\n    const [y, m, d] = getDateFromAttribute(e.target, \"data-form-date\");\r\n    const rect = e.target.getBoundingClientRect();\r\n    const datepickerLeft = parseInt(rect.left);\r\n    const bott = parseInt(rect.bottom);\r\n    let datepickerTop = parseInt(rect.top);\r\n\r\n    if (type === \"end\") {\r\n      datepickerTop -= 40;\r\n    }\r\n\r\n    if (window.innerHeight - 216 < bott) {\r\n      datepickerTop = window.innerHeight - 216;\r\n    }\r\n\r\n    datepicker.setAttribute(\"style\", `top:${datepickerTop}px;left:${datepickerLeft}px;`)\r\n    getDatePicker(y, m, d)\r\n  }\r\n\r\n  function getDateFormatViaAttr(dateAttr) {\r\n    const [year, month, day] = dateAttr.split(\"-\").map(x => parseInt(x))\r\n    return new Date(year, month, day)\r\n  }\r\n\r\n  function getTimeFormatViaAttr(timeAttr) {\r\n    return timeAttr.split(\":\").map(x => parseInt(x))\r\n  }\r\n\r\n  function getDateTimeFormatted(dateAttr, timeAttr) {\r\n    dateAttr.setHours(timeAttr[0])\r\n    dateAttr.setMinutes(timeAttr[1])\r\n    dateAttr.setSeconds(0)\r\n    return dateAttr\r\n  }\r\n\r\n  function configDatesForStore() {\r\n    let startDateAttr = startDateInput.getAttribute(\"data-form-date\")\r\n    let startDate = getDateFormatViaAttr(startDateAttr)\r\n    let startTimeAttr = startDateInput.getAttribute(\"data-form-time\") || \"12:00\"\r\n    let [starthour, startminute] = getTimeFormatViaAttr(startTimeAttr)\r\n    // let startTimeAttr = startTimeInput.getAttribute(\"data-form-time\") || \"12:00\"\r\n\r\n    let endDateAttr = endDateInput.getAttribute(\"data-form-date\")\r\n    let endDate = getDateFormatViaAttr(endDateAttr)\r\n    let endTimeAttr = endDateInput.getAttribute(\"data-form-time\") || \"12:30\"\r\n    let [endhour, endminute] = getTimeFormatViaAttr(endTimeAttr)\r\n    // let endTimeAttr = endTimeInput.getAttribute(\"data-form-time\") || \"12:00\"\r\n\r\n    console.log(starthour, endhour)\r\n    if (starthour >= endhour) {\r\n      if (starthour < 23) {\r\n        endhour += 1\r\n      } else {\r\n        startminute = 0;\r\n        endhour = 23;\r\n        endminute = 30;\r\n      }\r\n    }\r\n\r\n    return [\r\n      getDateTimeFormatted(startDate, [starthour, startminute]),\r\n      getDateTimeFormatted(endDate, [endhour, endminute])\r\n    ]\r\n  }\r\n\r\n  function checkFormValidity(title, description, category, startDate, endDate) {\r\n    // all inputs are valid by default \r\n    // if any input becomes invalid, only the error message for that input will be returned through a error object defined below\r\n    const status = {\r\n      title: true,\r\n      description: true,\r\n      startDate: true,\r\n      endDate: true,\r\n      valid: true,\r\n    }\r\n    /* ************************ */\r\n    /*  TITLE VALIDATION CHECK */\r\n    if (typeof title === \"string\") {\r\n      const titlecheck = title.trim().replace(/[^a-zA-Z0-9\\s_-]+|\\s{2,}/g, ' ');\r\n      if (titlecheck.length > 50) {\r\n        status.title = \"Title must be Less than 50 characters\";\r\n        status.valid = false;\r\n      } else if (titlecheck.length === 0) {\r\n        status.title = \"Title cannot be empty\";\r\n        status.valid = false;\r\n      }\r\n    } else {\r\n      status.title = \"Title cannot be empty\";\r\n    }\r\n    /* ***************************** */\r\n    /*  DESCRIPTION VALIDATION CHECK */\r\n    if (description.length >= 200) {\r\n      status.description = \"Description must be less than 200 characters\";\r\n      status.valid = false;\r\n    }\r\n    /* ************************** */\r\n    /*  CATEGORY VALIDATION CHECK */\r\n    if (!store.hasCtg(category) || !category) {\r\n      categoryModalWrapper.setAttribute(\"data-form-category\", \"default\");\r\n    }\r\n    /* **************************** */\r\n    /*  START DATE VALIDATION CHECK */\r\n    if (!startDate) {\r\n      status.startDate = \"Start date cannot be empty\";\r\n      status.valid = false;\r\n    } else if (!isDate(startDate)) {\r\n      status.startDate = \"Start date is not valid\";\r\n      status.valid = false;\r\n    }\r\n    /* **************************** */\r\n    /*  END DATE VALIDATION CHECK */\r\n    if (!endDate) {\r\n      status.endDate = \"End date cannot be empty\";\r\n      status.valid = false;\r\n    } else if (!isDate(endDate)) {\r\n      status.endDate = \"End date is not valid\";\r\n      status.valid = false;\r\n    } else if (!isBeforeDate(startDate, endDate)) {\r\n      status.endDate = \"End date must be after start date\";\r\n      status.valid = false;\r\n    }\r\n    /* ************* */\r\n    /*  congregate any errors  */\r\n    let errors = {};\r\n    let hasErrors;\r\n    for (let key in status) {\r\n      if (status[key] !== true) {\r\n        errors[key] = status[key];\r\n        hasErrors = true;\r\n      }\r\n    }\r\n\r\n\r\n    if (hasErrors) {\r\n      return errors;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function removeErrorMessages(e) {\r\n    if (e.target.classList.contains(\"form-input-error\")) {\r\n      e.preventDefault()\r\n      e.target.classList.remove(\"form-input-error\")\r\n      e.target.removeAttribute(\"data-form-error-message\")\r\n      e.target.firstElementChild.focus()\r\n    } else if (e.target.classList.contains(\"form-input-error__custom-input\")) {\r\n      e.target.classList.remove(\"form-input-error__custom-input\")\r\n      e.target.removeAttribute(\"data-form-error-message\")\r\n      e.target.focus()\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  function handleFormErrors(errorMessages) {\r\n    titleInput.blur()\r\n\r\n    const components = {\r\n      title: titleInput,\r\n      description: descriptionInput,\r\n      startDate: startDateInput,\r\n      endDate: endDateInput,\r\n    }\r\n    const err = {\r\n      inputAttr: \"data-form-error-message\",\r\n      inputClass: \"form-input-error\",\r\n      svgClass: \"form-input-error__custom-input\",\r\n      submitbtn: \"form-error__submit-btn\"\r\n    }\r\n\r\n    for (let key in errorMessages) {\r\n      if (components[key]) {\r\n        if (key === \"title\" || key === \"description\") {\r\n          components[key].parentElement.setAttribute(err.inputAttr, errors[key]);\r\n          components[key].parentElement.classList.add(err.inputClass)\r\n        } else {\r\n          components[key].setAttribute(err.inputAttr, errors[key])\r\n          components[key].classList.add(err.svgClass)\r\n          const svg = components[key].parentElement.parentElement.firstElementChild.firstElementChild\r\n          svg.style.fill = \"var(--red2)\";\r\n          setTimeout(() => { svg.style.fill = \"var(--white3)\" }, 1000)\r\n        }\r\n      }\r\n    }\r\n\r\n    formSubmitButton.classList.add(err.submitbtn)\r\n    setTimeout(() => { formSubmitButton.classList.remove(err.submitbtn) }, 1000)\r\n  }\r\n\r\n  function removeLastFormEntry() {\r\n    store.removeLastEntry()\r\n    setViews(currentComponent, context, store, datepickerContext);\r\n  }\r\n\r\n  function handleFormClose(e) {\r\n    if (!datepicker.classList.contains(\"hide-datepicker\")) {\r\n      datepicker.classList.add(\"hide-datepicker\")\r\n      datepickeroverlay.classList.add(\"hide-datepicker-overlay\")\r\n    }\r\n\r\n    entriesFormWrapper.classList.add(\"hide-form\");\r\n    formOverlay.classList.add(\"hide-form-overlay\");\r\n    store.removeActiveOverlay(\"hide-datepicker-overlay\")\r\n    store.removeActiveOverlay(\"hide-form-overlay\")\r\n    entriesForm.reset();\r\n    descriptionInput.value = \"\";\r\n    titleInput.value = \"\";\r\n    document.removeEventListener(\"keydown\", delegateFormKeyDown)\r\n\r\n    const resetCurrentView = store.getFormResetHandle(currentComponent)\r\n    if (resetCurrentView !== null) {\r\n      resetCurrentView()\r\n      store.setFormResetHandle(currentComponent, null)\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  function handleSubmissionRender(start) {\r\n    context.setDate(start.getFullYear(), start.getMonth(), start.getDate())\r\n    context.setDateSelected(start.getDate())\r\n\r\n    setViews(currentComponent, context, store, datepickerContext);\r\n\r\n    if (store.getDayEntriesArray(context.getDate()).length <= 1) {\r\n      renderSidebarDatepickerForm()\r\n    }\r\n    handleFormClose()\r\n    createToast(\"Saving\", 1000, null, null, null, removeLastFormEntry)\r\n  }\r\n\r\n  function handleFormSubmission(e) {\r\n    e.preventDefault()\r\n    const title = titleInput.value\r\n    const description = descriptionInput.value;\r\n    const [startDate, endDate] = configDatesForStore()\r\n    const category = categoryModalWrapper.getAttribute(\"data-form-category\")\r\n\r\n    // if errors exist, validityStatus will represent an object with keys that match the input names, and values that represent the error messages as strings;\r\n    // note that two types of submissions are possible: edit and create\r\n    const validityStatus = checkFormValidity(\r\n      title, description, category, startDate, endDate,\r\n    )\r\n\r\n    if (validityStatus !== true) {\r\n      handleFormErrors(validityStatus)\r\n      return;\r\n    } else {\r\n      // submission : edit\r\n      if (formSubmitButton.getAttribute(\"data-form-action\") === \"edit\") {\r\n        store.updateEntry(\r\n          formSubmitButton.getAttribute(\"data-form-entry-id\"),\r\n          {\r\n            category: category,\r\n            completed: false,\r\n            description: description,\r\n            end: endDate,\r\n            id: formSubmitButton.getAttribute(\"data-form-entry-id\"),\r\n            start: startDate,\r\n            title: title,\r\n          }\r\n        )\r\n        handleSubmissionRender(startDate)\r\n        return;\r\n      } else {\r\n        // submission : create\r\n        store.createEntry(\r\n          category, false, description, endDate, startDate, title\r\n        )\r\n        handleSubmissionRender(startDate)\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleCategorySelection(e) {\r\n    const title = e.target.getAttribute(\"data-form-category-title\")\r\n    const color = e.target.getAttribute(\"data-form-category-color\")\r\n    categoryModalWrapper.setAttribute(\"data-form-category\", title)\r\n    categoryModalIcon.firstElementChild.setAttribute(\"fill\", color)\r\n\r\n    selectedCategoryWrapper.style.backgroundColor = color\r\n    selectedCategoryColor.style.backgroundColor = color\r\n    selectedCategoryTitle.textContent = title\r\n    closeCategoryModal()\r\n  }\r\n\r\n  function closeCategoryModal() {\r\n    categoryModalWrapper.classList.remove(\"category-modal-open\")\r\n    categoryModal.classList.add(\"hide-form-category-modal\")\r\n    selectedCategoryWrapper.classList.remove(\"hide-form-category-selection\")\r\n    formModalOverlay.classList.add(\"hide-form-overlay\")\r\n    categoryModalWrapper.removeAttribute(\"style\")\r\n  }\r\n\r\n  function createCategoryOptions(parent, categories) {\r\n    const currentCategory = categoryModalWrapper.getAttribute(\"data-form-category\")\r\n\r\n    categories.forEach(([key, value]) => {\r\n      const color = value.color;\r\n      const categoryWrapper = document.createElement(\"div\")\r\n      categoryWrapper.classList.add(\"category-modal--category\")\r\n      categoryWrapper.style.width = \"200px\"\r\n\r\n      categoryWrapper.style.backgroundColor = color;\r\n      categoryWrapper.setAttribute(\"data-form-category-title\", key);\r\n      categoryWrapper.setAttribute(\"data-form-category-color\", color);\r\n\r\n      const categoryDisplayColor = document.createElement(\"div\")\r\n      categoryDisplayColor.classList.add(\"category-modal--category-color\")\r\n      categoryDisplayColor.style.backgroundColor = color;\r\n\r\n      const categoryTitle = document.createElement(\"div\");\r\n      categoryTitle.classList.add(\"category-modal--category-title\");\r\n      categoryTitle.textContent = key;\r\n\r\n      if (key === currentCategory) {\r\n        const checkIcon = createCheckIcon(\"var(--white4)\");\r\n        const checkIconWrapper = document.createElement(\"div\");\r\n        checkIconWrapper.classList.add(\"category-modal--category-check\");\r\n        checkIconWrapper.appendChild(checkIcon);\r\n\r\n        categoryWrapper.append(\r\n          categoryDisplayColor,\r\n          categoryTitle,\r\n          checkIconWrapper\r\n        );\r\n\r\n      } else {\r\n        categoryWrapper.append(categoryDisplayColor, categoryTitle)\r\n      }\r\n      parent.appendChild(categoryWrapper)\r\n    })\r\n  }\r\n\r\n  function openCategoryModal(e, categories) {\r\n    const length = categories.length;\r\n    if (length === 1) return;\r\n\r\n    categoryModalWrapper.classList.add(\"category-modal-open\")\r\n    if (length < 5) {\r\n      categoryModalWrapper.style.height = `${length * 32}px`;\r\n    } else {\r\n      categoryModalWrapper.style.height = \"160px\";\r\n    }\r\n\r\n    selectedCategoryWrapper.classList.add(\"hide-form-category-selection\");\r\n    categoryModal.classList.remove(\"hide-form-category-modal\");\r\n    categoryModal.innerText = \"\";\r\n    categoryModal.style.height = `${length * 32}px`;\r\n    createCategoryOptions(categoryModal, categories)\r\n\r\n    if (categoryModal.childElementCount > 0) {\r\n      categoryModal.onclick = delegateCategorySelection;\r\n    }\r\n    formModalOverlay.classList.remove(\"hide-form-overlay\");\r\n    formModalOverlay.onclick = closeCategoryModal;\r\n  }\r\n\r\n  function dragFormAnywhere(e) {\r\n    const target = e.target;\r\n    const wrapper = entriesFormWrapper;\r\n    if (wrapper.style.margin === \"auto\") {\r\n      wrapper.setAttribute(\"style\", `left:${+wrapper.offsetLeft}px;top:${+wrapper.offsetTop}px;margin:0;max-width:450px;height:420px;`)\r\n    }\r\n\r\n    wrapper.style.opacity = \"0.8\";\r\n    wrapper.style.userSelect = \"none\";\r\n    let [leftBefore, topBefore] = [e.clientX, e.clientY];\r\n    const [winH, winW] = [window.innerHeight, window.innerWidth];\r\n\r\n    function mousemove(e) {\r\n      let [leftAfter, topAfter] = [\r\n        leftBefore - e.clientX, topBefore - e.clientY\r\n      ];\r\n\r\n      leftBefore = e.clientX;\r\n      topBefore = e.clientY;\r\n\r\n      if ((wrapper.offsetHeight + wrapper.offsetTop) > winH) {\r\n        wrapper.style.top = winH - wrapper.offsetHeight + \"px\";\r\n      }\r\n\r\n      wrapper.style.top = wrapper.offsetTop - topAfter + \"px\";\r\n      wrapper.style.left = wrapper.offsetLeft - leftAfter + \"px\";\r\n    }\r\n\r\n    function mouseup() {\r\n      wrapper.style.opacity = \"1\";\r\n      wrapper.style.userSelect = \"all\";\r\n      document.removeEventListener(\"mousemove\", mousemove);\r\n      document.removeEventListener(\"mouseup\", mouseup);\r\n    }\r\n    document.addEventListener(\"mousemove\", mousemove);\r\n    document.addEventListener(\"mouseup\", mouseup);\r\n  }\r\n\r\n  function delegateCategorySelection(e) {\r\n    if (getClosest(e, \".category-modal--category\")) {\r\n      handleCategorySelection(e);\r\n    }\r\n  }\r\n\r\n  function delegateEntryFormEvents(e) {\r\n    // header\r\n    const dragHeader = getClosest(e, \".form-header--dragarea\");\r\n    const closeicon = getClosest(e, \".form--header__icon-close\");\r\n\r\n    // form inputs\r\n    const startdate = getClosest(e, \".form--body-start__date\");\r\n    const enddate = getClosest(e, \".form--body-end__date\");\r\n    const category = getClosest(e, \".form--body__category-modal--wrapper-selection\");\r\n\r\n    // error msg : <input> / <textarea>\r\n    const inputError = getClosest(e, \".form-input-error\");\r\n\r\n    // error msg : custom inputs (date / time)\r\n    const customInputError = getClosest(e, \".form-input-error__custom-input\");\r\n\r\n    // form footer buttons\r\n    const clearbtn = getClosest(e, \".form--footer__button-cancel\");\r\n    const submitbtn = getClosest(e, \".form--footer__button-save\");\r\n\r\n    if (dragHeader) {\r\n      dragFormAnywhere(e);\r\n      return;\r\n    }\r\n\r\n    if (closeicon) {\r\n      handleFormClose(e);\r\n      return;\r\n    }\r\n\r\n    if (startdate) {\r\n      handleSetDate(e, \"start\");\r\n      return;\r\n    }\r\n\r\n    if (enddate) {\r\n      handleSetDate(e, \"end\");\r\n      return;\r\n    }\r\n\r\n    if (category) {\r\n      openCategoryModal(e, categories);\r\n      return;\r\n    }\r\n\r\n    if (inputError) {\r\n      removeErrorMessages(e);\r\n      return;\r\n    }\r\n\r\n    if (customInputError) {\r\n      removeErrorMessages(e);\r\n      return;\r\n    }\r\n\r\n    if (clearbtn) {\r\n      entriesForm.reset();\r\n      setFormInitialValues();\r\n      closeCategoryModal();\r\n      return;\r\n    }\r\n\r\n    if (submitbtn) {\r\n      handleFormSubmission(e);\r\n      return;\r\n    }\r\n  }\r\n\r\n  function delegateFormKeyDown(e) {\r\n    if (!datepicker.classList.contains(\"hide-datepicker\")) {\r\n      return;\r\n    } else {\r\n\r\n      if (e.key === \"Escape\") {\r\n        handleFormClose(e);\r\n      }\r\n\r\n      if (e.key === \"Enter\") {\r\n        handleFormSubmission(e);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  titleInput.blur()\r\n  setFormInitialValues()\r\n}","import locales from \"../../locales/en\"\r\nclass FormConfig {\r\n  constructor() {\r\n    this.monthNames = locales.labels.monthsShort;\r\n    this.headerOffset = document.querySelector(\".header\");\r\n    this.form = document.querySelector(\".entries__form\");\r\n    this.formBody = document.querySelector(\".entries__form--body\");\r\n    this.formTitleDescription = document.querySelectorAll(\".form-body-single\");\r\n    this.formStartEndCtg = document.querySelectorAll(\".form-body-double\");\r\n    this.formsubmitbtn = document.querySelector(\".form--footer__button-save\");\r\n    this.formCategoryWrapper = document.querySelector(\".form--body__category-modal--wrapper\");\r\n    this.formCategorySelect = document.querySelector(\".form--body__category-modal--wrapper-selection\");\r\n    this.formCategoryWrapperIcon = document.querySelector(\".form--body__category-modal--wrapper__color\");\r\n    this.formCategoryTitle = document.querySelector(\".form--body__category-modal--wrapper__title\");\r\n  }\r\n\r\n  setFormStyle([...args]) {\r\n    const [top, left, bottom, right, margin, mWidth] = args;\r\n    this.form.style.top = `${top}px`;\r\n    this.form.style.left = `${left}px`;\r\n    this.form.style.bottom = `${bottom}px`;\r\n    this.form.style.right = `${right}px`;\r\n    this.form.style.margin = `${typeof margin === \"string\" ? margin : margin + \"px\"}`;\r\n    this.form.style.maxWidth = `${mWidth}px`;\r\n\r\n    if (mWidth < 450) {\r\n      this.formBody.classList.add(\"form-body-xs\");\r\n      this.formTitleDescription.forEach((el) => {\r\n        el.classList.add(\"form-body-single-xs\");\r\n      });\r\n      this.formStartEndCtg.forEach((el) => {\r\n        el.classList.add(\"form-body-double-xs\");\r\n        el.firstElementChild.classList.add(\"hide-form-body-icon\");\r\n      });\r\n    }\r\n  }\r\n\r\n  setFormSubmitType(type, id) {\r\n    this.formsubmitbtn.setAttribute(\"data-form-action\", type);\r\n    this.formsubmitbtn.setAttribute(\r\n      \"data-form-entry-id\", \r\n      id === null ? id = \"\" : id\r\n    );\r\n  }\r\n\r\n  configFormPosition(cell, coordinates, top) {\r\n    const [x, y] = coordinates;\r\n    const cellWidth = cell.offsetWidth;\r\n    const cellHeight = cell.offsetHeight;\r\n    const cellTop = cell.offsetTop;\r\n    const cellLeft = cell.offsetLeft;\r\n    const windowWidth = window.innerWidth;\r\n\r\n    let setTop = top + this.headerOffset.offsetHeight;\r\n    let setMaxWidth = 380;\r\n    let [setLeft, setBottom, setRight, setMargin] = [0, 0, 0, 0];\r\n\r\n    // determine which side of the cell to open the form\r\n    if (x === 3) {\r\n      setMargin = \"0 auto\";\r\n    } else {\r\n      if (x < 3) {\r\n        setLeft = cellWidth * (x + 1);\r\n      } else {\r\n        setLeft = cellWidth * (x - 4);\r\n      }\r\n\r\n      // if (y >= 3) {\r\n      //   setTop = cellHeight * (y - 2);\r\n      // } else {\r\n      // }\r\n    }\r\n\r\n    this.setFormStyle([setTop, setLeft, setBottom, setRight, setMargin, setMaxWidth]);\r\n  }\r\n\r\n  configFormTitleDescriptionInput(title, description) {\r\n    this.formTitleDescription.forEach((input, idx) => {\r\n      input.firstElementChild.value = [title, description][idx]\r\n    })\r\n  }\r\n\r\n  setFormDateInput(input, date, minutes, dateFormatted) {\r\n    input.setAttribute(\r\n      \"data-form-time\", \r\n      `${date.getHours()}:${minutes}`\r\n    );\r\n    input.setAttribute(\"data-form-date\", dateFormatted)\r\n    input.textContent = `${this.monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`\r\n  }\r\n\r\n  setFormDatepickerDate(context, datepickerContext, start) {\r\n    start = new Date(start);\r\n    context.setDateSelected(start.getDate());\r\n    datepickerContext.setDate(\r\n      context.getYear(),\r\n      context.getMonth(),\r\n      context.getDay(),\r\n    );\r\n    datepickerContext.setDateSelected(start.getDate());\r\n  }\r\n\r\n  configFormDateInputs(dates) {\r\n    for (let i = 0; i < 2; i++) {\r\n      this.setFormDateInput(\r\n        this.formStartEndCtg[i].lastElementChild.firstElementChild, \r\n        dates.dateObj[i], \r\n        dates.minutes[i], \r\n        dates.formatted[i],\r\n      );\r\n    }\r\n  }\r\n\r\n  configFormCategoryInput(categoryData) {\r\n    const [title, color, offsetColor] = categoryData;\r\n    this.formCategoryWrapper.setAttribute(\"data-form-category\", title)\r\n    this.formCategorySelect.style.backgroundColor = offsetColor;\r\n    this.formCategoryWrapperIcon.style.backgroundColor = color;\r\n    this.formCategoryTitle.textContent = title;\r\n  }\r\n\r\n  getConfig(data) {\r\n    this.setFormSubmitType(\r\n      data.submission.type,\r\n      data.submission.id\r\n    );\r\n\r\n    this.configFormCategoryInput([\r\n      data.category.name,\r\n      data.category.color,\r\n      data.category.offsetColor\r\n    ]);\r\n\r\n    this.configFormPosition(\r\n      data.position.cell,\r\n      data.position.coordinates,\r\n      data.position.offsetTop\r\n    );\r\n\r\n    this.configFormDateInputs(\r\n      data.dates.object\r\n    );\r\n\r\n    if (data.submission.type === \"edit\") {\r\n      this.configFormTitleDescriptionInput(\r\n        data.submission.title,\r\n        data.submission.description\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst fullFormConfig = new FormConfig()\r\nexport default fullFormConfig","import locales from \"../../locales/en\"\r\nimport setViews from \"../../config/setViews\"\r\nimport setSidebarDatepicker from \"../menus/sidebarDatepicker\";\r\nconst monthsArray = locales.labels.monthsShortLower;\r\nconst monthsArrayLong = locales.labels.monthsLongLower;\r\nconst gotoOverlay = document.querySelector(\".go-to-date-overlay\");\r\nconst goto = document.querySelector(\".go-to-date\")\r\nconst gotoInput = document.querySelector(\".go-to-input\")\r\nconst inputErrMessage = document.querySelector(\".go-to-err\");\r\nconst cancelGoto = document.querySelector(\".cancel-go-to\")\r\nconst submitGoto = document.querySelector(\".submit-go-to\")\r\nexport default function createGoTo(context, store, datepickerContext) {\r\n  function validateDate(date) {\r\n    let arr;\r\n    let haserr = false;\r\n\r\n    // accepts two formats: DD/MM/YYYY or jan 1 2021\r\n    if (date.includes(\"/\")) {\r\n      arr = date.split(\"/\");\r\n    } else {\r\n      arr = date.split(\" \");\r\n    }\r\n\r\n    if (arr.length !== 3) {\r\n      haserr = true;\r\n    } \r\n\r\n    // convert string year/month/day to int\r\n    // convert 'jan' to 0 || 'january' to 0\r\n    const [month, day, year] = arr.map((date, idx) => {\r\n      let dateInt = parseInt(date);\r\n      let tempMonth = null; // in case of month string\r\n\r\n\r\n      if (isNaN(dateInt)) {\r\n        if (date.length > 3) {\r\n          tempMonth = monthsArrayLong.indexOf(date.toLowerCase());\r\n        } else {\r\n          tempMonth = monthsArray.indexOf(date.toLowerCase());\r\n        }\r\n      }\r\n\r\n      if (idx === 0 && tempMonth === null) {\r\n        dateInt -= 1;\r\n        if (dateInt === -1) {\r\n          dateInt = 0;\r\n        }\r\n      }\r\n\r\n      if (tempMonth === -1) {\r\n        haserr = true;\r\n      }\r\n\r\n      // check if year is valid\r\n      // if user inputs value less than 100, assume they mean 2000s\r\n      // do not allow year greater than 2100 or less than 1901\r\n      if (idx === 2) {\r\n        if (dateInt < 100) {\r\n          dateInt += 2000;\r\n        } else if (dateInt > 2100) {\r\n          haserr = true;\r\n        } else if (dateInt > 100 && dateInt < 1901) {\r\n          haserr = true;\r\n        }\r\n      } \r\n\r\n      return tempMonth === null ? dateInt : tempMonth;\r\n    })\r\n\r\n\r\n    // form date object and check if valid\r\n    const dateObj = new Date(year, month, day);\r\n    if (dateObj.toString() === \"Invalid Date\") {\r\n      haserr = true;\r\n    }\r\n\r\n    return haserr ? false : dateObj;\r\n  }\r\n\r\n  function removeError() {\r\n    inputErrMessage.style.display = \"none\";\r\n    inputErrMessage.onmousedown = null;\r\n  }\r\n\r\n  function handleError() {\r\n    inputErrMessage.style.display = \"block\";\r\n    inputErrMessage.onmousedown = removeError;\r\n  }\r\n\r\n  function handleGoTo() {\r\n    const newdate = validateDate(gotoInput.value);\r\n    if (newdate instanceof Date) {\r\n      context.setDate(\r\n        newdate.getFullYear(),\r\n        newdate.getMonth(),\r\n        newdate.getDate()\r\n      )\r\n\r\n      context.setDateSelected(newdate.getDate())\r\n      if (context.getSidebarState() !== \"hide\") {\r\n        setSidebarDatepicker(context, store, datepickerContext)\r\n      }\r\n      \r\n      let component = context.getComponent();\r\n      if (component === 'list') {\r\n        component = 'day';\r\n      }\r\n      \r\n      closeGoTo();\r\n      setViews(component, context, store, datepickerContext);\r\n    } else {\r\n      handleError();\r\n    }\r\n  }\r\n\r\n  function closeGoToOnEscape(e) {\r\n    const key = e.key.toLowerCase();\r\n    if (key === \"escape\") {\r\n      if (inputErrMessage.style.display === \"block\") {\r\n        removeError();\r\n      } else {\r\n        closeGoTo();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (key === \"enter\") {\r\n      handleGoTo();\r\n      return;\r\n    }\r\n  }\r\n\r\n  function closeGoTo() {\r\n    document.removeEventListener(\"keydown\", closeGoToOnEscape);\r\n    store.removeActiveOverlay(\"hide-gotodate\");\r\n    gotoOverlay.classList.add(\"hide-gotodate\");\r\n    goto.classList.add(\"hide-gotodate\");\r\n    gotoInput.value = \"\";\r\n  }\r\n\r\n  function formatStart() {\r\n    const [year, month, day] = [\r\n      context.getYear(),\r\n      context.getMonth(),\r\n      context.getDay(),\r\n    ];\r\n    return `${monthsArray[month]} ${day} ${year}`;\r\n  }\r\n\r\n  function openGoTo() {\r\n    // prevent keyboard shortcut from being registering in input field onload\r\n    removeError()\r\n    setTimeout(() => {\r\n      gotoInput.focus()\r\n      gotoInput.value = formatStart()\r\n    }, 10) // 10ms is within browser threshold\r\n    gotoOverlay.classList.remove(\"hide-gotodate\");\r\n    goto.classList.remove(\"hide-gotodate\");\r\n    store.addActiveOverlay(\"hide-gotodate\");\r\n    document.addEventListener(\"keydown\", closeGoToOnEscape);\r\n    cancelGoto.onclick = closeGoTo;\r\n    submitGoto.onclick = handleGoTo;\r\n  }\r\n\r\n  openGoTo()\r\n}","export default class FormSetup {\r\n  constructor() {\r\n    this.submission;\r\n    this.category;\r\n    this.position;\r\n    this.dates;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} type (\"edit\" / \"create\")\r\n   * @param {string} id (entry ID || null)\r\n   * @param {string} title || null\r\n   * @param {string} description || nulll\r\n   */\r\n  setSubmission(type, id, title, description) {\r\n    this.submission = {\r\n      type: type,\r\n      id: id || null,\r\n      title: title || null,\r\n      description: description || null,\r\n    }\r\n    console.log(this.submission)\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} name (store category name)\r\n   * @param {string} color (store category color)\r\n   * @param {string} offsetColor (category color rgba 0.5)\r\n   */\r\n  setCategory(name, color, offsetColor) {\r\n    this.category = {\r\n      name: name,\r\n      color: color,\r\n      offsetColor: offsetColor,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {number} cell \r\n   * @param {[number, number]} coordinates (x, y) of grid\r\n   * @param {number} offsetTop (e.pageY - scrollTop of grid)\r\n   */\r\n  setPosition(cell, coordinates, offsetTop) {\r\n    this.position = {\r\n      cell: cell,\r\n      coordinates: coordinates,\r\n      offsetTop: offsetTop,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {object} \r\n   * : {Dates: [new Date(start), new Date(end)]}\r\n   * : {Dates: [start(\"YYYY-MM-DD\"), end(\"YYYY-MM-DD\")]}\r\n   * : {Minutes: [number, number]}\r\n   */\r\n  setDates(object) {\r\n    this.dates = { object: object }\r\n  }\r\n\r\n  getSetup() {\r\n    return {\r\n      submission: this.submission,\r\n      category: this.category,\r\n      position: this.position,\r\n      dates: this.dates,\r\n    }\r\n  }\r\n}","import { getClosest } from \"../../utilities/helpers\"\r\nimport { \r\n  getDateForStore, \r\n  compareDates, \r\n  getDateFromAttribute,\r\n  isBeforeDate\r\n} from \"../../utilities/dateutils\";\r\nimport setViews from \"../../config/setViews\";\r\n\r\nconst datepicker = document.querySelector(\".datepicker\");\r\nconst datepickeroverlay = document.querySelector(\".datepicker-overlay\")\r\nconst datepickerBody = document.querySelector(\".datepicker__body--dates\");\r\nconst datepickerTitle = document.querySelector(\".datepicker-title\");\r\n// prev and next buttons aside from main app header datewrapper\r\nconst headerPrevBtn = document.querySelector(\".prev\")\r\nconst headerNextBtn = document.querySelector(\".next\")\r\n\r\n\r\nexport default function setDatepicker(context, store, datepickerContext, type) {\r\n  let montharray = datepickerContext.getMonthArray();\r\n  let count = 0;\r\n  let hasweek;\r\n\r\n  function setDatepickerHeader() {\r\n    const y = datepickerContext.getYear()\r\n    const m = datepickerContext.getMonthName()\r\n    datepickerTitle.textContent = `${m} ${y}`\r\n  }\r\n\r\n  function createCells(montharray) {\r\n    let groupedEntries = store.getMonthEntryDates(montharray)\r\n    let currentWeekStart = context.getWeek();\r\n\r\n    datepickerBody.innerText = \"\";\r\n    for (let i = 0; i < montharray.length; i++) {\r\n      const cell = document.createElement(\"div\");\r\n      const datename = document.createElement(\"div\");\r\n      cell.classList.add(\"datepicker__body--dates-cell\");\r\n      datename.classList.add(\"datepicker__body--datename\");\r\n\r\n      if (montharray[i].getMonth() !== datepickerContext.getMonth()) {\r\n        datename.classList.add(\"datepicker__body--datename-disabled\");\r\n      }\r\n\r\n      if (compareDates(montharray[i], currentWeekStart) && context.getComponent() === \"week\") {\r\n        hasweek = true;\r\n      }\r\n\r\n      if (hasweek) {\r\n        count++\r\n        if (count <= 7) {\r\n          cell.classList.add(\"datepicker__body--dates-week\")\r\n        }\r\n      } else {\r\n        cell.classList.remove(\"datepicker__body--dates-week\")\r\n      }\r\n\r\n      if (montharray[i].getDate() === context.getDateSelected() && montharray[i].getMonth() === datepickerContext.getMonth()) {\r\n        if (!datename.classList.contains(\"datepicker__body--datename-today\")) {\r\n          datename.setAttribute(\"class\", \"datepicker__body--datename\")\r\n          datename.classList.add(\"datepicker__body--datename-selected\");\r\n        }\r\n      }\r\n\r\n      if (context.isToday(montharray[i])) {\r\n        datename.setAttribute(\"class\", \"datepicker__body--datename\")\r\n        datename.classList.add(\"datepicker__body--datename-today\");\r\n      }\r\n\r\n      datename.innerText = montharray[i].getDate();\r\n      const formattedDate = getDateForStore(montharray[i])\r\n\r\n      datename.setAttribute(\"data-datepicker-date\", formattedDate);\r\n      if (groupedEntries.includes(formattedDate)) {\r\n        if (!datename.classList.contains(\"datepicker__body--datename-today\") && !datename.classList.contains(\"datepicker__body--datename-selected\")) {\r\n          datename.setAttribute(\"class\", \"datepicker__body--datename\")\r\n          datename.classList.add(\"datepicker__body--datename-entries\")\r\n        }\r\n      } else {\r\n        datename.classList.remove(\"datepicker__body--datename-entries\")\r\n      }\r\n\r\n      cell.appendChild(datename)\r\n      datepickerBody.appendChild(cell);\r\n    }\r\n\r\n    currentWeekStart = null;\r\n    groupedEntries = []\r\n  }\r\n\r\n  function closeDatepicker() {\r\n    datepicker.classList.add(\"hide-datepicker\");\r\n    datepickeroverlay.classList.add(\"hide-datepicker-overlay\")\r\n    const formOpen = store.getActiveOverlay().has(\"hide-form-overlay\");\r\n    const listOpen = context.getComponent() !== \"list\";\r\n    if (listOpen || !formOpen) {\r\n      headerPrevBtn.removeAttribute(\"style\");\r\n      headerNextBtn.removeAttribute(\"style\");\r\n    }\r\n    montharray = []\r\n\r\n    if (type === \"form\") {\r\n      document.querySelector(\".active-form-date\")?.classList.remove(\"active-form-date\")\r\n    }\r\n\r\n    document.removeEventListener(\"keydown\", handleKeydownNav)\r\n  }\r\n\r\n  function renderpicker(y, m, d) {\r\n    context.setDate(y, m, d)\r\n    context.setDateSelected(d)\r\n    setViews(context.getComponent(), context, store, datepickerContext);\r\n    datepickerContext.setDate(y, m, d)\r\n    closeDatepicker()\r\n  }\r\n\r\n  function handleFormDate(y, m, d) {\r\n    datepickerContext.setDate(y, m, d)\r\n    context.setDateSelected(d)\r\n    const datepickerDate = datepickerContext.getDate()\r\n\r\n    const activeFormDate = document.querySelector(\".active-form-date\")\r\n    activeFormDate.setAttribute(\"data-form-date\", `${y}-${m}-${d}`)\r\n    activeFormDate.textContent = `${datepickerContext.getMonthName().slice(0, 3)} ${d}, ${y}`\r\n\r\n    const inactiveFormDate = document?.querySelector(\".inactive-form-date\")\r\n    const inactiveValue = inactiveFormDate.getAttribute(\"data-form-date\").split(\"-\").map(x => parseInt(x))\r\n    const inactiveDate = new Date(inactiveValue[0], inactiveValue[1], inactiveValue[2])\r\n    const inactiveDateType = inactiveFormDate.getAttribute(\"data-form-date-type\")\r\n\r\n    /**\r\n     * FORM DATEPICKER CONDITIONS\r\n     * 1. if user selects start date that is after end date\r\n     *   -- set end date to start date\r\n     * 2. if user selects end date that is before start date\r\n     *  -- set start date to end date\r\n     */\r\n    if ((isBeforeDate(inactiveDate, datepickerDate) && inactiveDateType === \"end\") || (isBeforeDate(datepickerDate, inactiveDate) && inactiveDateType === \"start\")) {\r\n      inactiveFormDate.setAttribute(\"data-form-date\", `${y}-${m}-${d}`)\r\n      inactiveFormDate.textContent = `${datepickerContext.getMonthName().slice(0, 3)} ${d}, ${y}`\r\n    }\r\n  }\r\n\r\n  function setNewDate(e) {\r\n    const [y, m, d] = getDateFromAttribute(e.target, \"data-datepicker-date\")\r\n    if (type === \"form\") {\r\n      handleFormDate(y, m, d)\r\n      closeDatepicker()\r\n    } else {\r\n      renderpicker(y, m, d)\r\n    }\r\n  }\r\n\r\n  function renderNextMonth() {\r\n    datepickerContext.setNextMonth()\r\n    montharray = datepickerContext.getMonthArray()\r\n    createCells(montharray)\r\n    setDatepickerHeader()\r\n  }\r\n\r\n  function renderPrevMonth() {\r\n    datepickerContext.setPrevMonth()\r\n    montharray = datepickerContext.getMonthArray()\r\n    createCells(montharray)\r\n    setDatepickerHeader()\r\n  }\r\n\r\n  function setSelectedToNextDay() {\r\n    console.log(datepickerContext.getDateSelected())\r\n  }\r\n\r\n  function delegateDatepickerEvents(e) {\r\n    const datenumber = getClosest(e, \".datepicker__body--datename\")\r\n    const navnext = getClosest(e, \".datepicker-nav--next\")\r\n    const navprev = getClosest(e, \".datepicker-nav--prev\")\r\n\r\n    if (datenumber) {\r\n      setNewDate(e)\r\n      return;\r\n    }\r\n\r\n    if (navnext) {\r\n      renderNextMonth()\r\n      return;\r\n    }\r\n\r\n    if (navprev) {\r\n      renderPrevMonth()\r\n      return;\r\n    }\r\n  }\r\n\r\n  function handleKeydownNav(e) {\r\n    switch (e.key) {\r\n      case \"ArrowDown\":\r\n        renderPrevMonth();\r\n        break;\r\n      case \"ArrowUp\":\r\n        renderNextMonth();\r\n        break;\r\n      case \"ArrowRight\":\r\n        setSelectedToNextDay();\r\n        break;\r\n      case \"Escape\":\r\n        closeDatepicker();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const initDatepicker = () => {\r\n    datepickeroverlay.addEventListener(\"click\", e => {\r\n      closeDatepicker()\r\n    }, { once: true })\r\n    setDatepickerHeader();\r\n    createCells(montharray);\r\n    datepicker.onmousedown = delegateDatepickerEvents;\r\n    document.addEventListener(\"keydown\", handleKeydownNav);\r\n    montharray = [];\r\n    store.setResetDatepickerCallback(closeDatepicker)\r\n  }\r\n  initDatepicker()\r\n}\r\n","import locales from \"../../locales/en\"\r\nimport { createCheckIcon } from \"../../utilities/svgs\";\r\nconst checkIcon = createCheckIcon('var(--taskcolor');\r\nconst colors = Object.values(locales.colors)\r\n\r\nclass CatFormHelper {\r\n  constructor(catname, catcolor) {\r\n    this.catname = catname;\r\n    this.catcolor = catcolor;\r\n    this.errMsg = '';\r\n    this.prevColorIdx = catcolor;\r\n    this.originalName = catname;\r\n    this.originalColor = catcolor;\r\n  }\r\n  setName(name) {this.catname = name;}\r\n  setColor(color) {this.catcolor = color;}\r\n  setPrevColor(color) {this.prevColorIdx = color;}\r\n  getName() {return this.catname;}\r\n  getColor() {return this.catcolor;}\r\n  prevColor() {return this.prevColorIdx;}\r\n  setErrMsg(msg) {this.errMsg = msg;}\r\n  getErrMsg() {return this.errMsg;}\r\n  getOriginalName() {return this.originalName;}\r\n  getOriginalColor() {return this.originalColor;}\r\n}\r\n\r\nconst ctgform = document.querySelector(\".category__form\")\r\nconst ctgformoverlay = document.querySelector(\".category__form-overlay\")\r\nconst ctgformBody = document.querySelector(\".category__form--body\")\r\nconst ctgformInput = document.querySelector(\".category__form-input\")\r\nconst colorPickerTitle = document.querySelector(\".color-picker__title\")\r\nconst colorPickerOptions = document.querySelector(\".color-picker__options\");\r\nconst ctgErrMsg = document.querySelector(\".ctg-input--err\")\r\n\r\nexport default function createCategoryForm(store, selectedCategory, editing, resetParent) {\r\n\r\n  const formhelper = new CatFormHelper(\r\n    selectedCategory.name,\r\n    selectedCategory.color\r\n  );\r\n\r\n  function createColorOption(color, selected) {\r\n    const colorOption = document.createElement(\"div\");\r\n    colorOption.classList.add(\"color-picker--option\");\r\n    colorOption.style.backgroundColor = color;\r\n    colorOption.setAttribute(\"data-color-hex\", color)\r\n\r\n    if (color === selected) {\r\n      colorOption.append(checkIcon);\r\n      formhelper.setColor(color);\r\n    }\r\n\r\n    return colorOption;\r\n  }\r\n\r\n  function createPickerOptions(currentColor) {\r\n    colorPickerOptions.innerText = \"\";\r\n    colors.forEach((color) => {\r\n      for (let i = 1; i < 8; i++) {\r\n        colorPickerOptions.append(\r\n          createColorOption(color[i], currentColor)\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  function handleColorSelection(e, current) {\r\n    const target = e.target;\r\n    const color = target.getAttribute(\"data-color-hex\");\r\n\r\n    if (color === current) return;\r\n\r\n    const colorOptions = document.querySelectorAll(\".color-picker--option\");\r\n    colorOptions.forEach((option) => {\r\n      option.innerText = \"\";\r\n    })\r\n    target.appendChild(checkIcon);\r\n    colorPickerTitle.style.background = color;\r\n    formhelper.setColor(color);\r\n  }\r\n\r\n  function handleInputErr() {\r\n    const removeInputErr = () => {\r\n      ctgErrMsg.classList.add(\"hide-ctg-err\");\r\n      ctgformInput.focus();\r\n    }\r\n    ctgErrMsg.textContent = formhelper.getErrMsg();\r\n    ctgErrMsg.onclick = removeInputErr;\r\n  }\r\n\r\n  function validateNewCategory(categoryName, color) {\r\n    const trimName = categoryName.trim().replace(/[^a-zA-Z0-9\\s_-]+|\\s{2,}/g, ' ');\r\n    const origName = formhelper.getOriginalName();\r\n    // const [origNameIdx, newNameIdx] = [\r\n    //   store.getCategoryIndex(origName)\r\n    // ]\r\n\r\n    let errormsg = false;\r\n    if (trimName.length < 1) {\r\n      formhelper.setErrMsg(\"Category name is required\");\r\n      errormsg = true;\r\n    } else if (store.hasCtg(trimName)) {\r\n      if (!editing || (editing && origName !== trimName)) {\r\n        formhelper.setErrMsg(\"Category already exists\");\r\n        errormsg = true;\r\n      }\r\n    }\r\n\r\n\r\n    if (errormsg) {\r\n      ctgErrMsg.classList.remove(\"hide-ctg-err\");\r\n      handleInputErr(errormsg);\r\n      return;\r\n    } else {\r\n      console.log('ran')\r\n      if (editing) {\r\n        if (origName === trimName && formhelper.getOriginalColor() === color) {\r\n          closeCategoryForm();\r\n          return;\r\n        } else {\r\n          if (origName !== trimName){\r\n            store.updateCtg(trimName, color, formhelper.getName());\r\n          } else {\r\n            store.updateCtgColor(origName, color);\r\n          }\r\n        }\r\n      } else {\r\n        store.addNewCtg(trimName, color);\r\n      }\r\n\r\n      const fullrenderCtg = store.getRenderCategoriesCallback();\r\n      closeCategoryForm();\r\n      fullrenderCtg();\r\n    }\r\n  }\r\n\r\n  function closeCategoryForm() {\r\n    if (resetParent !== null) {\r\n      resetParent.removeAttribute(\"style\");\r\n    }\r\n\r\n    ctgform.classList.add(\"hide-ctg-form\");\r\n    ctgformoverlay.classList.add(\"hide-ctg-form\");\r\n    ctgformInput.value = \"\";\r\n    ctgErrMsg.classList.add(\"hide-ctg-err\");\r\n    store.removeActiveOverlay('hide-ctg-form');\r\n    document.removeEventListener(\"keydown\", closeCategoryFormOnEsc);\r\n  }\r\n\r\n  function closeCategoryFormOnEsc(e) {\r\n    const val = e.key.toLowerCase()\r\n    if (val === \"escape\") {\r\n      if (!ctgErrMsg.classList.contains(\"hide-ctg-err\")) {\r\n        ctgErrMsg.classList.add(\"hide-ctg-err\");\r\n        ctgformInput.focus();\r\n        return;\r\n      } else {\r\n        closeCategoryForm();\r\n        return;\r\n      }\r\n    }\r\n    if (val === \"enter\") {\r\n      validateNewCategory(ctgformInput.value, formhelper.getColor());\r\n      return;\r\n    }\r\n  }\r\n\r\n  function openCtgForm(editing) {\r\n    store.addActiveOverlay(\"hide-ctg-form\");\r\n    ctgformoverlay.classList.remove(\"hide-ctg-form\");\r\n    ctgform.classList.remove(\"hide-ctg-form\");\r\n    ctgErrMsg.classList.add(\"hide-ctg-err\");\r\n    colorPickerTitle.style.backgroundColor = formhelper.getColor();\r\n    setTimeout(() => {\r\n      if (editing) {\r\n        ctgformInput.value = formhelper.getName();\r\n      } else {\r\n        ctgformInput.placeholder = \"Enter Category Name\";\r\n      }\r\n      ctgformInput.focus();\r\n    }, 10)\r\n  }\r\n\r\n  function gc(e, element) {\r\n    return e.target.closest(element)\r\n  }\r\n\r\n  function delegateCtgForm(e) {\r\n    const cancelctgBtn = gc(e, \".category__form--cancel\");\r\n    const colorOption = gc(e, \".color-picker--option\");\r\n    const submitctgBtn = gc(e, \".category__form--submit\");\r\n\r\n    if (cancelctgBtn) {\r\n      closeCategoryForm(e);\r\n      return;\r\n    }\r\n\r\n    if (colorOption) {\r\n      handleColorSelection(e, formhelper.getColor());\r\n      return;\r\n    }\r\n\r\n    if (submitctgBtn) {\r\n      validateNewCategory(ctgformInput.value, formhelper.getColor());\r\n      return;\r\n    }\r\n  }\r\n\r\n  const initCtgForm = () => {\r\n    createPickerOptions(formhelper.getColor());\r\n    openCtgForm(editing);\r\n    ctgform.onmousedown = delegateCtgForm;\r\n    ctgformoverlay.onclick = closeCategoryForm;\r\n    document.addEventListener(\"keydown\", closeCategoryFormOnEsc);\r\n  }\r\n\r\n  initCtgForm();\r\n}","import setViews from \"../../config/setViews\";\r\nimport { getClosest } from \"../../utilities/helpers\";\r\nimport createToast from \"../toastPopups/toast\";\r\nimport { taostDeleteEntryWarning } from \"../toastPopups/toastCallbacks\";\r\nimport { formatStartEndTimes } from \"../../utilities/timeutils\";\r\n\r\nimport { \r\n  formatEntryOptionsDate,\r\n  compareDates,\r\n  formatDuration\r\n} from \"../../utilities/dateutils\";\r\n\r\nconst entryOptionsOverlay = document.querySelector(\".entry__options--overlay\");\r\nconst entryOptionsWrapper = document.querySelector('.entry__options');\r\nconst entryOptionsDateHeader = document.querySelector('.entry__options-date');\r\nconst entryOptionsTimeHeader = document.querySelector('.entry__options-time');\r\nconst entryOptionTitle = document.querySelector(\".eob-title\")\r\nconst entryOptionDescription = document.querySelector('.eob-description');\r\nconst entryOptionCategoryIcon = document.querySelector(\".eob-category--icon\")\r\nconst entryOptionCategory = document.querySelector('.eob-category');\r\n\r\nconst reset = [\r\n  entryOptionsDateHeader,\r\n  entryOptionsTimeHeader,\r\n  entryOptionTitle,\r\n  entryOptionDescription,\r\n  entryOptionCategory,\r\n]\r\n\r\nexport default function getEntryOptionModal(context, store, entry,datepickerContext, finishSetup) {\r\n\r\n\r\n  function openEditForm() {\r\n  \r\n    const openForm = store.getRenderFormCallback()\r\n\r\n    openForm();\r\n    console.log(finishSetup)\r\n    finishSetup();\r\n    closeEntryOptions();\r\n  }\r\n\r\n\r\n  function proceedDelete(entry) {\r\n    store.deleteEntry(entry.id);\r\n    closeEntryOptions();\r\n    setViews(context.getComponent(), context, store, datepickerContext);\r\n  }\r\n\r\n  function openDeleteWarning() {\r\n    // formNegated();\r\n    const deletepopup = document.createElement(\"div\");\r\n    deletepopup.classList.add(\"delete-popup\");\r\n\r\n    const deletebtns = document.createElement(\"div\");\r\n    deletebtns.classList.add(\"delete-popup__btns\");\r\n\r\n    const deletepopupCancel = document.createElement(\"button\");\r\n    deletepopupCancel.classList.add(\"delete-popup__cancel\");\r\n    deletepopupCancel.textContent = \"Cancel\";\r\n\r\n    const deletepopupConfirm = document.createElement(\"button\");\r\n    deletepopupConfirm.classList.add(\"delete-popup__confirm\");\r\n    deletepopupConfirm.textContent = \"Delete\";\r\n\r\n    const deletepopupText = document.createElement(\"p\");\r\n    deletepopupText.classList.add(\"delete-popup__text\");\r\n    deletepopupText.textContent = \"Are you sure you want to delete this entry?\";\r\n\r\n    deletebtns.append(deletepopupCancel, deletepopupConfirm)\r\n    deletepopup.append(deletepopupText, deletebtns);\r\n    entryOptionsWrapper.append(deletepopup);\r\n\r\n    const removeDeletePopup = () => {\r\n      deletepopup.remove();\r\n\r\n    }\r\n\r\n    const submitDelete = () => {\r\n      proceedDelete(entry);\r\n      removeDeletePopup();\r\n    }\r\n\r\n    deletepopupCancel.onclick = removeDeletePopup\r\n    deletepopupConfirm.onclick = submitDelete\r\n  }\r\n\r\n  function formNegated() {\r\n    // The form is responsible for resetting the current view\r\n    // If the form is not toggled open from this modal,\r\n    // reset it manually on close\r\n    const resetCurrentView = store.getFormResetHandle(context.getComponent())\r\n    closeEntryOptions()    \r\n    resetCurrentView();\r\n  }\r\n\r\n  function closeEntryOptions() {\r\n    // Close the modal and remove event listeners\r\n    // Only ever called directly if the form is toggled open\r\n    entryOptionsWrapper.classList.add(\"entry__options--hidden\");\r\n    entryOptionsOverlay.classList.add(\"entry__options--hidden\");\r\n    store.removeActiveOverlay(\"entry__options--hidden\")\r\n    entryOptionDescription.parentElement.removeAttribute(\"style\");\r\n    document.removeEventListener(\"keydown\", handleEntryOptionKD);\r\n  }\r\n\r\n  function setEntryDefaults() {\r\n    reset.forEach(el => el.textContent = \"\")\r\n    entryOptionsWrapper.classList.remove(\"entry__options--hidden\");\r\n    entryOptionsOverlay.classList.remove(\"entry__options--hidden\");\r\n    store.addActiveOverlay(\"entry__options--hidden\")\r\n\r\n    const [start, end] = [new Date(entry.start), new Date(entry.end)]\r\n    \r\n    const getDateTime = formatEntryOptionsDate(start, end);\r\n    entryOptionsDateHeader.textContent = getDateTime.date;\r\n    if (getDateTime.time !== null) {\r\n      entryOptionsTimeHeader.textContent = getDateTime.time;\r\n    }\r\n    \r\n    entryOptionTitle.textContent = entry.title;\r\n\r\n    entry.description.length === 0 ? entryOptionDescription.parentElement.style.display = \"none\" : entryOptionDescription.textContent = entry.description;\r\n\r\n    entryOptionCategoryIcon.setAttribute(\"fill\", store.getCtgColor(entry.category))\r\n    entryOptionCategory.textContent = entry.category;\r\n\r\n    entryOptionsWrapper.onmousedown = delegateEntryOptions;\r\n    entryOptionsOverlay.onmousedown = formNegated\r\n    document.addEventListener(\"keydown\", handleEntryOptionKD)\r\n  }\r\n\r\n  function handleEntryOptionKD(e) {\r\n    const deletepopup = document?.querySelector(\".delete-popup\")\r\n    if (e.key === \"Escape\") { \r\n      if (deletepopup) {\r\n        deletepopup.remove();\r\n        return;\r\n      } else {\r\n        formNegated();\r\n      }\r\n    }\r\n  }\r\n\r\n  function delegateEntryOptions(e) {\r\n    const editBtn = getClosest(e, \".eoi__edit\")\r\n    const deleteBtn = getClosest(e, \".eoi__delete\")\r\n    const closeBtn = getClosest(e, \".eoi__close\")\r\n\r\n    if (editBtn) {\r\n      openEditForm();\r\n      return;\r\n    }\r\n\r\n    if (deleteBtn) {\r\n      openDeleteWarning();\r\n      return;\r\n    }\r\n\r\n    if (closeBtn) {\r\n      formNegated();\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  setEntryDefaults()\r\n}","import locales from \"../../locales/en\"\r\nimport { formatStartEndDate } from \"../../utilities/dateutils\"\r\nexport default function setHeader(context, component, store) {\r\n  let temp = new Date()\r\n  const btntoday = document.querySelector(\".btn-today\")\r\n  btntoday.setAttribute(\"data-tooltip\", `${locales.labels.weekdaysLong[temp.getDay()]}, ${locales.labels.monthsLong[temp.getMonth()]} ${temp.getDate()}`)\r\n  \r\n  const dateTimeTitle = document.querySelector(\".datetime-content--title\")\r\n  const header = document.querySelector(\".header\")\r\n  const selectElement = document.querySelector(\".select__modal\")\r\n  const btnprev = document.querySelector('.prev');\r\n  const btnnext = document.querySelector('.next');\r\n  const datetimeWrapper = document.querySelector(\".h-col-2\");\r\n  const datetimeContent = document.querySelector(\".datetime-content\")\r\n\r\n  const configHeader = (borderstyle, componentTitle) => {\r\n    dateTimeTitle.textContent = componentTitle;\r\n    datetimeWrapper.classList.remove(\"datetime-inactive\");\r\n    header.style.borderBottom = borderstyle;\r\n    datetimeWrapper.style.paddingRight = \"0\";\r\n    datetimeContent.removeAttribute(\"style\")\r\n  }\r\n\r\n  const configListHeader = (componentTitle) => {\r\n    dateTimeTitle.textContent = componentTitle;\r\n    header.style.borderBottom = \"1px solid var(--mediumgrey1)\"\r\n    datetimeWrapper.classList.add(\"datetime-inactive\");\r\n  }\r\n\r\n  const setHeaderAttributes = (view) => {\r\n    if (view !== \"list\") {\r\n      btnprev.setAttribute(\"data-tooltip\", `prev ${view}`);\r\n      btnnext.setAttribute(\"data-tooltip\", `next ${view}`);\r\n    }\r\n    selectElement.textContent = view[0].toUpperCase() + view.slice(1);\r\n    selectElement.setAttribute(\"data-value\", view.slice(0, 1).toUpperCase());\r\n  }\r\n\r\n  switch (component) {\r\n    case \"day\":\r\n      configHeader(\"1px solid transparent\", `${context.getMonthName()} ${context.getDay()}, ${context.getYear()}`);\r\n      setHeaderAttributes(\"day\");\r\n      break;\r\n    case \"week\":\r\n      configHeader(\"1px solid transparent\", context.getWeekRange());\r\n      setHeaderAttributes(\"week\");\r\n      break;\r\n    case \"month\":\r\n      configHeader(\"var(--bordergrey)\", `${context.getMonthName()} ${context.getYear()}`);\r\n      setHeaderAttributes(\"month\");\r\n      break;\r\n    case \"year\":\r\n      configHeader(\"1px solid transparent\", context.getYear());\r\n      setHeaderAttributes(\"year\");\r\n      break;\r\n    case \"list\":\r\n      setHeaderAttributes(\"list\");\r\n      header.style.borderBottom = \"1px solid var(--mediumgrey1)\"\r\n      // datetimeWrapper.classList.add(\"datetime-inactive\");\r\n      /*\r\n      \r\n      let [start, end] = store.getFirstAndLastEntry();\r\n      \r\n      !start || !end \r\n      ? configListHeader(\"Schedule Clear\")\r\n      : configListHeader(formatStartEndDate(new Date(), new Date(end), true));\r\n      */\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n","const shortcutsModalOverlay = document.querySelector(\".shortcuts-modal-overlay\")\r\nconst shortcutsModal = document.querySelector(\".shortcuts__modal\")\r\nconst shortcutsModalContent = document.querySelector(\".shortcuts-modal-content\")\r\nconst shortcutsModalClose = document.querySelector(\".close-shortcuts-modal\")\r\nconst notifyShortcutsStatus = document.querySelector(\".keyboard-disabled-sm-two\")\r\nexport default function handleShortCutsModal(store) {\r\n\r\n  function createShortcut(key, description) {\r\n    const shortcut = document.createElement(\"div\");\r\n    shortcut.classList.add(\"sm-item\");\r\n\r\n    const shortcutKey = document.createElement(\"div\");\r\n    shortcutKey.classList.add(\"sm-key\");\r\n    \r\n    const keyone = document.createElement(\"span\")\r\n    if (Array.isArray(key)) {\r\n      const or = document.createElement(\"span\")\r\n      or.textContent = \" or \"\r\n      const keytwo = document.createElement(\"span\")\r\n      keyone.textContent = key[0]\r\n      keytwo.textContent = key[1]\r\n      shortcutKey.append(keyone, or, keytwo)\r\n    } else {\r\n      keyone.textContent = key;\r\n      shortcutKey.appendChild(keyone);\r\n    }\r\n\r\n\r\n    const shortcutDescription = document.createElement(\"div\");\r\n    shortcutDescription.classList.add(\"sm-description\");\r\n    shortcutDescription.textContent = description;\r\n    shortcut.append(shortcutKey, shortcutDescription);\r\n    return shortcut;\r\n  }\r\n\r\n  // close the modal and remove the event listener\r\n  function handleShortcutsModalClose() {\r\n    shortcutsModalOverlay.classList.add(\"hide-shortcuts\")\r\n    shortcutsModal.classList.add(\"hide-shortcuts\")\r\n    store.removeActiveOverlay(\"hide-shortcuts\")\r\n    document.removeEventListener(\"keydown\", closeShortcutsOnKeydown)\r\n  }\r\n\r\n  // provide the ability to close the shortcuts modal with \"escape\" or with the keys that open it\r\n  function closeShortcutsOnKeydown(e) {\r\n    let inp = e.key.toLowerCase();\r\n    if (inp === \"escape\" || inp === \"/\" || inp === \"?\") {\r\n      handleShortcutsModalClose();\r\n    }\r\n  }\r\n\r\n  function setStatusIcon(status) {\r\n    if (status) {\r\n      notifyShortcutsStatus.setAttribute(\"data-tooltip\", \"Keyboard shortcuts enabled\")\r\n      notifyShortcutsStatus.firstElementChild.setAttribute(\"fill\", \"var(--primary1)\")\r\n  \r\n    } else {\r\n      notifyShortcutsStatus.setAttribute(\"data-tooltip\", \"Keyboard shortcuts disabled\")\r\n      notifyShortcutsStatus.firstElementChild.setAttribute(\"fill\", \"var(--red1)\")\r\n    }\r\n  }\r\n\r\n  \r\n  function handleShortcutsModalOpen() {\r\n    shortcutsModalContent.innerText = \"\";\r\n    shortcutsModalOverlay.classList.remove(\"hide-shortcuts\")\r\n    shortcutsModal.classList.remove(\"hide-shortcuts\")\r\n    store.addActiveOverlay(\"hide-shortcuts\")\r\n    \r\n    const status = store.getShortcutsStatus()\r\n    setStatusIcon(status)\r\n\r\n    const shortcuts = store.getShortcuts();\r\n    for (let i = 0; i < Object.values(shortcuts).length; i++) {\r\n      const value = Object.values(shortcuts)[i]\r\n      shortcutsModalContent.appendChild(createShortcut(\r\n        value.shortcut,\r\n        value.action,\r\n      ));\r\n    }\r\n\r\n\r\n    function toggleShortcutsStatus() {\r\n      const status = store.getShortcutsStatus() === false ? true : false;\r\n      setStatusIcon(status);\r\n      store.setShortcutsStatus(status);\r\n    }\r\n\r\n    shortcutsModalOverlay.onclick = handleShortcutsModalClose;\r\n    shortcutsModalClose.onclick = handleShortcutsModalClose;\r\n    notifyShortcutsStatus.onclick = toggleShortcutsStatus;\r\n    document.addEventListener(\"keydown\", closeShortcutsOnKeydown);\r\n  }\r\n\r\n  handleShortcutsModalOpen()\r\n}","import setViews from \"../../config/setViews\"\r\nimport setSidebarDatepicker from \"../menus/sidebarDatepicker\"\r\nimport locales from \"../../locales/en\"\r\n\r\nimport {\r\n  createCheckIcon,\r\n  createEditIcon,\r\n  createCloseIcon,\r\n  createTrashIcon,\r\n} from \"../../utilities/svgs\"\r\n\r\nimport debounce, {\r\n  getClosest,\r\n  hextorgba,\r\n} from \"../../utilities/helpers\"\r\n\r\nimport createCategoryForm from \"./editCategory\"\r\n\r\nconst sidebar = document.querySelector(\".sidebar\")\r\nconst sidebarColTwo = document.querySelector(\".sb__categories\")\r\nconst cWrapper = document.querySelector(\".sb__categories--body\")\r\nconst categoriesContainer = document.querySelector(\".sb__categories--body-form\")\r\nconst sidebarScrollContainer = document.querySelector(\".sidebar-content__wrapper\")\r\nconst categoriesHeader = document.querySelector(\".sb__categories--header\")\r\nconst categoryHeaderCaret = document.querySelector(\".sbch-caret\")\r\n// renders via menu click -- see ./renderViews.js\r\nexport default function handleSidebarCategories(context, store, datepickerContext) {\r\n  const defaultCtg = store.getDefaultCtg()[0]\r\n\r\n  function updateComponent() {\r\n    setViews(context.getComponent(), context, store, datepickerContext)\r\n  }\r\n\r\n  function renderSidebarDatepickerCtg() {\r\n    setSidebarDatepicker(context, store, datepickerContext)\r\n  }\r\n\r\n  function renderCategories() {\r\n    categoriesContainer.innerText = \"\"\r\n    const ctg = store.getAllCtg();\r\n    const keys = Object.keys(ctg);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      let [ctgname, color, status] = [\r\n        keys[i],\r\n        ctg[keys[i]].color,\r\n        ctg[keys[i]].active\r\n      ]\r\n      createCategoryListItem(ctgname, color, status)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} ctgname - category name\r\n   * @param {string} ctgcolor - hex color\r\n   * @param {Boolean} status - checked or not\r\n   */\r\n  function createCategoryListItem(ctgname, ctgcolor, status) {\r\n    const row = document.createElement('div');\r\n    row.classList.add('sbch-form--item');\r\n    const colone = document.createElement('div');\r\n    colone.classList.add('sbch-form--item__col');\r\n    const checkboxWrapper = document.createElement('div');\r\n    checkboxWrapper.classList.add('sbch-form--item__checkbox--wrapper');\r\n    const checkbox = document.createElement('div');\r\n    checkbox.classList.add('sbch-form--item__checkbox');\r\n    checkbox.setAttribute(\"data-sbch-checked\", `${status}`);\r\n    checkbox.setAttribute(\"data-sbch-category\", ctgname);\r\n    let checkIcon;\r\n\r\n    if (status) {\r\n      checkbox.style.backgroundColor = ctgcolor;\r\n      checkIcon = createCheckIcon(\"var(--taskcolor0)\")\r\n    } else {\r\n      checkbox.style.backgroundColor = \"var(--black1)\";\r\n      checkIcon = createCheckIcon(\"none\")\r\n    }\r\n\r\n    checkbox.style.border = `1px solid ${ctgcolor}`;\r\n    checkbox.appendChild(checkIcon)\r\n    checkboxWrapper.appendChild(checkbox)\r\n\r\n    const label = document.createElement('span');\r\n    label.classList.add('sbch-form--item__label');\r\n    label.textContent = ctgname;\r\n    colone.append(checkboxWrapper, label);\r\n\r\n    const coltwo = document.createElement('div');\r\n    coltwo.classList.add('sbch-form--item__col--actions');\r\n    const deleteicon = document.createElement('div');\r\n    deleteicon.classList.add('sbch-col--actions__delete-icon');\r\n    deleteicon.setAttribute(\"data-sbch-category\", ctgname)\r\n    deleteicon.setAttribute(\"data-sbch-color\", ctgcolor)\r\n    const editicon = document.createElement('div');\r\n    editicon.classList.add(\"sbch-col--actions__edit-icon\")\r\n    editicon.setAttribute(\"data-sbch-category\", ctgname)\r\n    editicon.setAttribute(\"data-sbch-color\", ctgcolor)\r\n\r\n    // must have at least one category, so default cannot be deleted\r\n    if (ctgname.toLowerCase() === defaultCtg) {\r\n      editicon.classList.add(\"sbch-col--actions__edit-icon--immutable\")\r\n    } else {\r\n      deleteicon.appendChild(createCloseIcon(\"var(--white2)\"))\r\n      coltwo.appendChild(deleteicon)\r\n    }\r\n\r\n    \r\n    editicon.appendChild(createEditIcon(\"var(--white2)\"))\r\n    coltwo.appendChild(editicon)\r\n    row.append(colone, coltwo)\r\n    categoriesContainer.appendChild(row)\r\n  }\r\n\r\n  function handleCategoryModalToggle() {\r\n    cWrapper.classList.toggle(\"toggle-category--modal\")\r\n    if (!cWrapper.classList.contains(\"toggle-category--modal\")) {\r\n      categoryHeaderCaret.classList.add(\"sbch-caret--open\")\r\n    } else {\r\n      categoryHeaderCaret.classList.remove(\"sbch-caret--open\")\r\n    }\r\n    categoriesHeader.style.backgroundColor = \"var(--black0)\"\r\n    setTimeout(() => {\r\n      categoriesHeader.style.backgroundColor = \"var(--black1)\"\r\n    }, 200)\r\n  }\r\n\r\n  function createDeleteCategoryPopup(e) {\r\n    const ctgname = e.target.getAttribute(\"data-sbch-category\")\r\n    const ctgcolor = store.getCtgColor(ctgname)\r\n    const offsetColor = hextorgba(ctgcolor, 0.8)\r\n    const categoryLength = store.getCtgLength(ctgname)\r\n    let noEntries = false;\r\n\r\n    // POPUP OVERLAY\r\n    const popupBoxOverlay = document.createElement(\"aside\");\r\n    popupBoxOverlay.classList.add(\"popup-delete-ctg__overlay\");\r\n\r\n\r\n    // POPUP BOX\r\n    const popupBox = document.createElement(\"aside\");\r\n    popupBox.classList.add(\"popup-delete-ctg\");\r\n    if (categoryLength === 0) {\r\n      noEntries = true;\r\n      popupBox.classList.add(\"popup-delete-ctg__no-entries\")\r\n    }\r\n    const ord = categoryLength === 1 ? \"entry\" : \"entries\";\r\n\r\n    /* **************************** */\r\n    // POPUP HEADER\r\n    const popupHeader = document.createElement(\"div\");\r\n    popupHeader.classList.add(\"popup-delete-ctg__header\");\r\n\r\n    const popupTitle = document.createElement(\"div\");\r\n    popupTitle.classList.add(\"popup-delete-ctg__title\");\r\n    popupTitle.style.border = `2px solid ${ctgcolor}`;\r\n    popupTitle.style.backgroundColor = offsetColor;\r\n    popupTitle.textContent = `removing – \"${ctgname}\"`;\r\n\r\n    const popupCategoryStats = document.createElement(\"div\");\r\n    popupCategoryStats.classList.add(\"popup-delete-ctg__stats\");\r\n    popupCategoryStats.textContent = `(${categoryLength} total ${ord} in this category)`;\r\n    /* **************************** */\r\n    popupHeader.append(popupTitle, popupCategoryStats);\r\n    popupBox.appendChild(popupHeader)\r\n\r\n\r\n    // category has entries -- provide options to move entries to another category or delete them\r\n    // const setChecked = (inp) => {\r\n    //   inp.checked = true;\r\n    // }\r\n    if (!noEntries) {\r\n      // POPUP BODY\r\n      const popupBody = document.createElement(\"div\");\r\n      popupBody.classList.add(\"popup-delete-ctg__body\");\r\n\r\n      // OPTION ONE : MOVE ENTRIES TO ANOTHER CATEGORY\r\n      const optionsWrapperOne = document.createElement(\"div\");\r\n      const categoryNames = store.getAllCtgNames();\r\n      optionsWrapperOne.classList.add(\"popup-delete-ctg__options\");\r\n      optionsWrapperOne.style.backgroundColor = offsetColor;\r\n      optionsWrapperOne.style.border = `2px solid ${ctgcolor}`\r\n      const optionMoveRadio = document.createElement(\"input\");\r\n      optionMoveRadio.setAttribute(\"type\", \"radio\");\r\n      optionMoveRadio.setAttribute(\"name\", \"popup-delete-ctg__option\");\r\n      optionMoveRadio.setAttribute(\"id\", \"ctg-move\");\r\n      optionMoveRadio.setAttribute(\"checked\", \"true\")\r\n\r\n      const optionMove = document.createElement(\"div\");\r\n      const optionMoveTitle = document.createElement(\"span\");\r\n      const optionMoveSelect = document.createElement(\"select\");\r\n      optionMove.classList.add(\"popup-delete-ctg__option--move\");\r\n      optionMoveTitle.textContent = `Move \"${ctgname}\" ${ord} to another category`;\r\n      optionMoveSelect.classList.add(\"popup-delete-ctg__option--move-select\");\r\n      for (let i = 0; i < categoryNames.length; i++) {\r\n        if (categoryNames[i] === ctgname) continue;\r\n        const option = document.createElement(\"option\");\r\n        option.value = categoryNames[i];\r\n        option.textContent = categoryNames[i];\r\n        optionMoveSelect.appendChild(option);\r\n      }\r\n      optionMove.append(optionMoveTitle, optionMoveSelect);\r\n      optionsWrapperOne.append(optionMoveRadio, optionMove);\r\n      \r\n\r\n      /* ************ */\r\n      // OPTION TWO : REMOVE CATEGORY AND ENTRIES\r\n      const optionsWrapperTwo = document.createElement(\"div\");\r\n      optionsWrapperTwo.classList.add(\"popup-delete-ctg__options\");\r\n      optionsWrapperTwo.style.border = `2px solid ${ctgcolor}`\r\n\r\n      const optionRemoveRadio = document.createElement(\"input\");\r\n      optionRemoveRadio.setAttribute(\"type\", \"radio\");\r\n      optionRemoveRadio.setAttribute(\"name\", \"popup-delete-ctg__option\");\r\n      optionRemoveRadio.setAttribute(\"id\", \"ctg-delete\");\r\n\r\n      const optionRemove = document.createElement(\"div\");\r\n      optionRemove.classList.add(\"popup-delete-ctg__option--remove\");\r\n      const optionRemoveTitle = document.createElement(\"span\");\r\n\r\n      optionRemoveTitle.textContent = `Delete \"${ctgname}\" and ${categoryLength} ${ord} (irreversible)`;\r\n      const optionRemoveIcon = createTrashIcon(ctgcolor);\r\n      const handleWrapperClick = (e) => {\r\n        if (e.target.id === \"ctg-delete\" || e.target.id === \"ctg-move\" || e.target.classList.contains(\"popup-delete-ctg__option--move\")) {\r\n          return;\r\n        } else {\r\n          // optionRemoveRadio.checked = true;\r\n          e.target.closest(\".popup-delete-ctg__options\").querySelector(\"input\").checked = true;\r\n        }\r\n      }\r\n\r\n      optionRemove.append(optionRemoveTitle, optionRemoveIcon)\r\n      optionsWrapperTwo.append(optionRemoveRadio, optionRemove);\r\n      \r\n      popupBody.append(optionsWrapperOne, optionsWrapperTwo);\r\n      popupBox.appendChild(popupBody)\r\n      optionsWrapperOne.onclick = handleWrapperClick;\r\n      optionsWrapperTwo.onclick = handleWrapperClick;\r\n    }\r\n\r\n\r\n    /* **************************** */\r\n    // POPUP FOOTER\r\n    const popupFooter = document.createElement(\"div\");\r\n    popupFooter.classList.add(\"popup-delete-ctg__footer\");\r\n    const btncancel = document.createElement(\"button\");\r\n    btncancel.textContent = \"cancel\"\r\n    btncancel.classList.add(\"popup-delete-ctg__btn--cancel\");\r\n    btncancel.style.backgroundColor = offsetColor;\r\n    const btnproceed = document.createElement(\"button\");\r\n    btnproceed.classList.add(\"popup-delete-ctg__btn--proceed\");\r\n    btnproceed.textContent = \"proceed\"\r\n    /* **************************** */\r\n    popupFooter.append(btncancel, btnproceed);\r\n    popupBox.appendChild(popupFooter)\r\n    document.body.append(popupBoxOverlay, popupBox);\r\n\r\n    // EVENT LISTENERS\r\n    store.addActiveOverlay(\"popup-delete-ctg__overlay\")\r\n    const closeDeletePopupOnEscape = (e) => {\r\n      if (e.key === \"Escape\") closeDeletePopup()\r\n    }\r\n\r\n    const closeDeletePopup = () => {\r\n      popupBox.remove()\r\n      popupBoxOverlay.remove()\r\n      store.removeActiveOverlay(\"popup-delete-ctg__overlay\")\r\n      document.removeEventListener(\"keydown\", closeDeletePopupOnEscape)\r\n    }\r\n\r\n    const proceedDeletePopup = () => {\r\n      if (!noEntries) {\r\n        const selectedOption = document?.querySelector(\"input[name='popup-delete-ctg__option']:checked\").id\r\n        const selectedCategory = document.querySelector(\".popup-delete-ctg__option--move-select\").value\r\n        if (selectedOption === \"ctg-move\") {\r\n          store.moveCategoryEntriesToNewCategory(\r\n            ctgname, selectedCategory\r\n          );\r\n        } else if (selectedOption === \"ctg-delete\") {\r\n          store.removeCategoryAndEntries(ctgname)\r\n        }\r\n      } else {\r\n        store.deleteCategory(ctgname)\r\n      }\r\n\r\n      closeDeletePopup()\r\n      updateComponent()\r\n      renderSidebarDatepickerCtg()\r\n      renderCategories()\r\n    }\r\n\r\n    btnproceed.onclick = proceedDeletePopup\r\n    popupBoxOverlay.onclick = closeDeletePopup\r\n    btncancel.onclick = closeDeletePopup\r\n    document.addEventListener(\"keydown\", closeDeletePopupOnEscape)\r\n  }\r\n\r\n  function handleCategorySelection(e) {\r\n    let checkbox = e.target.children[0].children[0]\r\n    let status = checkbox.getAttribute(\"data-sbch-checked\")\r\n    let cat = checkbox.getAttribute(\"data-sbch-category\")\r\n    let color = store.getCtgColor(cat)\r\n    if (status === \"true\") {\r\n      checkbox.setAttribute(\"data-sbch-checked\", \"false\")\r\n      store.setCategoryStatus(cat, false)\r\n      checkbox.style.backgroundColor = \"var(--black0)\"\r\n      checkbox.firstChild.setAttribute(\"fill\", \"none\")\r\n    } else {\r\n      checkbox.setAttribute(\"data-sbch-checked\", \"true\")\r\n      store.setCategoryStatus(cat, true)\r\n      checkbox.style.backgroundColor = color\r\n      checkbox.firstChild.setAttribute(\"fill\", \"var(--taskcolor0)\")\r\n    }\r\n    renderSidebarDatepickerCtg()\r\n    updateComponent()\r\n  }\r\n\r\n  function delegateCategoryEvents(e) {\r\n    const ctgtoggleModal = getClosest(e, \".sbch-col__one\")\r\n    const editctgBtn = getClosest(e, \".sbch-col--actions__edit-icon\")\r\n    const deletectgBtn = getClosest(e, \".sbch-col--actions__delete-icon\")\r\n    const ctgChck = getClosest(e, \".sbch-form--item__col\")\r\n    const ctgPlus = getClosest(e, \".sbch-plus\")\r\n\r\n    if (ctgtoggleModal) {\r\n      handleCategoryModalToggle()\r\n      return;\r\n    }\r\n\r\n    if (editctgBtn) {\r\n      const targetcat = {\r\n        name: e.target.getAttribute(\"data-sbch-category\"),\r\n        color: e.target.getAttribute(\"data-sbch-color\"),\r\n      }\r\n      const targetparent = e.target.parentElement.parentElement\r\n      targetparent.style.borderBottom = `2px solid ${targetcat.color}`\r\n      createCategoryForm(\r\n        store, \r\n        targetcat, \r\n        true,\r\n        e.target.parentElement.parentElement\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (deletectgBtn) {\r\n      createDeleteCategoryPopup(e)\r\n      return;\r\n    }\r\n\r\n    // toggle category checkbox and display entries\r\n    if (ctgChck) {\r\n      handleCategorySelection(e)\r\n      return;\r\n    }\r\n\r\n    // create popup with category creation form\r\n    if (ctgPlus) {\r\n      const targetcat = {\r\n        name: \"new category\",\r\n        color: \"#2C52BA\",\r\n      }\r\n      createCategoryForm(store, targetcat, false, null);\r\n      return;\r\n    }\r\n  }\r\n\r\n  renderCategories()\r\n  const fullCtgRender = () => {\r\n    renderCategories();\r\n    updateComponent();\r\n  }\r\n  store.setRenderCategoriesCallback(fullCtgRender)\r\n  sidebarColTwo.onmousedown = delegateCategoryEvents\r\n}","import { getDateForStore } from \"../../utilities/dateutils\";\r\nimport setViews from \"../../config/setViews\";\r\nimport { getClosest } from \"../../utilities/helpers\"\r\n\r\n\r\nconst datepicker = document.querySelector(\".datepicker-sidebar\");\r\nconst datepickerBody = document.querySelector(\".sbdatepicker__body--dates\");\r\nconst datepickerTitle = document.querySelector(\".sbdatepicker-title\");\r\nexport default function setSidebarDatepicker(context, store, datepickerContext) {\r\n\r\n  datepickerContext.setDate(\r\n    context.getYear(), \r\n    context.getMonth(), \r\n    context.getDay()\r\n  );\r\n\r\n  let montharray = datepickerContext.getMonthArray();\r\n  let groupedEntries = store.getMonthEntryDates(montharray);\r\n  let currentWeekStart = context.getWeek();\r\n  let hasweek = false;\r\n  let count = 0;\r\n\r\n  function setDatepickerHeader() {\r\n    const month = datepickerContext.getMonthName()\r\n    const year = datepickerContext.getYear()\r\n    datepickerTitle.textContent = `${month} ${year}`\r\n  }\r\n\r\n  function createCells(montharray) {\r\n    datepickerBody.innerText = \"\";\r\n    const component = context.getComponent();\r\n\r\n    for (let i = 0; i < montharray.length; i++) {\r\n      const cell = document.createElement(\"div\");\r\n      const datename = document.createElement(\"div\");\r\n      cell.classList.add(\"sbdatepicker__body--dates-cell\");\r\n      datename.classList.add(\"sbdatepicker__body--datename\");\r\n\r\n      if (montharray[i].getMonth() !== datepickerContext.getMonth()) {\r\n        datename.classList.add(\"sbdatepicker__body--datename-disabled\");\r\n      }\r\n\r\n      if (component === \"week\") {\r\n        if (currentWeekStart.getDate() === montharray[i].getDate()) {\r\n          if (currentWeekStart.getMonth() === montharray[i].getMonth()) {\r\n            if (currentWeekStart.getFullYear() === montharray[i].getFullYear()) {\r\n            hasweek = true;\r\n            } \r\n          }\r\n        } \r\n      } \r\n\r\n      if (hasweek) {\r\n        count++\r\n        if (count <= 7) {\r\n          cell.classList.add(\"sbdatepicker__body--dates-week\")\r\n        }\r\n      } else {\r\n        cell.classList.remove(\"sbdatepicker__body--dates-week\")\r\n      }\r\n\r\n      if (context.isToday(montharray[i])) {\r\n        datename.setAttribute(\"class\", \"sbdatepicker__body--datename\")\r\n        datename.classList.add(\"sbdatepicker__body--datename-today\");\r\n      }\r\n\r\n      if (montharray[i].getDate() === context.getDateSelected() && montharray[i].getMonth() === datepickerContext.getMonth()) {\r\n        if (!datename.classList.contains(\"sbdatepicker__body--datename-today\")) {\r\n          datename.setAttribute(\"class\", \"sbdatepicker__body--datename\")\r\n          datename.classList.add(\"sbdatepicker__body--datename-selected\");\r\n        }\r\n      }\r\n\r\n      datename.textContent = montharray[i].getDate();\r\n      const formattedDate = getDateForStore(montharray[i])\r\n      datename.setAttribute(\"data-datepicker-date\", formattedDate);\r\n      if (groupedEntries.includes(formattedDate)) {\r\n        if (!datename.classList.contains(\"sbdatepicker__body--datename-selected\") && !datename.classList.contains(\"sbdatepicker__body--datename-today\")) {\r\n          datename.setAttribute(\"class\", \"sbdatepicker__body--datename\")\r\n          datename.classList.add(\"sbdatepicker__body--datename-entries\")\r\n        }\r\n      } else {\r\n        datename.classList.remove(\"sbdatepicker__body--datename-entries\")\r\n      }\r\n\r\n      cell.appendChild(datename)\r\n      datepickerBody.appendChild(cell);\r\n    }\r\n  }\r\n\r\n  function resetpickerData() {\r\n    montharray = datepickerContext.getMonthArray()\r\n    groupedEntries = store.getMonthEntryDates(montharray)\r\n    currentWeekStart = context.getWeek()\r\n    count = 0;\r\n    hasweek = false;\r\n  }  \r\n\r\n  function renderpicker(y, m, d) {\r\n    context.setDate(y, m, d)\r\n    context.setDateSelected(d)\r\n    datepickerContext.setDate(y, m, d)\r\n    setViews(\r\n      context.getComponent(),\r\n      context,\r\n      store,\r\n      datepickerContext,\r\n    );\r\n\r\n    resetpickerData()\r\n    createCells(montharray)\r\n    setDatepickerHeader()\r\n    montharray = []\r\n  }\r\n\r\n  function renderSelectedDay(e, d) {\r\n    context.setDateSelected(d)\r\n    const selected = document.querySelectorAll(\".sbdatepicker__body--datename-selected\")\r\n    selected.forEach((x) => {\r\n      x.classList.remove(\"sbdatepicker__body--datename-selected\")\r\n    })\r\n    e.target.setAttribute(\"class\", \"sbdatepicker__body--datename\")\r\n    e.target.classList.add(\"sbdatepicker__body--datename-selected\")\r\n  }\r\n\r\n  function renderprevMonth() {\r\n    datepickerContext.setPrevMonth();\r\n    resetpickerData()\r\n    createCells(montharray);\r\n    setDatepickerHeader();\r\n    montharray = [];\r\n  }\r\n\r\n  function rendernextMonth() {\r\n    datepickerContext.setNextMonth();\r\n    resetpickerData()\r\n    createCells(montharray);\r\n    setDatepickerHeader();\r\n    montharray = [];\r\n  }\r\n\r\n  function setNewDate(e) {\r\n    const target = e.target;\r\n    let [y, m, d] = target.getAttribute(\"data-datepicker-date\").split('-').map(x => parseInt(x));\r\n\r\n    const component = context.getComponent()\r\n\r\n    if (component === \"list\") {\r\n      renderSelectedDay(e, d);\r\n      return;\r\n    }\r\n\r\n    if (component === \"year\") {\r\n      if (context.getYear() !== y) {\r\n        renderpicker(y, m, d);\r\n        return;\r\n      } else {\r\n        renderSelectedDay(e, d);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (component === \"month\") {\r\n      if (context.getMonth() !== m) {\r\n        renderpicker(y, m, d);\r\n        return;\r\n      } else {\r\n        renderSelectedDay(e, d);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (component === \"week\") {\r\n      if (e.target.parentElement.classList.contains(\"sbdatepicker__body--dates-week\")) {\r\n        renderSelectedDay(e, d);\r\n        return;\r\n      } else {\r\n        renderpicker(y, m, d);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (component === \"day\") {\r\n      if (context.isToday(new Date(y, m, d))) {\r\n        renderSelectedDay(e, d);\r\n        return;\r\n      } else {\r\n        renderpicker(y, m, d);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  function delegateDatepickerEvents(e) {\r\n    const datenumber = getClosest(e, \".sbdatepicker__body--datename\")\r\n    const navnext = getClosest(e, \".sbdatepicker-nav--next\")\r\n    const navprev = getClosest(e, \".sbdatepicker-nav--prev\")\r\n\r\n    if (datenumber) {\r\n      setNewDate(e)\r\n      return;\r\n    }\r\n\r\n    if (navnext) {\r\n      rendernextMonth()\r\n      return;\r\n    }\r\n\r\n    if (navprev) {\r\n      renderprevMonth()\r\n      return;\r\n    }\r\n  }\r\n\r\n  setDatepickerHeader();\r\n  createCells(montharray);\r\n  datepicker.onmousedown = delegateDatepickerEvents;\r\n  montharray = [];\r\n}","import {getClosest} from \"../../utilities/helpers\"\r\n\r\nconst sidebarFooter = document.querySelector(\".sb__info\")\r\n\r\n// popup containing : project notes, privacy policy, & terms of use\r\nconst sbInfoPopup = document.querySelector(\".sb__info-popup\")\r\nconst sbInfoPopupOverlay = document.querySelector(\".sb__info-popup-overlay\")\r\nconst selectInfo = document.querySelector(\".select-popup-info\")\r\nconst closePopupButton = document.querySelector(\".close-sb-info\")\r\nconst infopopupTitle = document.querySelector(\".sbip-title\")\r\nconst infopopupBody = document.querySelector(\".sbip-content\")\r\n\r\n\r\nexport default function handleSidebarFooter(store) {\r\n\r\n  const infoContent = {\r\n    notes: {\r\n      title: \"Breakdown of project & current status\",\r\n      content: \"These are my project notes\",\r\n    },\r\n    privacy: {\r\n      title: \"Cookies and Data Privacy\",\r\n      content: \"This project uses an open source license\",\r\n    },\r\n    terms: {\r\n      title: \"Code license and terms of use\",\r\n      content: \"All data is stored locally meaning no data is sent to a server.\"\r\n    },\r\n  }\r\n\r\n  function closeInfoPopup() {\r\n    store.removeActiveOverlay(\"hide-sb-info-popup\")\r\n    sbInfoPopup.classList.add(\"hide-sb-info-popup\")\r\n    sbInfoPopupOverlay.classList.add(\"hide-sb-info-popup\")\r\n    document.removeEventListener(\"keydown\", closeInfoPopupOnEscape)\r\n  }\r\n\r\n  function setInfoContent(selection) {\r\n    infopopupTitle.innerText = infoContent[selection].title;\r\n    infopopupBody.innerText = infoContent[selection].content;\r\n  }\r\n\r\n  function handleSelectInfoChange(e) {\r\n    const selection = e.target.value;\r\n    setInfoContent(selection)\r\n  }\r\n\r\n  function closeInfoPopupOnEscape(e) {\r\n    if (e.key === \"Escape\") {\r\n      closeInfoPopup()\r\n    }\r\n  }\r\n\r\n  function setUpInfoPopup() {\r\n    setInfoContent(selectInfo.value)\r\n    selectInfo.onchange = handleSelectInfoChange\r\n    sbInfoPopupOverlay.onclick = closeInfoPopup\r\n    closePopupButton.onclick = closeInfoPopup\r\n    document.addEventListener(\"keydown\", closeInfoPopupOnEscape)\r\n  }\r\n\r\n  function openInfoPopup(selection) {\r\n    const selections = ['notes', 'privacy', 'terms']\r\n    const idx = selections.indexOf(selection)\r\n    selectInfo.selectedIndex = idx;\r\n\r\n    store.addActiveOverlay(\"hide-sb-info-popup\")\r\n    sbInfoPopup.classList.remove(\"hide-sb-info-popup\")\r\n    sbInfoPopupOverlay.classList.remove(\"hide-sb-info-popup\")\r\n    setUpInfoPopup()\r\n  }\r\n\r\n  function delegateSidebarFooterEvents(e) {\r\n    const projectNotes = getClosest(e, \".sb__project-notes\");\r\n    const privacy = getClosest(e, \".sb__privacy\");\r\n    const terms = getClosest(e, \".sb__terms\");\r\n\r\n    if (projectNotes) {\r\n      openInfoPopup(\"notes\")\r\n      return;\r\n    }\r\n\r\n    if (privacy) {\r\n      openInfoPopup(\"privacy\")\r\n      return;\r\n    }\r\n\r\n    if (terms) {\r\n      openInfoPopup(\"terms\")\r\n      return;\r\n    }\r\n  }\r\n\r\n  sidebarFooter.onmousedown = delegateSidebarFooterEvents\r\n}","import { getClosest, setTheme } from \"../../utilities/helpers\";\r\nimport { createTimestamp } from \"../../utilities/dateutils\";\r\nimport handleShortCutsModal from \"./shortcutsModal\";\r\n\r\n\r\n\r\nconst sidebarSubMenuOverlay = document.querySelector('.sidebar-sub-menu__overlay');\r\nconst sidebarSubMenu = document.querySelector('.sidebar-sub-menu');\r\nconst closeSubMenuBtn = document.querySelector('.close-sub-menu');\r\nconst closemenu = \"hide-sidebar-sub-menu\";\r\nconst appBody = document.querySelector(\".body\");\r\n\r\n// dark, light, contrast\r\nconst themeRadioBtns = document.querySelectorAll(\".theme-radio__input\");\r\nconst themeRadioOptions = [\"dark\", \"light\", \"contrast\"];\r\n\r\n// keyboard shortcut toggle on/off | open modal\r\nconst shortcutSwitch = document.querySelector(\".smia-toggle-shortcuts-checkbox\")\r\nconst shortcutTitle = document.querySelector(\".smia-set-status-title\")\r\nconst notifyDisabledShortcutsIcon = document.querySelector(\".keyboard-disabled-sm\")\r\n\r\nexport default function getSidebarSubMenu(store, context) {\r\n\r\n\r\n  function closeSubOnEscape(e) {\r\n    const popup = document.querySelector(\".sb-sub-popup-confirm\");\r\n    if (e.key === \"Escape\") {\r\n      if (popup) {\r\n        popup.remove()\r\n        sidebarSubMenuOverlay.classList.remove(\"sub-overlay-vis\")\r\n        return;\r\n      } else {\r\n        closeSubMenu()\r\n        sidebarSubMenuOverlay.classList.remove(\"sub-overlay-vis\")\r\n      }\r\n    }\r\n    if (e.key.toLowerCase() === \"a\") {\r\n      if (popup) {\r\n        return;\r\n      } else {\r\n        closeSubMenu()\r\n      }\r\n    }\r\n  }\r\n\r\n  function createUploadConfirmationPopup() {\r\n    const popup = document.createElement(\"div\");\r\n    popup.classList.add(\"sb-sub-popup-confirm\");\r\n    const [totalEntries, totalCategories] = store.getStoreStats()\r\n    \r\n\r\n    // let totals;\r\n    let [hasEntries, hasCategories] = [false, false]\r\n    let titleEntries;\r\n    if (totalEntries > 0) {\r\n      hasEntries = `Overwriting ${totalEntries} entries`;\r\n    }\r\n    if (totalCategories > 1) {\r\n      if (totalCategories === 2) {\r\n        hasCategories = \"1 category.\"\r\n      } else {\r\n        hasCategories = `${+totalCategories - 1} categories.`;\r\n      }\r\n    }\r\n\r\n    if (hasEntries && hasCategories) {\r\n      titleEntries = `${hasEntries} and ${hasCategories}`\r\n    } else if (hasEntries && !hasCategories) {\r\n      titleEntries = `${hasEntries}.`\r\n    } else if (!hasEntries && hasCategories) {\r\n      titleEntries = `No entries. Overwriting ${hasCategories}`\r\n    } else {\r\n      titleEntries = \"Current calendar has no entries or categories.\"\r\n    }\r\n\r\n\r\n    const subtitle = document.createElement(\"div\")\r\n    subtitle.classList.add(\"sb-sub-popup-subtitle\")\r\n    subtitle.textContent = titleEntries;\r\n    const subtitle2 = document.createElement(\"div\")\r\n    subtitle2.classList.add(\"sb-sub-popup-subtitle\")\r\n    subtitle2.textContent = 'This action is irreversible.'\r\n    const subtitle3 = document.createElement(\"div\")\r\n    subtitle3.classList.add(\"sb-sub-popup-title\")\r\n    subtitle3.textContent = 'Please ensure you have a valid backup before proceeding. Use the \"validate .json\" button next to \"upload .json\" to check that everything is in order.'\r\n    \r\n    const btns = document.createElement(\"div\");\r\n    btns.classList.add(\"sb-sub-popup-btns\");\r\n    const cancelBtn = document.createElement(\"button\");\r\n    cancelBtn.classList.add(\"sb-sub-popup-btn--cancel\");\r\n    cancelBtn.textContent = \"Cancel\";\r\n    const proceedBtn = document.createElement(\"button\");\r\n    proceedBtn.classList.add(\"sb-sub-popup-btn--proceed\")\r\n    proceedBtn.textContent = \"Proceed\";\r\n\r\n    btns.append(cancelBtn, proceedBtn);\r\n    popup.append(\r\n      subtitle, \r\n      subtitle2, \r\n      subtitle3, \r\n      btns\r\n    );\r\n    return popup\r\n  }\r\n\r\n  function closeSubMenu() {\r\n    const popup = document.querySelector(\".sb-sub-popup-confirm\");\r\n    if (popup) {\r\n      popup.remove()\r\n      sidebarSubMenuOverlay.classList.remove(\"sub-overlay-vis\")\r\n      return;\r\n    } else {\r\n      store.removeActiveOverlay(closemenu)\r\n      sidebarSubMenu.classList.add(closemenu)\r\n      sidebarSubMenuOverlay.classList.add(closemenu);\r\n      document.removeEventListener(\"keydown\", closeSubOnEscape);\r\n    }\r\n  }\r\n\r\n  function setStatusIcon(status) {\r\n    if (status) {\r\n      notifyDisabledShortcutsIcon.setAttribute(\"data-tooltip\", \"Keyboard shortcuts enabled\")\r\n      notifyDisabledShortcutsIcon.firstElementChild.setAttribute(\"fill\", \"var(--primary1)\")\r\n    } else {\r\n      notifyDisabledShortcutsIcon.setAttribute(\"data-tooltip\", \"Keyboard shortcuts disabled\")\r\n      notifyDisabledShortcutsIcon.firstElementChild.setAttribute(\"fill\", \"var(--red1)\")\r\n    }\r\n  }\r\n\r\n  function openSubMenu() {\r\n    // configure current active status of theme radio btns\r\n    const themeIdx = themeRadioOptions.indexOf(context.getColorScheme())\r\n    themeRadioBtns[themeIdx].checked = true;\r\n\r\n    const shortcutStatus = store.getShortcutsStatus()\r\n    setStatusIcon(shortcutStatus)\r\n    if (shortcutStatus) {\r\n      shortcutSwitch.checked = true;\r\n    } else {\r\n      shortcutSwitch.checked = false;\r\n    }\r\n\r\n    store.addActiveOverlay(closemenu)\r\n    sidebarSubMenu.classList.remove(closemenu)\r\n    sidebarSubMenuOverlay.classList.remove(closemenu);\r\n    document.addEventListener(\"keydown\", closeSubOnEscape);\r\n    sidebarSubMenuOverlay.onclick = closeSubMenu;\r\n    closeSubMenuBtn.onclick = closeSubMenu;\r\n  }\r\n\r\n  function getJSONUpload(e) {\r\n    const file = document.createElement(\"input\");\r\n    file.type = \"file\";\r\n    file.accept = \"application/json\";\r\n    file.onchange = (e) => {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const json = JSON.parse(e.target.result);\r\n        store.setUserUpload(json)\r\n        closeSubMenu();\r\n      };\r\n      reader.readAsText(file);\r\n    };\r\n    document.body.appendChild(file);\r\n    file.click();\r\n    document.body.removeChild(file);\r\n    closeSubMenu();\r\n    return;\r\n  }\r\n\r\n  function getJSONDownload() {\r\n    const json = JSON.stringify(localStorage)\r\n    const [totalEntries, totalCategories] = store.getStoreStats()\r\n    const filename = `ENT_${totalEntries}_CAT_${totalCategories}_${createTimestamp()}`;\r\n    const blob = new Blob([json], { type: \"application/json\" });\r\n    const href = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.href = href;\r\n    link.download = filename + \".json\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  function removePopup() {\r\n    sidebarSubMenuOverlay.classList.remove(\"sub-overlay-vis\")\r\n    const popup = document.querySelector(\".sb-sub-popup-confirm\");\r\n    if (popup) {\r\n      popup.remove()\r\n    }\r\n  }\r\n\r\n  function handleCalendarJSON(action) {\r\n    if (action === \"download\") {\r\n      getJSONDownload()\r\n      return;\r\n    }\r\n\r\n    if (action === \"upload\") {\r\n      // create popup to warn user that they are about to overwrite all calendar data\r\n      const popup = createUploadConfirmationPopup();\r\n      document.body.appendChild(popup);\r\n      sidebarSubMenuOverlay.classList.add(\"sub-overlay-vis\");\r\n      // cancel will close popup but keep open sidebar sub menu\r\n      // \"Escape\" key will also close popup but keep open sidebar sub menu\r\n      // \"a\" key will be temporarily disabled while popup is open\r\n      const cancelBtn = popup.querySelector(\".sb-sub-popup-btn--cancel\");\r\n      const proceedBtn = popup.querySelector(\".sb-sub-popup-btn--proceed\");\r\n      cancelBtn.onclick = removePopup;\r\n      proceedBtn.onclick = getJSONUpload;\r\n\r\n      // if user clicks proceed, create blob to open user's local file system\r\n      // const handleProceed = (e) => {\r\n      //   cancelBtn.classList.add(\"hide-cancel-btn\");\r\n      //   let proceedBtnText = \"Waiting for file upload\";\r\n      //   setTimeout(() => {\r\n      //     console.log(\"waiting for file upload\");\r\n      //     proceedBtnText += \".\";\r\n      //     proceedBtn.textContent = proceedBtnText;\r\n      //     if (proceedBtnText.length > 20) {\r\n      //       proceedBtnText = \"Waiting for file upload\";\r\n      //     }\r\n      //   }, 2000);\r\n      //   getJSONUpload(e);\r\n      // }\r\n\r\n\r\n      // check if user has cancelled out of their file explorer\r\n      // const checkForUpload = setInterval(() => {\r\n      //   const userUpload = store.getUserUpload()\r\n      //   if (userUpload) {\r\n      //     clearInterval(checkForUpload);\r\n      //     popup.remove();\r\n      //     sidebarSubMenuOverlay.classList.remove(\"sub-overlay-vis\");\r\n      //     store.clearUserUpload()\r\n      //     return;\r\n      //   } else {\r\n      //   }\r\n      // })\r\n    }\r\n  }\r\n\r\n  function handleThemeChange(e) {\r\n    const target = e.target;\r\n    const targetinput = target.firstElementChild;\r\n    const value = targetinput.value\r\n    targetinput.checked = true;\r\n    const currentTheme = context.getColorScheme()\r\n    if (value === currentTheme) {\r\n      return;\r\n    }\r\n    context.setColorScheme(value);\r\n    setTheme(context);\r\n  }\r\n\r\n  function openKbShortcutMenu() {\r\n    closeSubMenu()\r\n    handleShortCutsModal(store)\r\n  }\r\n\r\n  function toggleShortcuts() {\r\n    const status = shortcutSwitch.checked ? false : true;\r\n    store.setShortcutsStatus(status)\r\n    setStatusIcon(status)\r\n  }\r\n\r\n  function toggleShortcutsIcon() {\r\n    let status = store.getShortcutsStatus()\r\n\r\n    status = !status\r\n    store.setShortcutsStatus(status)\r\n    setStatusIcon(status)\r\n    shortcutSwitch.checked = status ? true : false;\r\n  }\r\n\r\n  function delegateSubMenuEvents(e) {\r\n    const downloadjsonBtn = getClosest(e, \".down-json\");\r\n    const uploadjsonBtn = getClosest(e, \".upload-json\");\r\n    const themebtn = getClosest(e, \".theme-option\");\r\n    const kbShortcutMenu = getClosest(e, \".toggle-kb-shortcuts-btn__smia\")\r\n    const shortcutSwitch = getClosest(e, \".smia-disable-shortcuts__btn\")\r\n    const shortcutSwitchNotifyIcon = getClosest(e, \".keyboard-disabled-sm\")\r\n\r\n\r\n    if (downloadjsonBtn) {\r\n      handleCalendarJSON(\"download\");\r\n      return;\r\n    }\r\n\r\n    if (uploadjsonBtn) {\r\n      handleCalendarJSON(\"upload\");\r\n      return;\r\n    }\r\n\r\n    if (themebtn) {\r\n      handleThemeChange(e);\r\n      return;\r\n    }\r\n\r\n    if (kbShortcutMenu) {\r\n      openKbShortcutMenu();\r\n      return;\r\n    }\r\n\r\n    if (shortcutSwitch) {\r\n      toggleShortcuts();\r\n      return;\r\n    }\r\n\r\n    if (shortcutSwitchNotifyIcon) {\r\n      toggleShortcutsIcon();\r\n      return;\r\n    }\r\n  }\r\n\r\n  function setSidebarSubMenu() {\r\n    openSubMenu();\r\n    sidebarSubMenu.onmousedown = delegateSubMenuEvents;\r\n  }\r\n  setSidebarSubMenu()\r\n}","import {\r\n  createCloseIcon,\r\n} from \"../../utilities/svgs\"\r\n\r\nconst body = document.querySelector(\".body\");\r\nconst toastoverlay = document.querySelector(\".toast-overlay\")\r\n\r\nexport default function createToast(message, timeout, callback, callbackTwo, removeCallback, undoCallback) {\r\n  function closetoast() {\r\n    toastoverlay.classList.add(\"hide-toast-overlay\")\r\n    document.querySelector(\".toast\")?.remove()\r\n    if (removeCallback) {\r\n      removeCallback()\r\n    }\r\n  }\r\n  function undo() {\r\n    undoCallback()\r\n    closetoast()\r\n  }\r\n\r\n  function initToast() {\r\n    toastoverlay.classList.remove(\"hide-toast-overlay\")\r\n    const toast = document.createElement(\"aside\");\r\n    toast.classList.add(\"toast\");\r\n\r\n    const toastMessage = document.createElement(\"div\");\r\n    toastMessage.classList.add(\"toast-message\");\r\n    toastMessage.textContent = message;\r\n    \r\n    const closeIconWrapper = document.createElement(\"div\")\r\n    closeIconWrapper.classList.add(\"close-toast-icon-wrapper\")\r\n    closeIconWrapper.appendChild(createCloseIcon(\"var(--white4)\"))\r\n    closeIconWrapper.onclick = closetoast\r\n    \r\n    if (undoCallback) {\r\n      const undoToastWrapper = document.createElement(\"div\")\r\n      undoToastWrapper.classList.add(\"undo-toast-wrapper\")\r\n\r\n      const undoToastMessage = document.createElement(\"div\")\r\n      undoToastMessage.classList.add(\"undo-toast-message\")\r\n      undoToastMessage.textContent = \"Undo\"\r\n\r\n      undoToastWrapper.appendChild(undoToastMessage);\r\n      toast.append(toastMessage, undoToastWrapper, closeIconWrapper);\r\n\r\n      undoToastWrapper.onclick = undo\r\n\r\n    } else {\r\n      toast.append(toastMessage, closeIconWrapper);\r\n    }\r\n\r\n    body.insertBefore(toast, body.firstChild)\r\n\r\n    if (callback) {\r\n      callback()\r\n    }\r\n\r\n    if (callbackTwo) {\r\n      callbackTwo()\r\n    }\r\n  }\r\n\r\n  initToast()\r\n  toastoverlay.onclick = closetoast\r\n\r\n  if (!timeout) {\r\n    timeout = 1000\r\n  } \r\n  setTimeout(() => {\r\n    closetoast()\r\n  }, timeout)\r\n}","const overlay = document.querySelector(\".toast-overlay\")\r\nconst sbform = document.querySelector(\".sb__categories--body-form\")\r\n\r\n\r\nexport default function toastCallbackSaving() {\r\n  const toastmessage = document.querySelector(\".toast-message\");\r\n  toastmessage.textContent = \"Saved\";\r\n  // overlay.classList.remove(\"hide-toast-overlay\");\r\n}\r\n\r\nfunction removeToast() {\r\n  document.querySelector(\".toast\")?.remove()\r\n  overlay.classList.add(\"hide-toast-overlay\")\r\n}\r\n\r\nfunction toastNoCategorySelected() {\r\n  overlay.classList.add(\"toast-overlay--allow__sidebar\")\r\n  sbform.classList.add(\"sb__categories--body-form-hint\")\r\n  sbform.addEventListener(\"mouseover\", removeToastNoCategorySelected)\r\n}\r\n\r\nfunction removeToastNoCategorySelected() {\r\n  removeToast()\r\n  overlay.classList.remove(\"toast-overlay--allow__sidebar\")\r\n  sbform.classList.remove(\"sb__categories--body-form-hint\")\r\n  sbform.removeEventListener(\"mouseover\", removeToastNoCategorySelected)\r\n}\r\n\r\nfunction taostDeleteEntryWarning() {\r\n\r\n}\r\n\r\nexport {\r\n  toastNoCategorySelected,\r\n  removeToastNoCategorySelected,\r\n  taostDeleteEntryWarning,\r\n}","// import setViews from \"../../config/setViews\"\r\n// import setSidebarDatepicker from \"../../components/menus/sidebarDatepicker\";\r\nimport fullFormConfig from \"../forms/formUtils\"\r\nimport FormSetup from \"../forms/setForm\";\r\nimport { \r\n  Day, \r\n  CoordinateEntry \r\n} from \"../../factory/entries\"\r\nimport getEntryOptionModal from \"../menus/entryOptions\";\r\n\r\n\r\nimport calcTime, { formatTime } from \"../../utilities/timeutils\"\r\n\r\nimport {\r\n  formatDateForDisplay,\r\n  formatStartEndDate,\r\n  formatStartEndTime,\r\n  getDuration,\r\n  getDateTimeFormatted,\r\n  getTempDates,\r\n  getFormDateObject,\r\n  sortDates,\r\n} from \"../../utilities/dateutils\"\r\n\r\nimport handleOverlap, {\r\n  setStylingForEvent,\r\n  updateBoxCoordinates,\r\n  setBoxTimeAttributes,\r\n  createBox,\r\n  createTemporaryBox,\r\n  getBoxDefaultStyle,\r\n  resetStyleOnClick,\r\n  createTempBoxHeader,\r\n  startEndDefault,\r\n  calcNewHourFromCoords,\r\n  calcNewMinuteFromCoords,\r\n  calcDateOnClick,\r\n  getOriginalBoxObject,\r\n  resetOriginalBox,\r\n} from \"../../utilities/dragutils\"\r\n\r\nimport {\r\n  generateId,\r\n  getClosest,\r\n} from \"../../utilities/helpers\"\r\n\r\nimport createToast from \"../toastPopups/toast\"\r\n\r\nimport {\r\n  toastNoCategorySelected,\r\n  removeToastNoCategorySelected,\r\n} from \"../toastPopups/toastCallbacks\"\r\n\r\nimport locales from \"../../locales/en\"\r\n\r\n\r\n// main app header\r\nconst header = document.querySelector(\".header\")\r\n\r\n// day view header (row 1)\r\nconst dvHeader = document.querySelector(\".dayview--header\")\r\nconst dvHeaderDayNumber = document.querySelector(\".dayview--header-day__title\")\r\nconst dvHeaderDayOfWeek = document.querySelector(\".dayview--header-day__number\")\r\nconst dvHeaderInfo = document.querySelector(\".dayview--header-day__info\")\r\n\r\n// day view on top container (row 2)\r\nconst dvOnTop = document.querySelector('.dayview--ontop-container');\r\n\r\n// main grid wrapper (row 3) (scroll wrapper) (offsettop)\r\nconst dvGrid = document.querySelector(\".dayview__grid\")\r\nconst dvSideGrid = document.querySelector(\".dayview--side-grid\")\r\nconst dvMainGrid = document.querySelector(\".dayview--main-grid\")\r\n\r\nexport default function setDayView(context, store, datepickerContext) {\r\n  let entries = store.getDayEntries(context.getDate())\r\n  let boxes = new Day(\r\n    entries.day,\r\n    entries.allDay\r\n  );\r\n\r\n  function getDayviewHeaderEntryCount() {\r\n    let allboxes = boxes.getAllBoxes();\r\n    if (allboxes.length === 0) { return \"no entries\"; } \r\n    let [endingToday, startingToday] = [0, 0];\r\n\r\n    for (let i = 0; i < allboxes.length; i++) {\r\n      const [start, end, current] = [\r\n        new Date(allboxes[i].start), \r\n        new Date(allboxes[i].end),\r\n        context.getDate(),\r\n      ]\r\n      if (start.getDate() === current.getDate()) { startingToday++; }\r\n      if (end.getDate() === current.getDate()) { endingToday++; }\r\n    }\r\n\r\n    if (startingToday === 1 && endingToday === 1) {\r\n      return `1 entry from ${formatStartEndTime(\r\n        new Date(allboxes[0].start), \r\n        new Date(allboxes[0].end)\r\n      )}`\r\n    }\r\n\r\n    if (startingToday > 1 && (startingToday === endingToday)) {\r\n      return `${startingToday} entries starting & ending today`;\r\n    }\r\n    \r\n    let fulltitle = \"\"\r\n    if (startingToday > 0) {\r\n      if (startingToday === 1) {\r\n        fulltitle += `${startingToday} entry starting today`\r\n      } else {\r\n        fulltitle += `${startingToday} entries started`\r\n      }\r\n    } else {\r\n      fulltitle += `no entries started`\r\n    }\r\n\r\n    if (endingToday > 0) {\r\n      if (endingToday === 1) {\r\n        fulltitle += ` – ${endingToday} ending`\r\n      } else {\r\n        fulltitle += ` – ${endingToday} ending`\r\n      }\r\n    } else {\r\n      fulltitle += ` – no entries ending today`\r\n    }\r\n\r\n    return fulltitle;\r\n  }\r\n\r\n  function configHeader() {\r\n    [dvHeaderDayNumber, dvHeaderDayOfWeek, dvHeaderInfo].forEach((el) => {\r\n      el.innerText = \"\";\r\n    })\r\n\r\n    dvHeaderDayOfWeek.textContent = context.getDay()\r\n    dvHeaderDayNumber.textContent = locales.labels.weekdaysShort[context.getWeekday()].toUpperCase() + \" :\";\r\n    dvHeaderInfo.textContent = getDayviewHeaderEntryCount();\r\n  }\r\n\r\n  function renderBoxes() {\r\n    dvMainGrid.innerText = \"\"\r\n    boxes.getBoxes().forEach((entry) => {\r\n      createBox(\r\n        dvMainGrid,                         // column\r\n        entry,                              // entry object\r\n        \"day\",                              // current view \r\n        store.getCtgColor(entry.category)   // background color\r\n      )\r\n    })\r\n  }\r\n\r\n  /** RESIZE NORTH/SOUTH */\r\n  function resizeBoxNSDay(e, box) {\r\n    setStylingForEvent(\"dragstart\", dvGrid, store)\r\n    const col = box.parentElement\r\n\r\n    let boxhasOnTop = false;\r\n    const boxorig = getOriginalBoxObject(box)\r\n    if (box.classList.contains(\"dv-box-ontop\")) {\r\n      boxhasOnTop = true;\r\n      resetStyleOnClick(\"day\", box)\r\n    }\r\n\r\n    box.classList.add(\"dv-box-resizing\")\r\n    const boxTop = box.offsetTop\r\n    const headerOffset = 72 + header.offsetHeight\r\n    createTemporaryBox(box, col, boxhasOnTop, \"day\")\r\n\r\n    let amountScrolled = parseInt(dvGrid.scrollTop)\r\n    const mousemove = (e) => {\r\n      let newHeight = Math.round(((e.pageY + amountScrolled) - boxTop - headerOffset) / 12.5) * 12.5;\r\n\r\n      if (newHeight <= 12.5) {\r\n        box.style.height = \"12.5px\";\r\n        return;\r\n      } else if ((newHeight + boxTop) > 1188) {\r\n        return;\r\n      } else {\r\n        box.style.height = `${newHeight}px`;\r\n      }\r\n    }\r\n\r\n    function mouseup() {\r\n      document.querySelector(\".dv-temporary-box\").remove();\r\n      box.classList.remove(\"dv-box-resizing\");\r\n      if (boxhasOnTop) {box.classList.add(\"dv-box-ontop\");}\r\n\r\n      if (boxorig.height === box.offsetHeight) {\r\n        resetOriginalBox(box, boxorig);\r\n      } else {\r\n        setBoxTimeAttributes(box, \"day\")\r\n        const start = +box.getAttribute(\"data-dv-start-time\")\r\n        const length = +box.getAttribute(\"data-dv-time-intervals\")\r\n        const time = calcTime(start, length)\r\n        box.setAttribute(\"data-dv-time\", time)\r\n        box.firstChild.nextSibling.firstElementChild.textContent = time\r\n\r\n        updateBoxCoordinates(box, \"day\", boxes)\r\n        boxes.updateStore(store, box.getAttribute(\"data-dv-box-id\"))\r\n        // check if new position overlaps with other boxes and handle\r\n        if (boxes.getBoxes().length > 1) {\r\n          handleOverlap(null, \"day\", boxes)\r\n        } else {\r\n          box.setAttribute(\"data-dv-box-index\", \"box-one\")\r\n        }\r\n      }\r\n\r\n\r\n      configHeader()\r\n      setStylingForEvent(\"dragend\", dvGrid, store);\r\n      document.removeEventListener(\"mousemove\", mousemove)\r\n      document.removeEventListener(\"mouseup\", mouseup)\r\n    }\r\n    document.addEventListener(\"mousemove\", mousemove)\r\n    document.addEventListener(\"mouseup\", mouseup)\r\n  }\r\n\r\n\r\n  /** DRAG NORTH/ SOUTH, EAST/ WEST */\r\n  function dragEngineDay(e, box) {\r\n    setStylingForEvent(\"dragstart\", dvGrid, store)\r\n    const col = box.parentElement\r\n\r\n    let boxhasOnTop = false;\r\n    const boxorig = getOriginalBoxObject(box);\r\n    if (box.classList.contains(\"dv-box-ontop\")) {\r\n      boxhasOnTop = true;\r\n      resetStyleOnClick(\"day\", box);\r\n    }\r\n\r\n    box.classList.add(\"dv-box-dragging\")\r\n    createTemporaryBox(box, col, boxhasOnTop, \"day\")\r\n\r\n    const startTop = +box.style.top.split(\"px\")[0]\r\n    const boxHeight = +box.style.height.split(\"px\")[0]\r\n    const startCursorY = e.pageY - dvGrid.offsetTop\r\n    const headerOffset = 72 + header.offsetHeight\r\n    let movedY = 0;\r\n\r\n    /** DRAG NORTH SOUTH */\r\n    const mousemove = (e) => {\r\n      const currentCursorY = e.pageY - headerOffset\r\n      let newOffsetY = currentCursorY - startCursorY\r\n      let newTop = Math.round((newOffsetY + startTop) / 12.5) * 12.5\r\n      if (newTop < 0 || currentCursorY < 0) {\r\n        newTop = 0\r\n        return;\r\n      } else if (newTop + boxHeight > 1188) {\r\n        return;\r\n      }\r\n      box.style.top = `${newTop}px`\r\n      movedY = newOffsetY\r\n    }\r\n\r\n    const mouseup = () => {\r\n      document.querySelector(\".dv-temporary-box\").remove()\r\n      box.classList.remove(\"dv-box-dragging\")\r\n      if (boxhasOnTop) { box.classList.add(\"dv-box-ontop\") }\r\n\r\n      // if box did not move, no render needed\r\n      // click event to open form\r\n      if (Math.abs(movedY) <= 6) {\r\n        // @function setReset() is provided to the form via the store\r\n        // it will call once the form is either submitted or cancelled\r\n        const setReset = () => {\r\n          resetOriginalBox(box, boxorig);\r\n          document.querySelector(\".dayview-temp-box\")?.remove()\r\n          configHeader()\r\n          setStylingForEvent(\"dragend\", dvGrid, store)\r\n        }\r\n        store.setFormResetHandle(\"day\", setReset)\r\n\r\n        const id = box.getAttribute(\"data-dv-box-id\");\r\n        const tempEntry = store.getEntry(id);\r\n        const color = box.style.backgroundColor;\r\n        let offsetColor = color;\r\n        // let offsetColor = `${color.slice(0,3)}a(${color.slice(4, color.length - 1)}, 0.4)`;\r\n\r\n        const dates = calcDateOnClick(\r\n          new Date(tempEntry.start),\r\n          +box.getAttribute(\"data-dv-start-time\"),\r\n          +box.getAttribute(\"data-dv-time-intervals\"),\r\n        );\r\n\r\n        openDayviewForm(\r\n          box,\r\n          [1, 3],\r\n          [tempEntry.category, color, offsetColor],\r\n          dates,\r\n          [\"edit\", id, tempEntry.title, tempEntry.description],\r\n        );\r\n        // ******************\r\n      } else {\r\n        setBoxTimeAttributes(box, \"day\")\r\n        const start = +box.getAttribute(\"data-dv-start-time\")\r\n        const length = +box.getAttribute(\"data-dv-time-intervals\")\r\n        const time = calcTime(start, length)\r\n        box.setAttribute(\"data-dv-time\", time)\r\n\r\n        box.children[1].children[0].textContent = time;\r\n        updateBoxCoordinates(box, \"day\", boxes)\r\n        boxes.updateStore(\r\n          store,\r\n          box.getAttribute(\"data-dv-box-id\")\r\n        )\r\n        // check if new position overlaps with other boxes and handle\r\n        if (boxes.getBoxes().length > 1) {\r\n          handleOverlap(null, \"day\", boxes)\r\n        } else {\r\n          box.setAttribute(\"data-dv-box-index\", \"box-one\")\r\n        }\r\n\r\n\r\n        configHeader()\r\n      }\r\n      \r\n      setStylingForEvent(\"dragend\", dvGrid, store)\r\n      document.removeEventListener(\"mousemove\", mousemove)\r\n      document.removeEventListener(\"mouseup\", mouseup)\r\n    }\r\n    document.addEventListener(\"mousemove\", mousemove)\r\n    document.addEventListener(\"mouseup\", mouseup)\r\n  }\r\n\r\n\r\n  function handleDayviewClose() {\r\n    document.querySelector(\".dayview-temp-box\")?.remove()\r\n  }\r\n\r\n\r\n  function openDayviewForm(box, coords, category, dates, type) {\r\n    // store.setFormResetHandle(\"week\", handleWeekviewFormClose);\r\n    store.setFormResetHandle(\"day\", handleDayviewClose);\r\n\r\n    const openForm = store.getRenderFormCallback();\r\n    const setup = new FormSetup();\r\n\r\n    const [submitType, id, title, description] = type;\r\n    setup.setSubmission(submitType, id, title, description);\r\n    if (submitType === \"create\") { box.style.opacity = 0.9; }\r\n\r\n    const [categoryName, color, offsetColor] = category;\r\n    setup.setCategory(\r\n      categoryName,\r\n      color,\r\n      offsetColor,\r\n    );\r\n\r\n    setup.setPosition(\r\n      1,\r\n      [1, 3],\r\n      parseInt((coords.y * 12.5) - dvGrid.scrollTop)\r\n    );\r\n\r\n    const [start, end] = dates\r\n    setup.setDates(getFormDateObject(start, end));\r\n\r\n    openForm();\r\n    fullFormConfig.setFormDatepickerDate(context, datepickerContext, start);\r\n\r\n    fullFormConfig.getConfig(setup.getSetup());\r\n  }\r\n\r\n\r\n  /** CREATE BOX ON DRAG */\r\n  /** Drag down empty column to create box */\r\n  function createBoxOnDragDay(e) {\r\n    setStylingForEvent(\"dragstart\", dvGrid, store)\r\n    const [tempcategory, color] = store.getFirstActiveCategoryKeyPair()\r\n\r\n    const box = document.createElement('div');\r\n    box.setAttribute(\"class\", \"dv-box dv-box-dragging dayview-temp-box\");\r\n\r\n    // boxheader is static - create from template\r\n    const boxheader = createTempBoxHeader(\"day\")\r\n\r\n\r\n    const boxcontent = document.createElement('div');\r\n    const boxtime = document.createElement('span');\r\n    const boxtimeend = document.createElement('span');\r\n    boxcontent.classList.add('dv-box__content');\r\n    boxtime.classList.add('dv-box-time');\r\n    boxtimeend.classList.add('dv-box-time');\r\n\r\n    const headerOffset = 72 + header.offsetHeight;\r\n    const scrolled = parseInt(dvGrid.scrollTop);\r\n    const startCursorY = e.pageY - headerOffset;\r\n\r\n    let y = Math.round((startCursorY + Math.abs(scrolled)) / 12.5) * 12.5;\r\n    box.setAttribute(\"style\", getBoxDefaultStyle(y, color))\r\n    \r\n    let coords = { y: +y / 12.5, x: 1, h: 1, e: 2 }\r\n    let [starthour, startmin, endhour, endmin] = startEndDefault(y);\r\n    \r\n    function mousemove(e) {\r\n      let newHeight = Math.round(((e.pageY + scrolled) - y - headerOffset) / 12.5) * 12.5\r\n      if (newHeight <= 12.5) {newHeight = 12.5;}\r\n      if ((newHeight + y) > 1188) {newHeight = 1187.5 - y;}\r\n\r\n      box.style.height = `${newHeight}px`\r\n      coords.h = +newHeight / 12.5\r\n      coords.e = +coords.y + coords.h\r\n\r\n      endhour = calcNewHourFromCoords(newHeight, y)\r\n      endmin = calcNewMinuteFromCoords(newHeight, y)\r\n\r\n      boxtime.style.wordBreak = \"break-word\"\r\n      boxtime.textContent = `${formatTime(starthour, startmin)} – `\r\n      boxtimeend.textContent = `${formatTime(endhour, endmin)}`\r\n    }\r\n\r\n    // append content to temporary box\r\n    boxcontent.append(boxtime, boxtimeend);\r\n    box.append(boxheader, boxcontent)\r\n    e.target.appendChild(box)\r\n\r\n    function mouseup() {\r\n      const datesData = getTempDates(\r\n        new Date(context.getDate()),\r\n        [starthour, endhour],\r\n        [startmin, endmin],\r\n      )\r\n\r\n      openDayviewForm(\r\n        box,\r\n        [1, 3],\r\n        [tempcategory, color, color],\r\n        datesData,\r\n        [\"create\", null, null, null],\r\n      )\r\n\r\n      setStylingForEvent(\"dragend\", dvGrid, store)\r\n      document.removeEventListener(\"mouseup\", mouseup)\r\n      document.removeEventListener(\"mousemove\", mousemove)\r\n    }\r\n    document.addEventListener(\"mousemove\", mousemove)\r\n    document.addEventListener(\"mouseup\", mouseup)\r\n  }\r\n\r\n  function renderBoxesForGrid() {\r\n    renderBoxes()\r\n    handleOverlap(null, \"day\", boxes)\r\n  }\r\n\r\n  function delegateDayView(e) {\r\n    if (getClosest(e, \".dv-box-resize-s\")) {\r\n      resizeBoxNSDay(e, e.target.parentElement);\r\n      return;\r\n    }\r\n    \r\n    if (getClosest(e, \".dv-box\")) {\r\n      dragEngineDay(e, e.target);\r\n      return;\r\n    }\r\n\r\n    if (getClosest(e, \".dayview--main-grid\")) {\r\n      createBoxOnDragDay(e, e.target);\r\n      return;\r\n    }\r\n  }\r\n\r\n  const initDayView = () => {\r\n    renderBoxesForGrid();\r\n    configHeader();\r\n    dvGrid.onmousedown = delegateDayView;\r\n  }\r\n  initDayView();\r\n}\r\n\r\n\r\n\r\n\r\n// function setBoxWidth(box) {\r\n//   switch (box.getAttribute(\"data-dv-box-index\")) {\r\n//     case \"dv-box-one\":\r\n//       box.style.left = 'calc((100% - 0px) * 0 + 0px)';\r\n//       box.style.width = \"calc((100% - 0px) * 1)\"\r\n//       break;\r\n//     case \"dv-box-two\":\r\n//       box.style.left = \"calc((100% - 0px) * 0.1 + 0px)\"\r\n//       box.style.width = \"calc((100% - 0px) * 0.9)\";\r\n//       break;\r\n//     case \"dv-box-three\":\r\n//       box.style.left = \"calc((100% - 0px) * 0.15 + 0px)\"\r\n//       box.style.width = \"calc((100% - 0px) * 0.85)\";\r\n//       break;\r\n//     case \"dv-box-four\":\r\n//       box.style.left = \"calc((100% - 0px) * 0.35 + 0px)\"\r\n//       box.style.width = \"calc((100% - 0px) * 0.65)\"\r\n//       break;\r\n//     case \"dv-box-five\":\r\n//       box.style.left = \"calc((100% - 0px) * 0 + 0px)\"\r\n//       box.style.width = \"calc((100% - 0px) * 0.34)\"\r\n//       break;\r\n//     case \"dv-box-six\":\r\n//       box.style.left = \"calc((100% - 0px) * 0.05 + 0px)\"\r\n//       box.style.width = \"calc((100% - 0px) * 0.4)\"\r\n//       break;\r\n//     case \"dv-box-seven\":\r\n//       box.style.left = \"calc((100% - 0px) * 0.1 + 0px)\"\r\n//       box.style.width = \"calc((100% - 0px) * 0.38)\"\r\n//       break;\r\n//     case \"dv-box-eight\":\r\n//       box.style.left = \"calc((100% - 0px) * 0.1)\"\r\n//       box.style.width = \"calc((100% - 4px) * 0.4)\"\r\n//       break;\r\n//     case \"dv-box-nine\":\r\n//       box.style.left = \"calc((100% - 0px) * 0.3)\"\r\n//       box.style.width = \"calc((100% - 4px) * 0.7)\"\r\n//       break;\r\n//     default:\r\n//       break;\r\n//   }\r\n// }\r\n\r\n// function handleOverlap() {\r\n//   // console.log(ho(null, \"day\",boxes.checkForCollision()))\r\n//   const collisions = boxes.checkForCollision()\r\n//   if (collisions.length > 0) {\r\n//     let boxnumarr = [\r\n//       'dv-box-one',\r\n//       'dv-box-two',\r\n//       'dv-box-three',\r\n//       'dv-box-four',\r\n//       'dv-box-five',\r\n//       'dv-box-six',\r\n//       'dv-box-seven',\r\n//       'dv-box-eight',\r\n//       'dv-box-nine'\r\n//     ]\r\n//     for (let i = 0; i < collisions.length; i++) {\r\n//       const box = document.querySelector(`[data-dv-box-id=\"${collisions[i].id}\"]`)\r\n//       if (i === 0) {\r\n//         box.setAttribute(\"class\", \"dv-box box-one\")\r\n//         box.setAttribute(\"data-dv-box-index\", \"dv-box-one\")\r\n//       } else {\r\n//         box.setAttribute(\"class\", `dv-box dv-box-ontop ${boxnumarr[i]}`)\r\n//         box.setAttribute(\"data-dv-box-index\", boxnumarr[i])\r\n//       }\r\n//       setBoxWidth(box)\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n  // function getScript(totalEntries, idx, endDate, endTime) {\r\n//   const scripts = [\r\n//     `1 entry ending on ${endDate}`,\r\n//     `1 entry ending at ${endTime}`,\r\n//     `${totalEntries} total entries ending on ${endDate}`, \r\n//     `${totalEntries} total entries - last ending on ${endDate}`, \r\n//     `${totalEntries} total entries - last ending at ${endTime}`,\r\n//     `${totalEntries} entry ending today at ${endTime}`,\r\n//   ];\r\n//   return scripts[idx]\r\n// }\r\n\r\n// console.log(boxes.getAllBoxes().filter((box) => {\r\n//   return box.end.getDate() === context.getDate() && box.end.getMonth() === context.getMonth() && box.end.getFullYear() === context.getYear()\r\n// }))\r\n// console.log(boxes.getEntriesEndingOnDay(context.getDay()))\r\n\r\n// if (totalEntries > 0) {\r\n\r\n//   // no day entries\r\n//   if (dayLen === 0) {\r\n//     if (alldayLen > 1) {\r\n//       // multiple all day entries \r\n//       console.log(boxes)\r\n\r\n//     } else {\r\n//       // one all day entry\r\n//       fulltitle = getScript(\r\n//         1, 0, formatDateForDisplay(boxes.getBoxesTop()[0].end), null,\r\n//       )\r\n//     }\r\n//     // multiple day & all day\r\n//   } else if (dayLen > 0 && alldayLen > 0) {\r\n\r\n\r\n//     // only day entries\r\n//   } else {\r\n//     // & multiple day entries\r\n//     if (dayLen > 1) {\r\n//       temp = boxes.getBoxes()[dayLen - 1].end\r\n//       fulltitle = getScript(\r\n//         totalEntries,\r\n//         4,\r\n//         null,\r\n//         formatTime(temp.getHours(), temp.getMinutes()),\r\n//       )\r\n//     } else {\r\n//       temp = boxes.getBoxes()[dayLen - 1].end\r\n//       fulltitle = getScript(\r\n//         1, 5, null, formatTime(temp.getHours(), temp.getMinutes())\r\n//       )\r\n//     }\r\n//   }\r\n// }","import getEntryOptionModal from \"../menus/entryOptions\";\r\nimport setViews from \"../../config/setViews\";\r\nimport FormSetup from \"../forms/setForm\";\r\nimport fullFormConfig from \"../forms/formUtils\";\r\nimport { \r\n  getClosest,\r\n  hextorgba\r\n} from '../../utilities/helpers'\r\nimport {\r\n  getFormDateObject,\r\n  getDateFromAttribute,\r\n  getDuration,\r\n  formatEntryOptionsDate,\r\n  longerThanDay,\r\n  formatStartEndDate\r\n} from \"../../utilities/dateutils\"\r\nimport { formatStartEndTimes } from \"../../utilities/timeutils\"\r\nimport locales from \"../../locales/en\"\r\n\r\nconst monthNames = locales.labels.monthsShort.map(x => x.toUpperCase())\r\nconst weekDayNames = locales.labels.weekdaysShort.map(x => x.toUpperCase())\r\n\r\nconst listview = document.querySelector('.listview');\r\nconst listviewBody = document.querySelector('.listview__body');\r\n\r\nexport default function setListView(context, store, datepickerContext) {\r\n  /*************************************** */\r\n  /* CREATE ROW GROUPS*/\r\n  function createRowGroups(entries) {\r\n    let count = 0;\r\n    for (let [key, value] of Object.entries(entries)) {\r\n      count++\r\n      const tempdate = new Date(Date.parse(key))\r\n      const [year, month, day, dow] = [\r\n        tempdate.getFullYear(),\r\n        tempdate.getMonth(),\r\n        tempdate.getDate(),\r\n        tempdate.getDay()\r\n      ]\r\n\r\n      const [wn, mn] = [weekDayNames[dow], monthNames[month]];\r\n      const rgheader = createRowGroupHeader(wn, mn, day, key, count === 1 ? true : false);\r\n\r\n      const rgContent = document.createElement(\"div\");\r\n      rgContent.classList.add(\"rowgroup-content\");\r\n      value.forEach((entry) => {\r\n        rgContent.append(createRowGroupCell(entry))\r\n      })\r\n      const rg = document.createElement('div');\r\n      rg.classList.add('listview__rowgroup');\r\n      rg.append(rgheader, rgContent);\r\n      listviewBody.appendChild(rg);\r\n\r\n    }\r\n  }\r\n\r\n  function createRowGroupHeader(weekname, monthname, day, date, settop) {\r\n    const rgHeader = document.createElement('div');\r\n    rgHeader.classList.add('rowgroup-header');\r\n    const rgHeaderDateNumber = document.createElement('div');\r\n\r\n    rgHeaderDateNumber.classList.add('rowgroup--header__datenumber');\r\n    rgHeaderDateNumber.textContent = day;\r\n    rgHeaderDateNumber.setAttribute(\"data-rgheader-date\", date)\r\n    const rgHeaderDate = document.createElement('div');\r\n    rgHeaderDate.classList.add('rowgroup--header__monthdow');\r\n    rgHeaderDate.textContent = `${monthname}, ${weekname}`;\r\n    if (settop) {\r\n      rgHeaderDateNumber.classList.add(\"top-datenumber\")\r\n      rgHeaderDate.classList.add(\"top-monthdow\")\r\n\r\n    }\r\n    rgHeader.append(rgHeaderDateNumber, rgHeaderDate);\r\n    return rgHeader;\r\n  }\r\n\r\n  function createRowGroupCell(entry) {\r\n    const color = store.getCtgColor(entry.category);\r\n    const [start, end] = [new Date(entry.start), new Date(entry.end)]\r\n    let datetitle;\r\n    if (longerThanDay(start, end)) {\r\n      let tempyear;\r\n      if (start.getFullYear() !== end.getFullYear()) {\r\n        tempyear = +end.getFullYear() - 2000;\r\n      }\r\n\r\n      datetitle = `${monthNames[end.getMonth()]} ${end.getDate()} ${tempyear ? tempyear : \"\"}`\r\n    } else {\r\n      datetitle = `${formatStartEndTimes(\r\n        [start.getHours(), end.getHours()],\r\n        [start.getMinutes(), end.getMinutes()]\r\n      )}`\r\n    }\r\n\r\n    const rgCell = document.createElement('div');\r\n    rgCell.classList.add('rowgroup--cell');\r\n    rgCell.setAttribute('data-rgcell-id', entry.id);\r\n    const rgCellColor = document.createElement(\"div\");\r\n    rgCellColor.classList.add(\"rowgroup--cell__color\");\r\n    rgCellColor.style.backgroundColor = color;\r\n    const rgCellTime = document.createElement(\"div\");\r\n    rgCellTime.classList.add(\"rowgroup--cell__time\");\r\n    rgCellTime.textContent = datetitle;\r\n    const rgCellTitle = document.createElement(\"div\");\r\n    rgCellTitle.classList.add(\"rowgroup--cell__title\");\r\n    rgCellTitle.textContent = entry.title;\r\n    rgCell.append(rgCellColor, rgCellTime, rgCellTitle);\r\n    return rgCell;\r\n  }\r\n  /*************************************** */\r\n\r\n\r\n  /*************************************** */\r\n  // EVENTS\r\n  function resetCellActive() {\r\n    const activeCell = document?.querySelector(\".rowgroup--cell-active\");\r\n    if (activeCell) {\r\n      activeCell.classList.remove(\"rowgroup--cell-active\");\r\n      activeCell.removeAttribute(\"style\");\r\n    }\r\n  }\r\n\r\n  function getRgContextMenu(cell) {\r\n    const id = cell.getAttribute(\"data-rgcell-id\");\r\n    cell.classList.add(\"rowgroup--cell-active\");\r\n    const entry = store.getEntry(id);\r\n    const start = entry.start;\r\n    const color = store.getCtgColor(entry.category);\r\n    cell.style.backgroundColor = hextorgba(color, 0.2);\r\n\r\n    const rect = cell.getBoundingClientRect();\r\n    const height = cell.offsetHeight;\r\n    const rectTop = parseInt(rect.top) + height;\r\n    const rectLeft = parseInt(rect.left);\r\n    const modalHeight = 165;\r\n\r\n    let y = rectTop + 12;\r\n    if (rectTop + modalHeight > window.innerHeight) {\r\n      y = rectTop - modalHeight - height - 12;\r\n    }\r\n\r\n    console.log(rectTop, window.innerHeight)\r\n\r\n    let x = rectLeft;\r\n    if (rectLeft + 150 > window.innerWidth) {\r\n      x = window.innerWidth - 150;\r\n    }\r\n\r\n    // *** config & open form ***\r\n    store.setFormResetHandle(\"list\", resetCellActive);\r\n\r\n    const setup = new FormSetup();\r\n    setup.setSubmission(\"edit\", id, entry.title, entry.description);\r\n    setup.setCategory(entry.category, color, color);\r\n    setup.setPosition(x, [x, y], y);\r\n    setup.setDates(getFormDateObject(start, entry.end));\r\n    fullFormConfig.setFormDatepickerDate(context, datepickerContext, start);\r\n\r\n    const finishSetup = () => fullFormConfig.getConfig(setup.getSetup());\r\n    getEntryOptionModal(context, store, entry, datepickerContext, finishSetup);\r\n    const modal = document.querySelector(\".entry__options\")\r\n    modal.style.top = y + \"px\";\r\n    modal.style.left = x + \"px\";\r\n  }\r\n\r\n\r\n  // SWITCH TO DAY VIEW\r\n  function setDayViewLV(target) {\r\n    let [year, month, day] = getDateFromAttribute(target, 'data-rgheader-date', \"month\");\r\n    context.setDate(year, month, day);\r\n    context.setDateSelected(day);\r\n    if (context.getSidebarState() === \"open\") {\r\n      datepickerContext.setDate(year, month, day);\r\n      datepickerContext.setDateSelected(day);\r\n    }\r\n    context.setComponent(\"day\")\r\n    setViews(\"day\", context, store, datepickerContext)\r\n  }\r\n  /*************************************** */\r\n\r\n\r\n  /*************************************** */\r\n  // DELEGATION\r\n  function delegateListview(e) {\r\n    const headerNum = getClosest(e, \".rowgroup--header__datenumber\");\r\n    const rgCell = getClosest(e, \".rowgroup--cell\");\r\n\r\n    if (headerNum) {\r\n      setDayViewLV(e.target);\r\n      return;\r\n    }\r\n\r\n    if (rgCell) {\r\n      // console.log(rgCell)\r\n      // rgCell.classList.toggle(\"rowgroup--cell-active\")\r\n      getRgContextMenu(rgCell)\r\n      return;\r\n    }\r\n  }\r\n\r\n  const initListView = () => {\r\n    listviewBody.innerText = \"\";\r\n    const activeEnt = store.getActiveEntries();\r\n    if (activeEnt.length === 0) {\r\n      console.log(true);\r\n      return;\r\n    } else {\r\n\r\n      // update : 1.02 -- (1/16/23)\r\n      // The following logic is in its first stage and will be optimized when I come up with a better solution.\r\n      // I'm debating on whether to use a load more system or an infinite scroll system.\r\n      const entries = store.sortBy(activeEnt, \"start\", \"desc\");\r\n      const today = new Date();\r\n      const getdatearray = date => {\r\n        return [+date.getFullYear(), +date.getMonth() + 1, +date.getDate()]\r\n      }\r\n      const [todayYear, todayMonth, todayDay] = getdatearray(today)\r\n\r\n      const groupedEntries = entries.reduce((acc, curr) => {\r\n        const date = new Date(curr.start)\r\n        const [year, month, day] = getdatearray(date)\r\n        const datestring = `${year}-${month}-${day}` // for parse&group\r\n\r\n        if (year < todayYear) {\r\n          return acc;\r\n        } else if (year === todayYear) {\r\n          if (month < todayMonth) {\r\n            return acc;\r\n          } else if (month === todayMonth && day < todayDay) {\r\n            return acc;\r\n          }\r\n        }\r\n\r\n        if (!acc[datestring]) {acc[datestring] = []}\r\n        acc[datestring].push(curr)\r\n        return acc;\r\n      }, {})\r\n\r\n      // set the header title to the first date with entries that is not in the past and the last date with entries\r\n      // if no entries are in the future, set the header title to \"Schedule Clear\";\r\n      const dateTimeTitle = document.querySelector(\".datetime-content--title\");\r\n      const keys = Object.keys(groupedEntries)\r\n      const length = keys.length;\r\n      if (length === 0) {\r\n        dateTimeTitle.textContent = \"Schedule Clear\"\r\n      } else {\r\n        // true will slice the year at last two digits if two years are displayed at the same time;\r\n        dateTimeTitle.textContent = formatStartEndDate(\r\n          keys[0], \r\n          keys[length - 1], \r\n          true\r\n        );\r\n      }\r\n      createRowGroups(groupedEntries);\r\n      listview.onclick = delegateListview;\r\n    }\r\n\r\n  }\r\n\r\n  initListView();\r\n}","// rendering\r\nimport setViews from \"../../config/setViews\";\r\nimport setSidebarDatepicker from \"../menus/sidebarDatepicker\";\r\nimport fullFormConfig from \"../forms/formUtils\";\r\nimport FormSetup from \"../forms/setForm\";\r\nimport getEntryOptionModal from \"../menus/entryOptions\";\r\n\r\n// Box query\r\nimport MonthBoxQuery from \"../../factory/queries\"\r\n\r\n// popup messages / actions\r\nimport createToast from \"../toastPopups/toast\"\r\nimport {\r\n  toastNoCategorySelected,\r\n  removeToastNoCategorySelected,\r\n} from \"../toastPopups/toastCallbacks\"\r\n\r\n// date utilities\r\nimport {\r\n  getDateFormatted,\r\n  compareDates,\r\n  createDateFromFormattedString,\r\n  getDateFromAttribute,\r\n  getFormDateObject,\r\n  generateTempStartEnd,\r\n  getDurationSeconds,\r\n} from \"../../utilities/dateutils\"\r\n\r\n// general utilities\r\nimport debounce, {\r\n  getClosest,\r\n  hextorgba,\r\n} from '../../utilities/helpers'\r\n\r\n// drag&drop / resize utilities\r\nimport { setStylingForEvent } from \"../../utilities/dragutils\"\r\n\r\n// naming\r\nimport locales from \"../../locales/en\"\r\nconst monthNames = locales.labels.monthsShort\r\n\r\n\r\n\r\nconst resizeoverlay = document.querySelector(\".resize-overlay\")\r\nconst sidebar = document.querySelector(\".sidebar\")\r\nconst monthWrapper = document.querySelector(\".monthview--calendar\")\r\n\r\nexport default function setMonthView(context, store, datepickerContext) {\r\n  const montharray = context.getMonthArray()\r\n  const monthentries = store.getMonthEntries(montharray)\r\n  let groupedEntries = store.getGroupedMonthEntries(monthentries)\r\n\r\n  const boxquery = new MonthBoxQuery(\r\n    window.innerWidth <= 530 || window.innerHeight <= 470\r\n  );\r\n\r\n  function renderSidebarDatepickerMonth() {\r\n    if (!sidebar.classList.contains(\"hide-sidebar\")) {\r\n      datepickerContext.setDate(context.getYear(), context.getMonth(), context.getDay())\r\n      context.setDateSelected(context.getDay())\r\n      setSidebarDatepicker(context, store, datepickerContext)\r\n    }\r\n  }\r\n\r\n  function handleOverlay(type) {\r\n    if (type === \"hide\") {\r\n      resizeoverlay.classList.add(\"hide-resize-overlay\");\r\n      store.removeActiveOverlay(\"hide-resize-overlay\");\r\n    } else {\r\n      resizeoverlay.classList.remove(\"hide-resize-overlay\");\r\n      store.addActiveOverlay(\"hide-resize-overlay\");\r\n    }\r\n  }\r\n\r\n  function setDayViewViaMonth() {\r\n    context.setComponent(\"day\")\r\n    setViews(\"day\", context, store, datepickerContext)\r\n    renderSidebarDatepickerMonth()\r\n  }\r\n\r\n  function renderDayViewViaModal(parentDate) {\r\n    handleOverlay(\"hide\")\r\n    context.setDate(\r\n      parentDate.getFullYear(),\r\n      parentDate.getMonth(),\r\n      parentDate.getDate()\r\n    );\r\n    setDayViewViaMonth();\r\n  }\r\n\r\n  function createBox(id, category, top, title) {\r\n    const box = document.createElement(\"div\")\r\n    box.classList.add(\"monthview--box\")\r\n    box.setAttribute(\"data-monthview-id\", id)\r\n    box.style.backgroundColor = store.getCtgColor(category)\r\n    box.style.top = `${top}px`\r\n    box.style.height = `${boxquery.getHeight()}px`\r\n    box.style.width = \"100%\";\r\n\r\n    const boxtitle = document.createElement(\"div\")\r\n    boxtitle.classList.add(\"monthview--title\")\r\n    boxtitle.textContent = title\r\n    box.appendChild(boxtitle)\r\n    return box\r\n  }\r\n\r\n  function createGroupedCell(cellDate, count) {\r\n    const groupedBxs = document.createElement('div');\r\n    groupedBxs.classList.add('monthview--daygroup');\r\n    groupedBxs.setAttribute(\"data-mvgrouped-date\", cellDate)\r\n    groupedBxs.setAttribute(\"data-mvgrouped-length\", count)\r\n    const groupedDiv = document.createElement(\"div\")\r\n    groupedDiv.classList.add(\"monthview--grouped\")\r\n    const groupedTitle = document.createElement(\"div\")\r\n    groupedTitle.classList.add(\"monthview--daycontent__grouped-title\")\r\n    groupedTitle.textContent = count + \" \" + \"more...\"\r\n\r\n    groupedDiv.appendChild(groupedTitle)\r\n    groupedBxs.appendChild(groupedDiv)\r\n    return groupedBxs;\r\n  }\r\n\r\n  function createCellHeader(cell, day) {\r\n    const daynumberAndMonth = day.getDate() + \" \" + monthNames[day.getMonth()]\r\n    const daynumber = document.createElement('span');\r\n    daynumber.classList.add(\"monthview--daynumber\")\r\n    /**\r\n     * case 1: cell does not represent current month\r\n     * case 2: cell represents first day of current month\r\n     * case 3: cell represents today\r\n     * case 4: cell represents days within current month\r\n    **/\r\n    if (day.getMonth() !== context.getMonth()) {\r\n      daynumber.textContent = daynumberAndMonth;\r\n      daynumber.classList.add(\"monthview--daynumber-prevnext\");\r\n    } else if (day.getDate() === 1) {\r\n      daynumber.textContent = daynumberAndMonth;\r\n    } else if (context.isToday(day)) {\r\n      daynumber.textContent = day.getDate();\r\n      daynumber.classList.add(\"monthview--daynumber-today\");\r\n      cell.classList.add(\"monthview--today\");\r\n    } else {\r\n      daynumber.textContent = day.getDate()\r\n    }\r\n    return daynumber;\r\n  }\r\n\r\n  function createCell(day, idx, entry, cellDate) {\r\n    const cellCoordinates = [\r\n      +day.getDay(),        // (x): day of week\r\n      Math.floor((idx) / 7) // (y): week of month\r\n    ]\r\n\r\n    const cell = document.createElement(\"div\");\r\n    cell.classList.add(\"monthview--day\");\r\n    cell.setAttribute(\"data-mv-date\", cellDate)\r\n    cell.setAttribute(\"data-mv-idx\", idx)\r\n    cell.setAttribute(\"data-mv-coordinates\", cellCoordinates)\r\n\r\n    const dayofmonth = document.createElement('div');\r\n    const cellContent = document.createElement('div');\r\n    dayofmonth.classList.add('monthview--dayofmonth');\r\n    cellContent.classList.add('monthview--daycontent');\r\n\r\n    if (day.getMonth() === context.getMonth() && day.getDate() === context.getDateSelected()) {\r\n      dayofmonth.classList.add(\"monthview--dayofmonth-selected\")\r\n    }\r\n    dayofmonth.appendChild(createCellHeader(cell, day))\r\n\r\n\r\n    let toptotal = 0; // box.style.top = (box index) * boxquery.getTop()\r\n\r\n\r\n    if (entry !== undefined && entry.length > 0) {\r\n\r\n      // handle instances where entries have same day but different month\r\n      entry = entry.filter((el) => new Date(el.start).getMonth() === day.getMonth())\r\n\r\n      if (entry.length >= 6) {\r\n        // automatically group if there are more than 6 entries on a day\r\n        cellContent.appendChild(createGroupedCell(cellDate, entry.length))\r\n        cellContent.classList.add(\"monthview--daycontent-grouped\")\r\n\r\n      } else {\r\n\r\n        // not grouped (less than 6 entries)\r\n        entry.forEach((el, idx) => {\r\n          if (compareDates(new Date(el.start), day)) {\r\n            if (idx > 0) {\r\n              toptotal += boxquery.getTop()\r\n            }\r\n            cellContent.appendChild(createBox(\r\n              el.id,        // entry id\r\n              el.category,  // backgroundColor\r\n              toptotal,     // style.top\r\n              el.title      // entry title\r\n            ))\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    cell.append(dayofmonth, cellContent);\r\n    monthWrapper.appendChild(cell);\r\n  }\r\n\r\n  function populateCells() {\r\n    monthWrapper.innerText = \"\";\r\n    montharray.length < 42\r\n      ? monthWrapper.classList.add(\"five-weeks\")\r\n      : monthWrapper.classList.remove(\"five-weeks\");\r\n\r\n    const dayHasEntry = (day) => {\r\n      const dayEntries = groupedEntries[day.getDate()];\r\n      return dayEntries !== undefined ? dayEntries : [];\r\n    }\r\n\r\n    montharray.forEach((day, idx) => {\r\n      createCell(day, idx, dayHasEntry(day), getDateFormatted(day))\r\n    });\r\n\r\n    groupedEntries = [];\r\n  }\r\n\r\n  function getCoordinatesFromCell(cell) {\r\n    return cell.getAttribute(\"data-mv-coordinates\").split(\",\").map((x) => {\r\n      return parseInt(x);\r\n    })\r\n  }\r\n\r\n  function configureForStorage(newCell, clone) {\r\n    let [year, month, day] = getDateFromAttribute(newCell, \"data-mv-date\", \"month\");\r\n    const id = clone.getAttribute(\"data-monthview-id\");\r\n    let tempEntry = store.getEntry(id);\r\n\r\n    let [start, end] = [new Date(tempEntry.start), new Date(tempEntry.end)];\r\n    let tempdate = new Date(year, month, day);\r\n    let diff = getDurationSeconds(start, tempdate);\r\n    let endDay = end.getDate() + Math.floor(diff / 86400) + 1;\r\n\r\n    store.updateEntry(id, {\r\n      start: new Date(\r\n        year, month, day, start.getHours(), start.getMinutes()\r\n      ),\r\n      end: new Date(\r\n        end.getFullYear(), end.getMonth(), endDay, end.getHours(), end.getMinutes()\r\n      ),\r\n    });\r\n  }\r\n\r\n  function createTemporaryBox(box) {\r\n    const clone = box.cloneNode(true);\r\n    monthWrapper.appendChild(clone);\r\n    clone.classList.add(\"box-mv-dragactive\");\r\n    clone.focus();\r\n  }\r\n\r\n  function configGroupedCellOnDrop(groupedCell) {\r\n    const count = groupedCell.getAttribute(\"data-mvgrouped-length\");\r\n    groupedCell.setAttribute(\"data-mvgrouped-length\", +count + 1);\r\n    groupedCell.firstChild.firstChild.textContent = `${groupedCell.getAttribute(\"data-mvgrouped-length\")} more...`;\r\n  }\r\n\r\n  function configClonedBoxForDrop(clone) {\r\n    clone.classList.remove(\"box-mv-dragactive\");\r\n    clone.style.top = \"0px\";\r\n    clone.style.left = \"0px\";\r\n    clone.style.width = \"100%\";\r\n    clone.style.height = `${boxquery.getHeight()}px`;\r\n  }\r\n\r\n  function resetCellOnDrop(bxs, transition) {\r\n    if (bxs.length === 0 || bxs === undefined) return;\r\n    for (let i = 0; i < bxs.length; i++) {\r\n\r\n      if (bxs[i] !== undefined && bxs[i] !== null && !bxs[i].classList.contains(\"monthview--box__form-temp\")) {\r\n        bxs[i].style.top = `${i * boxquery.getTop()}px`;\r\n\r\n        if (transition) {\r\n          bxs[i].classList.add(\"monthview--box__drop\");\r\n          setTimeout(() => {\r\n            bxs[i].classList.remove(\"monthview--box__drop\")\r\n          }, 200);\r\n\r\n        } else {\r\n          bxs[i].setAttribute(\"class\", \"monthview--box\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function createGroupedCellOnDrop(cell, content, boxes, clone) {\r\n    const newGroupedCell = document.createElement('div');\r\n    newGroupedCell.classList.add('monthview--daygroup');\r\n    newGroupedCell.setAttribute(\"data-mvgrouped-date\", cell.getAttribute(\"data-mv-date\"));\r\n    newGroupedCell.setAttribute(\"data-mvgrouped-length\", boxes.length);\r\n\r\n    const groupedDiv = document.createElement(\"div\");\r\n    groupedDiv.classList.add(\"monthview--grouped\");\r\n    const groupedTitle = document.createElement(\"div\");\r\n    groupedTitle.classList.add(\"monthview--daycontent__grouped-title\");\r\n    groupedTitle.textContent = boxes.length + \" \" + \"more...\";\r\n\r\n    // reset cell content to empty then append grouped cell\r\n    content.innerText = \"\";\r\n    newGroupedCell.appendChild(groupedDiv);\r\n    groupedDiv.appendChild(groupedTitle);\r\n    content.appendChild(newGroupedCell);\r\n    content.classList.add(\"monthview--daycontent-grouped\")\r\n    clone.remove();\r\n  }\r\n\r\n  // the month view drag and drop system differs from the week & day views\r\n  // see readme for more info (section : drag engine)\r\n  function dragEngineMonth(e, box) {\r\n    setStylingForEvent(\"dragstart\", monthWrapper, store);\r\n    const startDragTime = Date.now()\r\n    const parent = box.parentElement;\r\n    const cell = parent.parentElement;\r\n    cell.classList.add(\"current-drop-zone\");\r\n\r\n    const originalCellLength = parent.childElementCount;\r\n    const [cellX, cellY] = getCoordinatesFromCell(cell);\r\n\r\n    // create cloned box with class box-mv-dragactive\r\n    createTemporaryBox(box);\r\n    const clone = document?.querySelector(\".box-mv-dragactive\");\r\n    clone.setAttribute(\"data-box-mvx\", cellX);\r\n    clone.setAttribute(\"data-box-mvy\", cellY);\r\n\r\n    const cellRect = cell.getBoundingClientRect();\r\n    const cellWidth = parseFloat(cellRect.width.toFixed(2))\r\n    const cellHeight = parseFloat(cellRect.height.toFixed(2));\r\n    const wrapperLeft = parseInt(monthWrapper.offsetLeft)\r\n    const boxRect = box.getBoundingClientRect();\r\n    const boxWidth = parseFloat(boxRect.width);\r\n    const boxHeight = boxquery.getHeight()\r\n\r\n    clone.style.top = `${parent.offsetTop}px`;\r\n    clone.style.width = `${boxWidth}px`;\r\n    clone.style.height = `${boxHeight}px`;\r\n    clone.style.left = `${parent.offsetLeft}px`\r\n    clone.style.display = \"none\"\r\n\r\n    let hasFiveWeeks = monthWrapper.classList.contains(\"five-weeks\");\r\n    let [startcursorx, startcursory] = [e.clientX, e.clientY];\r\n    let [movedX, movedY] = [0, 0];\r\n    let [lastX, lastY] = [cellX, cellY];\r\n    let gaveStyles = false; \r\n    let changeCursor = false;\r\n    \r\n\r\n\r\n    const mousemove = e => {\r\n      movedX = Math.abs(e.clientX - startcursorx);\r\n      movedY = Math.abs(e.clientY - startcursory);\r\n      // Do not apply styles until user has moved the box at least 5px from starting position.\r\n      if (movedX > 1 || movedY > 1) {\r\n        if (!changeCursor) {\r\n          document.body.style.cursor = \"move\";\r\n          changeCursor = true;\r\n        }\r\n      }\r\n      if (movedX > 3 || movedY > 3) {\r\n        if (!gaveStyles) {\r\n          // document.body.style.cursor = \"move\";\r\n          box.style.opacity = \"0.5\";\r\n          clone.style.display = \"block\"\r\n        }\r\n        gaveStyles = true;\r\n      }\r\n\r\n      // *********************\r\n      // DRAG EAST / WEST\r\n      let newX = Math.floor((e.clientX - monthWrapper.offsetLeft) / cellWidth);\r\n      // min : first column\r\n      if (newX < 0) {\r\n        newX = 0;\r\n        return;\r\n      }\r\n      // max : last column\r\n      if (newX > 6) {\r\n        newX = 6;\r\n        return;\r\n      }\r\n\r\n      // update new left position once\r\n      if (lastX !== newX) {\r\n        let multX = (newX * cellWidth) + wrapperLeft\r\n        clone.style.left = `${parseFloat(multX.toFixed(2))}px`;\r\n        lastX = newX;\r\n      }\r\n\r\n\r\n      // *********************\r\n      // DRAG NORTH / SOUTH\r\n      let newY = Math.floor((e.clientY - monthWrapper.offsetTop) / cellHeight);\r\n      // min : first row\r\n      if (newY < 0) {\r\n        newY = 0;\r\n        return;\r\n      }\r\n      // max : last row (5 weeks)\r\n      if (hasFiveWeeks && newY > 4) {\r\n        newY = 4;\r\n        return;\r\n      }\r\n      // max : last row (6 weeks)\r\n      if (!hasFiveWeeks && newY > 5) {\r\n        newY = 5;\r\n        return;\r\n      }\r\n\r\n      // ensure new top position is only calculated if the cursor has moved\r\n      // vertically across a cell border\r\n      if (lastY !== newY) {\r\n        let multY = (newY * cellHeight) + monthWrapper.offsetTop + 16\r\n        clone.style.top = `${parseFloat(multY.toFixed(2))}px`;\r\n        lastY = newY;\r\n      }\r\n\r\n      // *********************\r\n      // .current-drop-zone\r\n      // Provides a callable reference to the\r\n      // final drop zone initiated on mouseup. \r\n      document.querySelector(\".current-drop-zone\")?.classList.remove(\"current-drop-zone\");\r\n      document.querySelector(`[data-mv-coordinates=\"${newX},${newY}\"]`).classList.add(\"current-drop-zone\");\r\n    }\r\n\r\n    const mouseup = () => {\r\n      const newCell = document?.querySelector(\".current-drop-zone\");\r\n      const endDragTime = Date.now()\r\n      const timeDiff = endDragTime - startDragTime\r\n      const [newCellX, newCellY] = getCoordinatesFromCell(newCell);\r\n      newCell.classList.remove(\"current-drop-zone\");\r\n      const newCellContent = newCell.children[1];\r\n      const boxes = newCellContent?.children;\r\n      let boxmoved = false;\r\n\r\n\r\n      // newcell not found \r\n      if (newCell === undefined || newCell === null) {\r\n        setStylingForEvent(\"dragend\", monthWrapper, store);\r\n        box.style.opacity = \"1\";\r\n        clone.remove();\r\n        boxmoved = false;\r\n        document.removeEventListener(\"mousemove\", mousemove);\r\n        document.removeEventListener(\"mouseup\", mouseup);\r\n        return;\r\n      }\r\n\r\n      // handle case where box is not moved\r\n      // treat as click event if quick enough\r\n      if (newCellX === cellX && newCellY === cellY) {\r\n        boxmoved = false;\r\n        box.style.opacity = \"1\";\r\n        clone.remove();\r\n        if (timeDiff < 200) {\r\n          openFormOnClickMV(box, newCell);\r\n        } \r\n\r\n        // box was moved\r\n      } else {\r\n        //    case 1 : cell has 6 or more items (more than 6 items)\r\n        //    case 2 : cell is not empty and not group (1-5 items)\r\n        //    case 3 : cell is now a group (6 items)\r\n        //    case 4 : cell is empty\r\n        // cases 1-4 : run update after to update styling\r\n        // (click)     case 5 : box not moved \r\n        // movedX / movedY : cursor distance, i.e. (dragstart to dragend)\r\n        boxmoved = true;\r\n        if (boxes[0] !== undefined) {\r\n\r\n          // grouped cell\r\n          if (boxes[0].classList.contains(\"monthview--daygroup\")) {\r\n            // (case 1)\r\n            configGroupedCellOnDrop(boxes[0]);\r\n            configureForStorage(newCell, clone);\r\n            clone.remove();\r\n            box.remove();\r\n\r\n          } else {\r\n            // ***********************\r\n            // setup for cases 2 & 3 (not grouped/not empty)\r\n            configClonedBoxForDrop(clone);\r\n            newCellContent.insertBefore(clone, boxes[0]);\r\n            configureForStorage(newCell, clone);\r\n            box.remove();\r\n            // ***********************\r\n            if (boxes.length <= 5) {\r\n              // (case 2)\r\n              resetCellOnDrop(boxes, true);\r\n            } else {\r\n              // (case 3)\r\n              createGroupedCellOnDrop(newCell, newCellContent, boxes, clone);\r\n            }\r\n          }\r\n        } else {\r\n          // (case 4)\r\n          configClonedBoxForDrop(clone);\r\n          box.remove();\r\n          newCellContent.appendChild(clone);\r\n          configureForStorage(newCell, clone);\r\n          renderSidebarDatepickerMonth();\r\n        }\r\n      }\r\n\r\n\r\n      if (boxmoved) {\r\n        // & original cell empty \r\n        if (originalCellLength === 1) {\r\n          renderSidebarDatepickerMonth();\r\n        } else {\r\n          // & original cell not empty --- re calculate styling\r\n          resetCellOnDrop(parent.children, true);\r\n        }\r\n      }\r\n      /*******************/\r\n      setStylingForEvent(\"dragend\", monthWrapper, store);\r\n      document.removeEventListener(\"mousemove\", mousemove);\r\n      document.removeEventListener(\"mouseup\", mouseup);\r\n    }\r\n    document.addEventListener(\"mousemove\", mousemove);\r\n    document.addEventListener(\"mouseup\", mouseup);\r\n  }\r\n\r\n  function getMoreModalEntries(e) {\r\n    const [y, m, d] = getDateFromAttribute(\r\n      e.target.parentElement.parentElement, \"data-mv-date\", \"month\"\r\n    );\r\n    return store.getDayEntriesArray(new Date(y, m, d));\r\n  }\r\n\r\n  function closeMoreModalOnEscape(e) {\r\n    if (e.key === \"Escape\") {\r\n      closeMoreModal()\r\n    }\r\n  }\r\n\r\n  function closeMoreModal() {\r\n    const mm = document?.querySelector(\".more-modal\");\r\n    if (mm) {\r\n      mm.remove();\r\n    }\r\n    handleOverlay(\"hide\");\r\n    document.removeEventListener(\"keydown\", closeMoreModalOnEscape);\r\n  }\r\n\r\n  function createMoreModalBox(moreModalEntries) {\r\n    const modalContent = document.createElement(\"div\");\r\n    modalContent.classList.add(\"more-modal-content\");\r\n    for (let i = 0; i < moreModalEntries.length; i++) {\r\n      const entry = moreModalEntries[i];\r\n\r\n      const modalEntry = document.createElement(\"div\");\r\n      modalEntry.classList.add(\"more-modal-entry\");\r\n      modalEntry.style.top = `${i * 22}px`;\r\n\r\n      modalEntry.style.width = `calc(100% - 4px)`;\r\n      modalEntry.style.height = \"20px\";\r\n      modalEntry.setAttribute(\"data-monthview-id\", entry.id);\r\n      modalEntry.setAttribute(\"data-mvhidden-category\", entry.category);\r\n      modalEntry.style.backgroundColor = store.getCtgColor(entry.category);\r\n\r\n      const modalEntryTitle = document.createElement(\"div\");\r\n      modalEntryTitle.classList.add(\"more-modal-entry-title\");\r\n      modalEntryTitle.textContent = entry.title;\r\n\r\n      modalEntry.appendChild(modalEntryTitle);\r\n      modalContent.appendChild(modalEntry);\r\n    }\r\n    return modalContent;\r\n  }\r\n  // if more than four tasks exist in a cell, group them on next reload\r\n  function createMoreModal(e) {\r\n    const moreModalEntries = getMoreModalEntries(e);\r\n    handleOverlay(\"show\");\r\n    // parent : month cell\r\n    const parent = e.target.parentElement.parentElement;\r\n    const modal = document.createElement(\"div\");\r\n    modal.classList.add(\"more-modal\");\r\n    modal.setAttribute(\"data-mv-modal\", parent.getAttribute(\"data-mv-idx\"));\r\n\r\n    const r = parent.getBoundingClientRect();\r\n    const [\r\n      parentTop, parentLeft,\r\n      parentBottom, parentWidth, parentHeight\r\n    ] = [r.top, r.left, r.bottom, r.width, r.height].map((x) => {\r\n      return Math.round(x)\r\n    });\r\n    const [pX, pY] = getCoordinatesFromCell(parent);\r\n    if (pX === 6) {\r\n      modal.style.right = `0`;\r\n    } else if (pX === 0) {\r\n      modal.style.left = `0`;\r\n    } else {\r\n      modal.style.left = `${parentLeft - parseInt(parentWidth * 0.25)}px`\r\n    }\r\n\r\n    modal.style.top = \"10%\";\r\n    modal.style.bottom = \"10%\";\r\n    modal.style.margin = \"auto 0\";\r\n    modal.style.minWidth = \"160px\";\r\n    modal.style.width = `${parentWidth + parseInt(parentWidth * 0.5)}px`;\r\n    modal.style.maxHeight = \"300px\";\r\n    modal.style.height = \"40%\";\r\n    modal.style.minHeight = \"120px\";\r\n\r\n    const modalHeader = document.createElement(\"div\");\r\n    modalHeader.classList.add(\"more-modal-header\");\r\n    const modalHeaderTitle = document.createElement(\"div\");\r\n    modalHeaderTitle.classList.add(\"more-modal-header-title\");\r\n    const parentDate = createDateFromFormattedString(e.target.parentElement.parentElement.getAttribute(\"data-mv-date\"));\r\n\r\n    // dayn: daynumber (1, 2, 3, etc)\r\n    const dowspan = document.createElement(\"span\");\r\n    dowspan.classList.add(\"more-modal-header-title-dow\");\r\n    dowspan.textContent = locales.labels.weekdaysShort[parentDate.getDay()].toUpperCase();\r\n\r\n    const daynspan = document.createElement(\"span\");\r\n    daynspan.classList.add(\"more-modal-header-title-dayn\");\r\n    daynspan.textContent = parentDate.getDate();\r\n\r\n    const modalHeaderClose = document.createElement(\"div\");\r\n    modalHeaderClose.classList.add(\"more-modal-header-close\");\r\n    modalHeaderClose.textContent = \"X\";\r\n    modalHeaderClose.setAttribute(\"data-tooltip\", \"Close\");\r\n\r\n    modalHeaderTitle.append(modalHeaderClose, dowspan, daynspan);\r\n    modalHeader.appendChild(modalHeaderTitle);\r\n    modal.append(modalHeader, createMoreModalBox(moreModalEntries)) //entries\r\n    monthWrapper.appendChild(modal);\r\n\r\n    // open day view (number click)\r\n    daynspan.addEventListener(\"click\", () => {\r\n      renderDayViewViaModal(parentDate);\r\n    }, { once: true });\r\n\r\n    // click away from modal to close\r\n    resizeoverlay.addEventListener(\"click\", (e) => {\r\n      closeMoreModal();\r\n    }, { once: true });\r\n\r\n    document.addEventListener(\"keydown\", closeMoreModalOnEscape);\r\n  }\r\n\r\n  function dragOutOfModal(e) {\r\n    const targetModal = e.target.closest(\".more-modal\");\r\n    const targetCellIdx = parseInt(targetModal.getAttribute(\"data-mv-modal\"));\r\n    const targetCell = document.querySelector(`[data-mv-idx=\"${targetCellIdx}\"]`);\r\n\r\n    const cloned = e.target.cloneNode(true);\r\n    cloned.setAttribute(\"class\", \"monthview--box\");\r\n    cloned.firstChild.setAttribute(\"class\", \"monthview--title\");\r\n    cloned.style.top = `${boxquery.getTop()}px`;\r\n    cloned.style.left = \"0px\";\r\n    cloned.style.width = \"100%\";\r\n    targetCell.lastChild.appendChild(cloned);\r\n\r\n    // update title of more modal to reflect one less entry\r\n    const moreModal = targetCell.lastChild.firstChild;\r\n    const newLength = parseInt(moreModal.getAttribute(\"data-mvgrouped-length\")) - 1;\r\n\r\n    if (newLength < 1) {\r\n      targetCell.lastChild.classList.remove(\"monthview--daycontent-grouped\")\r\n      moreModal.remove();\r\n      cloned.style.top = \"0px\";\r\n    } else {\r\n      moreModal.setAttribute(\"data-mvgrouped-length\", newLength);\r\n      moreModal.firstChild.firstChild.textContent = `${newLength} more...`;\r\n    }\r\n\r\n    // instantiate drag engine on cloned element and destroy the more modal instance\r\n    dragEngineMonth(e, cloned);\r\n    cloned.focus();\r\n    targetModal.remove();\r\n  }\r\n\r\n  function openDayView(e) {\r\n    const [year, month, day] = getDateFromAttribute(\r\n      e.target.parentElement, \"data-mv-date\", \"month\"\r\n    );\r\n    context.setDate(year, month, day);\r\n    context.setDateSelected(day);\r\n    setDayViewViaMonth();\r\n  }\r\n\r\n  function handleMonthviewEditFormClose() {\r\n    const tempcell = document.querySelector(\".monthview--daycontent__form-temp\");\r\n    if (!tempcell) return;\r\n\r\n    tempcell.removeAttribute(\"style\");\r\n    tempcell.classList.remove(\"monthview--daycontent__form-temp\");\r\n  }\r\n\r\n  // reset cell to original state if form is closed without any action\r\n  function handleMonthviewFormClose() {\r\n    const tempbox = document?.querySelector(\".monthview--box__form-temp\")\r\n    if (!tempbox) return;\r\n    const cellContent = tempbox.parentElement;\r\n    const cell = cellContent.parentElement;\r\n    cell.removeAttribute(\"style\");\r\n    cell.classList.remove(\"monthview--daycontent__form-temp\");\r\n    tempbox.remove();\r\n    resetCellOnDrop(cellContent.children, false);\r\n  }\r\n\r\n  function openFormOnClickMV(box, cell) {\r\n    const id = box.getAttribute(\"data-monthview-id\");\r\n    const entry = store.getEntry(id);\r\n    const start = entry.start;\r\n    const color = store.getCtgColor(entry.category);\r\n    const offsetColor = hextorgba(color, 0.5);\r\n    cell.classList.add(\"monthview--daycontent__form-temp\");\r\n    cell.style.backgroundColor = offsetColor;\r\n    const [x, y] = getCoordinatesFromCell(cell);\r\n    console.log(y)\r\n    \r\n    let offX = cell.offsetLeft;\r\n    let offY = cell.offsetTop;\r\n    let offH = cell.offsetHeight;\r\n    let offW = cell.offsetWidth;\r\n    console.log(offX, offY)\r\n\r\n    if (x >= 3) {\r\n      offX -= (offW * (x - 2));\r\n    }\r\n    if (y >= 2) {\r\n      offY -= (offH * 2);\r\n    } else {\r\n      offY += offH;\r\n    }\r\n    // console.log(x, y)\r\n\r\n    // *** config & open form ***\r\n    store.setFormResetHandle(\"month\", handleMonthviewEditFormClose);\r\n\r\n    const setup = new FormSetup();\r\n    setup.setSubmission(\"edit\", id, entry.title, entry.description);\r\n    setup.setCategory(entry.category, color, color);\r\n    setup.setPosition(x, [x, y], parseInt(monthWrapper.offsetTop) - 16);\r\n    setup.setDates(getFormDateObject(start, entry.end));\r\n\r\n    fullFormConfig.setFormDatepickerDate(context, datepickerContext, start);\r\n\r\n    // Entry option modal will either trigger or release the above setup\r\n    // provide callback to finish setup and open form\r\n    const finishSetup = () => fullFormConfig.getConfig(setup.getSetup());\r\n    getEntryOptionModal(context, store, entry, datepickerContext, finishSetup);\r\n    const modal = document.querySelector(\".entry__options\")\r\n    modal.style.top = offY + \"px\";\r\n    modal.style.left = offX + \"px\";\r\n    // *******************\r\n  }\r\n\r\n  function configNewBoxInsertion(cellWrapper, cell, category, color) {\r\n    const tempBox = createBox(\r\n      'temp',          // box.id\r\n      category,        // box.style.backgroundColor \r\n      0,               // box.style.top\r\n      \"( New Entry )\"  // box title\r\n    );\r\n    cellWrapper.scrollTop = 0;\r\n    tempBox.classList.add(\"monthview--box__form-temp\");\r\n    cell.classList.add(\"monthview--daycontent__form-temp\");\r\n    cell.style.backgroundColor = color;\r\n    if (cellWrapper.children.length > 0) {\r\n      cellWrapper.insertBefore(tempBox, cellWrapper.children[0]);\r\n      resetCellOnDrop(cellWrapper.children, false);\r\n    } else {\r\n      cellWrapper.appendChild(tempBox);\r\n    }\r\n  }\r\n\r\n  function createEntryOnEmptyTarget(e, cellWrapper) {\r\n    if (e.target.classList.contains(\"monthview--daycontent\")) {\r\n      // if no categories are selected, open sidebar and highlight category box\r\n      const categoryBox = document.querySelector(\".sb__categories--body\")\r\n      if (store.getActiveCategories() === undefined) {\r\n        categoryBox.classList.remove(\"toggle-category--modal\")\r\n        createToast(\r\n          \"No categories selected\",\r\n          3000,\r\n          sidebar.classList.contains(\"hide-sidebar\") ? store.getRenderSidebarCallback() : null,\r\n          toastNoCategorySelected,\r\n          removeToastNoCategorySelected,\r\n          null,\r\n        )\r\n        return;\r\n      } else {\r\n\r\n        // get first active category & create temp box with its color\r\n        const cell = cellWrapper.parentElement;\r\n        const [start, end] = generateTempStartEnd(\r\n          getDateFromAttribute(cell, \"data-mv-date\", \"month\")\r\n        );\r\n        const [tempctg, color] = store.getFirstActiveCategoryKeyPair();\r\n        const offsetcolor = hextorgba(color, 0.5);\r\n        const [x, y] = getCoordinatesFromCell(cell);\r\n\r\n        configNewBoxInsertion(cellWrapper, cell, tempctg, offsetcolor)\r\n        store.setFormResetHandle(\"month\", handleMonthviewFormClose);\r\n        const openForm = store.getRenderFormCallback();\r\n        const setup = new FormSetup();\r\n\r\n        setup.setSubmission(\"create\", null, null, null);\r\n        setup.setCategory(tempctg, color, color);\r\n        setup.setPosition(x, [x, y], parseInt(monthWrapper.offsetTop) - 16)\r\n        setup.setDates(getFormDateObject(start, end))\r\n\r\n        openForm()\r\n        fullFormConfig.setFormDatepickerDate(context, datepickerContext, start)\r\n        fullFormConfig.getConfig(setup.getSetup())\r\n      }\r\n    }\r\n  }\r\n\r\n  function delegateMonthEvents(e) {\r\n    // delegates via monthview--box (monthWrapper) onmousedown\r\n    const monthviewBox = getClosest(e, \".monthview--box\")\r\n    const monthviewBoxHeader = getClosest(e, \".monthview--dayofmonth\")\r\n    const groupedBox = getClosest(e, \".monthview--daygroup\")\r\n    const groupedBoxItem = getClosest(e, \".more-modal-entry\")\r\n    const closeGroupedBox = getClosest(e, \".more-modal-header-close\")\r\n\r\n    // target : any box (task/event) within a day\r\n    // execute : drag and drop\r\n    if (monthviewBox) {\r\n      if (window.innerHeight <= 300) return;\r\n      dragEngineMonth(e, e.target)\r\n      return;\r\n    }\r\n\r\n    // target : cell day number\r\n    // execute : open day view of that day \r\n    if (monthviewBoxHeader) {\r\n      openDayView(e)\r\n      return;\r\n    }\r\n\r\n    // target : grouped box (more...)\r\n    // execute : create popup modal with all grouped entries of that day\r\n    if (groupedBox) {\r\n      createMoreModal(e)\r\n      return;\r\n    }\r\n\r\n    // target : entry within more modal \r\n    // execute : drag box (e.target) out of the more modal for reassignment, (same day works as well)\r\n    if (groupedBoxItem) {\r\n      dragOutOfModal(e)\r\n      return;\r\n    }\r\n\r\n    // target : close btn within more modal\r\n    if (closeGroupedBox) {\r\n      closeMoreModal()\r\n      return;\r\n    }\r\n  }\r\n\r\n  function delegateNewBox(e) {\r\n    // delegates via monthview--daycontent (cellWrapper) onclick\r\n    // note that this is the same parent element that delegates mouse down events\r\n    // second delegation is needed to prevent the scrollbars that exist within the cells (days) from triggering the creation of a new entry on cell click\r\n    const emptyBoxClick = getClosest(e, \".monthview--daycontent\")\r\n    if (emptyBoxClick) {\r\n      if (window.innerHeight <= 300) return;\r\n      createEntryOnEmptyTarget(e, e.target)\r\n      return;\r\n    }\r\n  }\r\n\r\n  // event listener is added & removed @ ./setViews.js\r\n  function getMonthviewResize() {\r\n    let lastquery = boxquery.getFlag()\r\n    boxquery.updateFlag()\r\n    // run once per query change\r\n    if (lastquery === boxquery.getFlag()) return;\r\n    const boxes = document.querySelectorAll(\".monthview--box\");\r\n    const querytop = boxquery.getTop();\r\n    const queryHeight = boxquery.getHeight();\r\n    const prevtop = boxquery.getPrevTop(querytop);\r\n    boxes.forEach(box => {\r\n      // always set height \r\n      box.style.height = `${queryHeight}px`\r\n      let currenttop = parseInt(box.style.top)\r\n      if (currenttop === 0) {\r\n        return;\r\n      } else {\r\n        // get previous query top to find index of curren top then calc\r\n        let idx = currenttop / prevtop;\r\n        box.style.top = `${idx * querytop}px`;\r\n      }\r\n    })\r\n  }\r\n\r\n  const initMonth = () => {\r\n    // see readme @ -- monthview.events -- for more info on setup\r\n    populateCells()\r\n    monthWrapper.onmousedown = delegateMonthEvents\r\n    monthWrapper.onclick = delegateNewBox\r\n    // const handlewindowResize = debounce(getMonthviewResize, 100)\r\n    // store.setResizeHandle(\"month\", handlewindowResize)\r\n    store.setResizeHandle(\"month\", getMonthviewResize)\r\n  }\r\n\r\n  initMonth()\r\n}","import setViews from \"../../config/setViews\"\r\nimport setSidebarDatepicker from \"../menus/sidebarDatepicker\"\r\nimport fullFormConfig from \"../forms/formUtils\"\r\nimport FormSetup from \"../forms/setForm\";\r\nimport getEntryOptionModal from \"../menus/entryOptions\";\r\nimport { Week } from \"../../factory/entries\"\r\nimport locales from \"../../locales/en\"\r\nimport calcTime, { formatTime } from \"../../utilities/timeutils\"\r\nimport {\r\n  formatStartEndDate,\r\n  formatStartEndTime,\r\n  getDuration,\r\n  getDateTimeFormatted,\r\n  getTempDates,\r\n  getFormDateObject,\r\n  getDateFromAttribute,\r\n} from \"../../utilities/dateutils\"\r\nimport handleOverlap, {\r\n  setStylingForEvent,\r\n  updateBoxCoordinates,\r\n  setBoxTimeAttributes,\r\n  createBox,\r\n  createTemporaryBox,\r\n  getBoxDefaultStyle,\r\n  resetStyleOnClick,\r\n  createTempBoxHeader,\r\n  startEndDefault,\r\n  calcNewHourFromCoords,\r\n  calcNewMinuteFromCoords,\r\n  calcDateOnClick,\r\n  getOriginalBoxObject,\r\n  resetOriginalBox,\r\n} from \"../../utilities/dragutils\"\r\nimport { getClosest } from \"../../utilities/helpers\"\r\nimport createToast from \"../toastPopups/toast\"\r\nimport {\r\n  toastNoCategorySelected,\r\n  removeToastNoCategorySelected,\r\n} from \"../toastPopups/toastCallbacks\"\r\n\r\n\r\n\r\n// main app sidebar\r\nconst sidebar = document.querySelector('.sidebar');\r\n\r\n// calendar overlay\r\nconst resizeoverlay = document.querySelector(\".resize-overlay\")\r\n\r\n// weekview main grid wrapper & children\r\nconst main = document.querySelector(\".weekview\")\r\nconst container = document.querySelector(\".weekview--calendar\")\r\nconst weekviewHeader = document.querySelector(\".weekview--header\")\r\nconst weekviewHeaderDayNumber = document.querySelectorAll(\".weekview--header-day__number\")\r\nconst weekviewHeaderTitle = document.querySelectorAll('.weekview--header-day__title');\r\nconst weekviewHeaderDay = document.querySelectorAll(\".weekview--header-day\")\r\nconst weekviewGrid = document.querySelector(\".weekview__grid\")\r\nconst cols = document.querySelectorAll(\".week--col\")\r\n\r\n// weekview top grid & children\r\nconst alldaymodule = document.querySelector(\".weekview--allday-module\")\r\nconst topCols = document.querySelectorAll(\".allday--col\")\r\n\r\nexport default function setWeekView(context, store, datepickerContext) {\r\n  const weekArray = context.getWeekArray()\r\n  let entries = store.getWeekEntries(weekArray)\r\n  let boxes = new Week(entries.day, entries.allDay);\r\n\r\n  function configureDaysOfWeek() {\r\n    let hasToday;\r\n    let hasSelected;\r\n    let dayNumbers = []\r\n    let ymd = []\r\n    const today = context.getToday()\r\n    let [ty, tm, td] = [today.getFullYear(), today.getMonth(), today.getDate()]\r\n\r\n    weekArray.forEach((day, idx) => {\r\n      let [y, m, d] = [\r\n        day.getFullYear(),\r\n        day.getMonth(),\r\n        day.getDate(),\r\n      ];\r\n\r\n      dayNumbers.push(d);\r\n      ymd.push(`${y}-${m}-${d}`)\r\n\r\n      if (d === context.getDateSelected() && m === context.getMonth()) {\r\n        hasSelected = d;\r\n      }\r\n\r\n      if (d === td && m === tm && y === ty) {\r\n        hasToday = d;\r\n      }\r\n    })\r\n\r\n    dayNumbers.forEach((num, idx) => {\r\n      if (num === hasSelected) {\r\n        weekviewHeaderDay[idx].classList.add(\"wvh--selected\")\r\n      } else {\r\n        weekviewHeaderDay[idx].classList.remove(\"wvh--selected\")\r\n      }\r\n\r\n      weekviewHeaderDayNumber[idx].textContent = num\r\n      if (num === hasToday) {\r\n        weekviewHeaderDay[idx].classList.add(\"wvh--today\")\r\n      } else {\r\n        weekviewHeaderDay[idx].classList.remove(\"wvh--today\")\r\n      }\r\n\r\n      weekviewHeaderDay[idx].setAttribute(\"data-weekview-date\", ymd[idx]);\r\n      topCols[idx].setAttribute(\"data-wvtop-day\", num)\r\n    })\r\n\r\n\r\n    function setDayView(e) {\r\n      let [yr, mo, da] = getDateFromAttribute(e.target, \"data-weekview-date\")\r\n      context.setDate(yr, mo, da)\r\n      context.setDateSelected(da)\r\n      context.setComponent(\"day\")\r\n      setViews(\"day\", context, store, datepickerContext)\r\n    }\r\n    weekviewHeader.onmousedown = setDayView\r\n  }\r\n\r\n  function renderSidebarDatepickerWeek() {\r\n    if (!sidebar.classList.contains(\"hide-sidebar\")) {\r\n      datepickerContext.setDate(context.getYear(), context.getMonth(), context.getDay())\r\n      setSidebarDatepicker(context, store, datepickerContext)\r\n    }\r\n  }\r\n\r\n  function renderBoxes() {\r\n    cols.forEach(col => { col.innerText = \"\" })\r\n    topCols.forEach(col => { col.innerText = \"\" })\r\n\r\n    boxes.getBoxes().forEach((entry) => {\r\n      const col = cols[+entry.coordinates.x];\r\n      createBox(col, entry, \"week\", store.getCtgColor(entry.category))\r\n    })\r\n\r\n    const boxt = boxes.getBoxesTopLengths()\r\n    for (const k in boxt) {\r\n      const col = topCols[+k]\r\n      createBoxesTop(col, boxt[k])\r\n    }\r\n  }\r\n\r\n  function createBoxesTop(col, len) {\r\n    const cell = document.createElement(\"div\")\r\n\r\n    cell.classList.add(\"allday__cell\");\r\n    cell.classList.add(\"allday__cell--active\");\r\n    const taskicons = document.createElement(\"div\");\r\n    taskicons.classList.add(\"wv-ad--taskicons\");\r\n    const icon = document.createElement(\"div\");\r\n    icon.classList.add(\"wv-ad--taskicon\");\r\n    icon.style.backgroundColor = \"#6F0C2B\";\r\n    taskicons.appendChild(icon);\r\n\r\n    const celltitle = document.createElement(\"div\");\r\n    celltitle.classList.add(\"wv-ad--celltitle\");\r\n    len > 1 ? celltitle.textContent = `${len} tasks` : celltitle.textContent = `${len} task`;\r\n    cell.append(taskicons, celltitle);\r\n    col.appendChild(cell);\r\n  }\r\n\r\n  function createAllDayModalCell(entry, idx) {\r\n    const cell = document.createElement(\"div\")\r\n    cell.classList.add(\"allday-modal__cell\")\r\n    cell.setAttribute(\"data-allday-modal-cell\", idx)\r\n    cell.setAttribute(\"data-allday-modal-cell-id\", entry.id)\r\n    cell.style.backgroundColor = store.getCtgColor(entry.category)\r\n\r\n    const celldatetimes = document.createElement(\"div\")\r\n    celldatetimes.classList.add(\"allday-modal__datetime\")\r\n    const celldate = document.createElement(\"div\")\r\n    celldate.classList.add(\"allday-modal__cell-dates\")\r\n    celldate.textContent = formatStartEndDate(entry.start, entry.end)\r\n    const celltime = document.createElement(\"div\")\r\n    celltime.classList.add(\"allday-modal__cell-time\")\r\n    celltime.textContent = `(${formatStartEndTime(entry.start, entry.end)})`\r\n    const cellduration = document.createElement(\"div\")\r\n    cellduration.classList.add(\"allday-modal__cell-duration\")\r\n    cellduration.textContent = getDuration(entry.start, entry.end)\r\n\r\n    const cellcontent = document.createElement(\"div\")\r\n    cellcontent.classList.add(\"allday-modal__cell-content\")\r\n    const celltitle = document.createElement(\"div\")\r\n    celltitle.classList.add(\"allday-modal__cell-title\")\r\n    celltitle.textContent = `\"${entry.title}\"`\r\n\r\n    celldatetimes.append(celldate, cellduration)\r\n    cellcontent.append(celltitle)\r\n\r\n    cell.append(cellcontent, celldatetimes)\r\n    return cell;\r\n  }\r\n\r\n  function createAllDayModal(e, col, entries, idx, cell) {\r\n    // setStylingForEvent(\"dragstart\")\r\n    // need to add resize overlay\r\n    let dayofweek = locales.labels.weekdaysLong[idx]\r\n    let daynumber = col.getAttribute(\"data-wvtop-day\")\r\n\r\n    const modal = document.createElement(\"div\")\r\n    modal.classList.add(\"allday-modal\")\r\n    const modalheader = document.createElement(\"div\")\r\n    modalheader.classList.add(\"allday-modal__header\")\r\n    const modaltitle = document.createElement(\"div\")\r\n    modaltitle.classList.add(\"allday-modal-title\")\r\n    modaltitle.textContent = `${dayofweek} ${daynumber}`\r\n    const modalsubtitle = document.createElement(\"div\")\r\n    modalsubtitle.classList.add(\"allday-modal-subtitle\")\r\n    modalsubtitle.textContent = \"(multiple day events)\"\r\n    modalheader.append(modaltitle, modalsubtitle)\r\n\r\n    const modalcontent = document.createElement(\"div\")\r\n    modalcontent.classList.add(\"allday-modal__content\")\r\n\r\n    const colwidth = col.offsetWidth\r\n    let colleft = col.offsetLeft + weekviewGrid.offsetLeft - 48\r\n    let colheight = 86 + (entries.length * 48)\r\n\r\n    const setColPos = () => {\r\n      if (idx === 0) { colleft += 48 }\r\n      if (idx === 6) { colleft -= 48 }\r\n      if (colheight >= 760) { colheight = 760 }\r\n\r\n      modal.style.height = colheight + \"px\"\r\n      modal.style.left = colleft + \"px\"\r\n      modal.style.width = (colwidth + 96) + \"px\"\r\n      modal.style.top = +weekviewGrid.offsetTop + \"px\"\r\n    }\r\n    setColPos()\r\n\r\n    modal.appendChild(modalheader)\r\n    entries.forEach((entry, idx) => {\r\n      const cell = createAllDayModalCell(entry, idx)\r\n      modalcontent.appendChild(cell)\r\n    })\r\n\r\n    modal.appendChild(modalcontent)\r\n    main.insertBefore(modal, document.querySelector(\".weekview__top\"))\r\n\r\n    const closealldaymodal = () => {\r\n      // modal.remove()\r\n      // resizeoverlay.classList.add(\"hide-resize-overlay\")\r\n      // cell.firstChild.firstChild.style.backgroundColor = \"#6F0C2B\"\r\n    }\r\n  }\r\n\r\n  function openAllDayModal(e, cell) {\r\n    // const col = cell.parentElement\r\n    // cell.firstChild.firstChild.style.backgroundColor = \"#01635b\"\r\n    // const colidx = parseInt(col.getAttribute(\"data-allday-column\"))\r\n    // let colentries = boxes.getBoxesByColumnTop(colidx)\r\n    // if (colentries.length > 0) {\r\n    //   createAllDayModal(e, col, colentries, colidx, cell)\r\n    // }\r\n  }\r\n\r\n  function getcol(idx) {\r\n    return document.querySelector(`[data-column-index=\"${idx}\"]`)\r\n  }\r\n\r\n  function handleWeekviewFormClose() {\r\n    document.querySelector(\".temp-week-box\")?.remove()\r\n  }\r\n\r\n  function openWeekviewForm(box, coords, category, dates, type) {\r\n    store.setFormResetHandle(\"week\", handleWeekviewFormClose);\r\n\r\n    const openForm = store.getRenderFormCallback();\r\n    const setup = new FormSetup();\r\n\r\n    const [submitType, id, title, description] = type;\r\n    setup.setSubmission(submitType, id, title, description);\r\n    if (submitType === \"create\") { box.style.opacity = 0.9; }\r\n\r\n    const [categoryName, color, offsetColor] = category;\r\n    setup.setCategory(\r\n      categoryName,\r\n      color,\r\n      offsetColor,\r\n    );\r\n\r\n    setup.setPosition(\r\n      +coords.x,\r\n      [+coords.x, 3],\r\n      parseInt((coords.y * 12.5) - weekviewGrid.scrollTop)\r\n    );\r\n\r\n    const [start, end] = dates\r\n    setup.setDates(getFormDateObject(start, end));\r\n\r\n    openForm();\r\n    fullFormConfig.setFormDatepickerDate(context, datepickerContext, start);\r\n    fullFormConfig.getConfig(setup.getSetup());\r\n  }\r\n\r\n  /** DRAG NORTH, SOUTH, EAST, WEST */\r\n  function dragEngineWeek(e, box) {\r\n    setStylingForEvent(\"dragstart\", main, store)\r\n    const col = box.parentElement\r\n    const originalColumn = col.getAttribute(\"data-column-index\")\r\n    let currentColumn = col.getAttribute(\"data-column-index\")\r\n\r\n    let boxhasOnTop = false;\r\n    const boxorig = getOriginalBoxObject(box)\r\n    if (box.classList.contains(\"box-ontop\")) {\r\n      boxhasOnTop = true;\r\n      resetStyleOnClick(\"week\", box);\r\n    }\r\n\r\n    box.classList.add(\"box-dragging\")\r\n    box.setAttribute(\"data-box-col\", currentColumn)\r\n    // show original position while dragging\r\n    createTemporaryBox(box, col, boxhasOnTop, \"week\")\r\n\r\n    const startTop = +box.style.top.split(\"px\")[0]\r\n    const boxHeight = +box.style.height.split(\"px\")[0]\r\n    let startCursorY = e.pageY - weekviewGrid.offsetTop\r\n    let startCursorX = e.pageX\r\n    let [movedX, movedY] = [0, 0];\r\n\r\n    /** DRAG NORTH SOUTH */\r\n    const mousemove = (e) => {\r\n      const headerOffset = weekviewGrid.offsetTop\r\n      const currentCursorY = e.pageY - headerOffset\r\n      let newOffsetY = currentCursorY - startCursorY\r\n      let newTop = Math.round((newOffsetY + startTop) / 12.5) * 12.5\r\n\r\n      if (newTop < 0 || currentCursorY < 0) {\r\n        newTop = 0\r\n        return;\r\n      } else if (newTop + boxHeight > 1188) {\r\n        return;\r\n      }\r\n\r\n      box.style.top = `${newTop}px`\r\n      /** DRAG EAST/WEST */\r\n      const direction = e.pageX - startCursorX > 0 ? \"right\" : \"left\"\r\n      const currentCursorX = e.pageX\r\n      let newOffsetX = startCursorX - currentCursorX\r\n      let leftColX;\r\n      let rightColX;\r\n\r\n      if (+currentColumn - 1 >= 0) {\r\n        leftColX = parseInt(getcol(currentColumn - 1).getBoundingClientRect().right)\r\n      } else {\r\n        leftColX = null\r\n      }\r\n\r\n      if (+currentColumn + 1 < cols.length) {\r\n        rightColX = parseInt(getcol(+currentColumn + 1).getBoundingClientRect().left)\r\n      } else {\r\n        rightColX = null;\r\n      }\r\n\r\n      if (direction === \"right\" && rightColX !== null) {\r\n        if (e.pageX >= rightColX) {\r\n          getcol(+currentColumn + 1).appendChild(box)\r\n          startCursorX = e.pageX\r\n          currentColumn = +currentColumn + 1\r\n          box.setAttribute(\"data-box-col\", +currentColumn)\r\n        }\r\n      }\r\n\r\n      if (direction === \"left\" && leftColX !== null) {\r\n        if (e.pageX <= leftColX) {\r\n          getcol(+currentColumn - 1).appendChild(box)\r\n          startCursorX = e.pageX\r\n          currentColumn = +currentColumn - 1\r\n          box.setAttribute(\"data-box-col\", +currentColumn)\r\n        }\r\n      }\r\n\r\n      movedY = newOffsetY\r\n      movedX = newOffsetX\r\n    }\r\n\r\n    function mouseup() {\r\n      document.querySelector(\".temporary-box\").remove();\r\n      box.classList.remove(\"box-dragging\");\r\n      if (boxhasOnTop) { box.classList.add(\"box-ontop\") }\r\n\r\n      if (Math.abs(movedX) <= 6 && Math.abs(movedY) <= 6) {\r\n        resetOriginalBox(box, boxorig);\r\n        const id = box.getAttribute(\"data-box-id\");\r\n        const tempEntry = store.getEntry(id);\r\n\r\n        let color = box.style.backgroundColor;\r\n        let offsetColor = color;\r\n        // let offsetColor = `${color.slice(0,3)}a(${color.slice(4, color.length - 1)}, 0.4)`;\r\n\r\n        const dates = calcDateOnClick(\r\n          weekArray[parseInt(originalColumn)],\r\n          +box.getAttribute(\"data-start-time\"),\r\n          +box.getAttribute(\"data-time-intervals\"),\r\n        );\r\n\r\n        openWeekviewForm(\r\n          box,\r\n          [parseInt(originalColumn), 3],\r\n          [tempEntry.category, color, offsetColor],\r\n          dates,\r\n          [\"edit\", id, tempEntry.title, tempEntry.description],\r\n        );\r\n\r\n      } else {\r\n        setBoxTimeAttributes(box, \"week\");\r\n        const time = calcTime(\r\n          +box.getAttribute(\"data-start-time\"),\r\n          +box.getAttribute(\"data-time-intervals\")\r\n        );\r\n\r\n        box.setAttribute(\"data-time\", time);\r\n        box.children[1].children[0].textContent = time;\r\n\r\n        updateBoxCoordinates(box, \"week\", boxes);\r\n        boxes.updateStore(\r\n          store,\r\n          box.getAttribute(\"data-box-id\"),\r\n          weekArray\r\n        );\r\n        // if box is moved to a new column, update sidebar datepicker\r\n        if (currentColumn !== +originalColumn) {\r\n          renderSidebarDatepickerWeek()\r\n        };\r\n        // check if new position overlaps with other boxes and handle\r\n        let droppedCol = +box.getAttribute(\"data-box-col\");\r\n        if (boxes.getBoxesByColumn(droppedCol).length > 1) {\r\n          handleOverlap(droppedCol, \"week\", boxes)\r\n        } else {\r\n          box.setAttribute(\"box-idx\", \"box-one\")\r\n        }\r\n      }\r\n\r\n      setStylingForEvent(\"dragend\", main, store)\r\n      document.removeEventListener(\"mousemove\", mousemove)\r\n      document.removeEventListener(\"mouseup\", mouseup)\r\n    }\r\n    document.addEventListener(\"mousemove\", mousemove)\r\n    document.addEventListener(\"mouseup\", mouseup)\r\n  }\r\n\r\n  /** RESIZE NORTH/SOUTH \r\n   * resizing will never trigger form\r\n  */\r\n  function resizeBoxNS(e, box) {\r\n    setStylingForEvent(\"dragstart\", main, store);\r\n    const col = box.parentElement;\r\n    const currentColumn = col.getAttribute(\"data-column-index\");\r\n    box.setAttribute(\"data-box-col\", currentColumn);\r\n\r\n    let boxhasOnTop = false;\r\n    let boxorig = getOriginalBoxObject(box);\r\n    if (box.classList.contains(\"box-ontop\")) {\r\n      boxhasOnTop = true;\r\n      resetStyleOnClick(\"week\", box);\r\n    }\r\n\r\n    box.classList.add(\"box-resizing\")\r\n    const boxTop = box.offsetTop;\r\n    createTemporaryBox(box, col, boxhasOnTop, \"week\");\r\n\r\n    const mousemove = (e) => {\r\n      const headerOffset = weekviewGrid.offsetTop;\r\n      let amountScrolled = Math.abs(parseInt(container.getBoundingClientRect().top));\r\n      if (amountScrolled == headerOffset) {\r\n        amountScrolled -= headerOffset;\r\n      } else if (container.getBoundingClientRect().top > 0) {\r\n        amountScrolled = headerOffset - amountScrolled;\r\n      } else {\r\n        amountScrolled += headerOffset;\r\n      }\r\n\r\n      if (window.innerHeight < e.pageY) {\r\n        main.scrollBy(0, Math.abs(window.innerHeight - e.pageY));\r\n      }\r\n\r\n      const newHeight = Math.round(((e.pageY - boxTop - headerOffset) + amountScrolled) / 12.5) * 12.5;\r\n\r\n      if (newHeight <= 12.5) {\r\n        box.style.height = '12.5px';\r\n        return;\r\n      } else if (newHeight + parseInt(box.style.top) > 1188) {\r\n        return;\r\n      } else {\r\n        box.style.height = `${newHeight}px`;\r\n      }\r\n    }\r\n\r\n    const mouseup = (e) => {\r\n      document.querySelector(\".temporary-box\").remove();\r\n      box.classList.remove(\"box-resizing\");\r\n      if (boxhasOnTop) { box.classList.add(\"box-ontop\") }\r\n\r\n      if (box.style.height === boxorig.height) {\r\n        if (boxhasOnTop) {\r\n          box.setAttribute(\"class\", boxorig.class);\r\n          box.style.left = boxorig.left;\r\n          box.style.width = boxorig.width;\r\n        }\r\n      } else {\r\n        setBoxTimeAttributes(box, \"week\");\r\n        const start = +box.getAttribute(\"data-start-time\");\r\n        const length = +box.getAttribute(\"data-time-intervals\");\r\n        const time = calcTime(start, length);\r\n        box.children[1].children[0].textContent = time;\r\n        updateBoxCoordinates(box, \"week\", boxes);\r\n\r\n        let droppedCol = +box.getAttribute(\"data-box-col\");\r\n        if (boxes.getBoxesByColumn(droppedCol).length > 1) {\r\n          handleOverlap(droppedCol, \"week\", boxes);\r\n        }\r\n\r\n        boxes.updateStore(\r\n          store,\r\n          box.getAttribute(\"data-box-id\"),\r\n          weekArray,\r\n        );\r\n      }\r\n\r\n      setStylingForEvent(\"dragend\", main, store);\r\n      document.removeEventListener(\"mousemove\", mousemove);\r\n      document.removeEventListener(\"mouseup\", mouseup);\r\n    }\r\n    document.addEventListener(\"mousemove\", mousemove);\r\n    document.addEventListener(\"mouseup\", mouseup);\r\n  }\r\n\r\n  function renderNewBox(newStartDate, newEndDate) {\r\n    // render after new entry is created\r\n    entries = store.getWeekEntries(weekArray)\r\n    boxes = new Week(\r\n      entries.day,\r\n      entries.allDay\r\n    );\r\n\r\n    if (store.getBoxesByColumn().length === 0) {\r\n      // no need to check for collisions\r\n      renderBoxes();\r\n      renderSidebarDatepickerWeek();\r\n    } else {\r\n      renderDataForGrid();\r\n    }\r\n  }\r\n\r\n  /** Drag down empty column to create box */\r\n  function createBoxOnDrag(e) {\r\n    setStylingForEvent(\"dragstart\", main, store);\r\n    const [tempcategory, color] = store.getFirstActiveCategoryKeyPair();\r\n    const colIdx = parseInt(e.target.getAttribute(\"data-column-index\"));\r\n\r\n    const box = document.createElement('div');\r\n    box.setAttribute(\"class\", \"box box-dragging temp-week-box\");\r\n    \r\n    // boxheader is static - create from template\r\n    const boxheader = createTempBoxHeader(\"week\");\r\n    const boxcontent = document.createElement('div');\r\n    const boxtime = document.createElement('span');\r\n    const boxtimeend = document.createElement('span');\r\n    boxcontent.classList.add('box__content');\r\n    boxtime.classList.add('box-time');\r\n    boxtimeend.classList.add('box-time');\r\n\r\n    const headerOffset = +weekviewGrid.offsetTop;\r\n    const scrolled = parseInt(weekviewGrid.scrollTop);\r\n    const startCursorY = e.pageY - weekviewGrid.offsetTop;\r\n\r\n    let y = Math.round((startCursorY + Math.abs(scrolled))/12.5)*12.5;\r\n    box.setAttribute(\"style\", getBoxDefaultStyle(y, color));\r\n\r\n    let coords = { y: +y / 12.5, x: colIdx, h: 1, e: 2 }\r\n    let [starthour, startmin, endhour, endmin] = startEndDefault(y);\r\n\r\n    function mousemove(e) {\r\n      const currentCursorY = e.pageY - headerOffset;\r\n      let newOffsetY = currentCursorY - startCursorY;\r\n      let newHeight = Math.round((newOffsetY) / 12.5) * 12.5;\r\n\r\n      if (newHeight <= 12.5) { newHeight = 12.5 }\r\n      if (newHeight + y > 1188) { newHeight = 1187.5 - y }\r\n      box.style.height = `${newHeight}px`;\r\n\r\n      coords.h = +newHeight / 12.5;\r\n      coords.e = +coords.y + coords.h;\r\n\r\n      // Math.floor(((h + y) / 12.5) / 4)\r\n      endhour = Math.floor(((+newHeight + +y) / 12.5) / 4);\r\n      endmin = Math.floor(((+newHeight + +y) / 12.5) % 4) * 15\r\n      boxtime.style.wordBreak = \"break-word\";\r\n      boxtime.textContent = `${formatTime(starthour, startmin)} – `;\r\n      boxtimeend.textContent = `${formatTime(endhour, endmin)}`;\r\n    }\r\n\r\n    boxcontent.append(boxtime, boxtimeend);\r\n    box.append(boxheader, boxcontent);\r\n    e.target.appendChild(box);\r\n\r\n    function mouseup() {\r\n      const datesData = getTempDates(\r\n        new Date(weekArray[colIdx]),\r\n        [starthour, endhour],\r\n        [startmin, endmin],\r\n      );\r\n      console.log(starthour, endhour)\r\n      console.log(startmin, endmin)\r\n\r\n      openWeekviewForm(\r\n        box,\r\n        coords,\r\n        [tempcategory, color, color],\r\n        datesData,\r\n        [\"create\", null, null, null],\r\n      );\r\n\r\n      setStylingForEvent(\"dragend\", main, store);\r\n      document.removeEventListener(\"mouseup\", mouseup);\r\n      document.removeEventListener(\"mousemove\", mousemove);\r\n    }\r\n    document.addEventListener(\"mousemove\", mousemove);\r\n    document.addEventListener(\"mouseup\", mouseup);\r\n  }\r\n\r\n  /** delegate via grid */\r\n  function delegateGridEvents(e) {\r\n    if (getClosest(e, \".box-resize-s\")) {\r\n      resizeBoxNS(e, e.target.parentElement);\r\n      return;\r\n    }\r\n\r\n    if (getClosest(e, \".box\")) {\r\n      dragEngineWeek(e, e.target);\r\n      return;\r\n    }\r\n\r\n    if (getClosest(e, \".week--col\")) {\r\n      createBoxOnDrag(e, e.target);\r\n      return;\r\n    }\r\n  }\r\n\r\n  function delegateGridTop(e) {\r\n    if (getClosest(e, \".allday--col\")) {\r\n      openAllDayModal(e, e.target);\r\n      return;\r\n    }\r\n  }\r\n\r\n  function renderDataForGrid() {\r\n    renderBoxes();\r\n    const colsToCheck = boxes.getColumnsWithMultipleBoxes();\r\n    colsToCheck.forEach(col => handleOverlap(col, \"week\", boxes));\r\n  }\r\n\r\n  const initWeek = () => {\r\n    configureDaysOfWeek();\r\n    renderDataForGrid();\r\n    container.onmousedown = delegateGridEvents;\r\n    alldaymodule.onmousedown = delegateGridTop;\r\n  }\r\n  initWeek();\r\n}","import setViews from \"../../config/setViews\"\r\nimport locales from \"../../locales/en\"\r\nimport { getClosest } from \"../../utilities/helpers\"\r\nimport { getDateFromAttribute } from \"../../utilities/dateutils\"\r\nimport setSidebarDatepicker from \"../../components/menus/sidebarDatepicker\";\r\nconst monthnames = locales.labels.monthsLong\r\nconst weekDayNames = locales.labels.weekdaysNarrow\r\nconst yearviewGrid = document.querySelector(\".calendar__yearview\");\r\nconst sidebar = document.querySelector(\".sidebar\");\r\n\r\n\r\nexport default function setYearView(context, store, datepickerContext) {\r\n  const year = context.getYear();\r\n  const today = context.getToday();\r\n  const [ty, tm, td] = [today.getFullYear(), today.getMonth(), today.getDate()];\r\n  const entries = store.getGroupedYearEntries(store.getYearEntries(year));\r\n\r\n  function renderMonthCells() {\r\n    yearviewGrid.innerText = \"\"\r\n    for (let i = 0; i < 12; i++) {\r\n      if (entries[i]) {\r\n        yearviewGrid.appendChild(createMonthCell(i, entries[i]));\r\n      } else {\r\n        yearviewGrid.appendChild(createMonthCell(i, []));\r\n      }\r\n    }\r\n  }\r\n\r\n  function renderSidebarDatepicker() {\r\n    if (!sidebar.classList.contains(\"hide-sidebar\")) {\r\n      datepickerContext.setDate(context.getYear(), context.getMonth(), context.getDay())\r\n      setSidebarDatepicker(context, store, datepickerContext)\r\n    }\r\n  }\r\n\r\n  function createMonthCell(month, entries) {\r\n    const prevmonth = new Date(year, month, 0)\r\n    const daysInPrevMonth = prevmonth.getDate()\r\n    const nextmonth = new Date(year, month + 2, 0)\r\n    const currentMonth = new Date(year, month, 1)\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate()\r\n    const firstDayOfMonth = currentMonth.getDay()\r\n\r\n    const cellWrapper = document.createElement(\"div\")\r\n    cellWrapper.classList.add(\"yv-monthcell\")\r\n\r\n    const cellHeader = document.createElement(\"div\")\r\n    cellHeader.classList.add(\"yv-monthcell__header\")\r\n\r\n    const cellHeaderRowOne = document.createElement(\"div\")\r\n    cellHeaderRowOne.classList.add(\"yv-monthcell__header--rowone\")\r\n\r\n    const cellHeaderTitle = document.createElement(\"span\")\r\n    cellHeaderTitle.textContent = monthnames[month]\r\n\r\n    if (month === context.getMonth() && year === context.getYear()) {\r\n      cellHeaderTitle.classList.add(\"yvmht-current\")\r\n      cellWrapper.classList.add(\"cell-current\")\r\n    }\r\n\r\n    cellHeaderTitle.classList.add(\"yv-monthcell__header--title\")\r\n    cellHeaderRowOne.append(cellHeaderTitle)\r\n\r\n    // cell header row two\r\n    const cellHeaderWeekDayNames = document.createElement(\"div\")\r\n    cellHeaderWeekDayNames.classList.add(\"yv-monthcell__header--weekdays\")\r\n\r\n    weekDayNames.forEach((el) => {\r\n      const weekday = document.createElement(\"div\")\r\n      weekday.classList.add(\"yv-monthcell__header--weekday\")\r\n      weekday.textContent = el\r\n      cellHeaderWeekDayNames.appendChild(weekday)\r\n    })\r\n\r\n    cellHeader.append(cellHeaderRowOne,cellHeaderWeekDayNames)\r\n\r\n    const cellBody = document.createElement(\"div\")\r\n    cellBody.classList.add(\"yv-monthcell__body\")\r\n\r\n    function populateMonths() {\r\n      let count = 0;\r\n      let prevmonthstart = daysInPrevMonth - firstDayOfMonth\r\n\r\n      const createcell = (day, classname, year, month, current) => {\r\n        const daywrapper = document.createElement(\"div\")\r\n        daywrapper.classList.add(\"yv-monthcell__body--day-wrapper\")\r\n        \r\n        const daynumber = document.createElement(\"div\")\r\n        daynumber.setAttribute(\"class\", classname);\r\n        daynumber.setAttribute(\"data-yv-date\", `${year}-${month}-${day}`);\r\n        daynumber.textContent = day;\r\n        \r\n        if (current) {\r\n          // check if day is selected\r\n          if (day === context.getDateSelected() && month === context.getMonth() && year === context.getYear()) {\r\n            daynumber.classList.add(\"yvmb-selected\")\r\n          }\r\n\r\n          // check if day is today\r\n          if (day === td && month === tm && year === ty) {\r\n            daynumber.classList.add(\"yvmb-today\")\r\n          }\r\n\r\n          // check if day has entry\r\n          if (entries[day]) {\r\n            daynumber.classList.add(\"yvmb-has-entry\")\r\n          }\r\n        }\r\n        \r\n        daywrapper.appendChild(daynumber)\r\n        return daywrapper\r\n      }\r\n\r\n\r\n      for (let i = prevmonthstart; i < daysInPrevMonth; i++) {\r\n\r\n        cellBody.appendChild(createcell(\r\n          i + 1, \r\n          \"yv-monthcell__body--day yvmb-prevnext\",\r\n          prevmonth.getFullYear(),\r\n          prevmonth.getMonth(),\r\n          false,\r\n        ))\r\n        count++\r\n      }\r\n\r\n      for (let i = 0; i < daysInMonth; i++) {\r\n        cellBody.appendChild(createcell(\r\n          i + 1, \r\n          \"yv-monthcell__body--day\",\r\n          currentMonth.getFullYear(),\r\n          currentMonth.getMonth(),\r\n          true,\r\n        ))\r\n        count++\r\n      }\r\n\r\n      let i = 0\r\n      while (count < 42) {\r\n        i++\r\n        cellBody.appendChild(createcell(\r\n          i, \r\n          \"yv-monthcell__body--day yvmb-prevnext\",\r\n          nextmonth.getFullYear(),\r\n          nextmonth.getMonth(),\r\n          false,\r\n        ))\r\n        count++\r\n      }\r\n    }\r\n    \r\n    populateMonths()\r\n    cellWrapper.append(cellHeader, cellBody)\r\n    return cellWrapper\r\n  }\r\n\r\n  function handleDaySelection(e) {\r\n    const target = e.target;\r\n    const [year, month, day] = getDateFromAttribute(target, \"data-yv-date\", null);\r\n    context.setDate(year, month, day);\r\n    context.setDateSelected(day);\r\n    context.setComponent(\"day\");\r\n    setViews(\"day\", context, store, datepickerContext);\r\n    renderSidebarDatepicker();\r\n  }\r\n\r\n  function delegateYearEvents(e) {\r\n    if (getClosest(e, \".yv-monthcell__body--day\")) {\r\n      handleDaySelection(e);\r\n    }\r\n  }\r\n\r\n  renderMonthCells();\r\n  yearviewGrid.onmousedown = delegateYearEvents;\r\n}","// import setHeader from \"../components/menus/header\"\r\nimport { setTheme } from \"../utilities/helpers\";\r\nconst appBody = document.querySelector(\".body\");\r\nexport default function setAppDefaults(context, store) {\r\n  const disableTransitionsOnLoad = () => {\r\n    setTimeout(() => {\r\n      appBody.classList.remove(\"preload\")\r\n    }, 10)\r\n  }\r\n  disableTransitionsOnLoad()\r\n  setTheme(context)\r\n}\r\n\r\nfunction checkLocalStorageAllowed() {\r\n  try {\r\n    localStorage.setItem(\"test\", \"test\");\r\n    localStorage.removeItem(\"test\");\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport {\r\n  checkLocalStorageAllowed\r\n}","import setViews from \"./setViews\";\r\nimport setDatepicker from \"../components/menus/datepicker\";\r\nimport setSidebarDatepicker from \"../components/menus/sidebarDatepicker\";\r\nimport handleSidebarCategories from \"../components/menus/sidebarCategories\";\r\nimport { getClosest, throttle } from \"../utilities/helpers\";\r\nimport setEntryForm from \"../components/forms/entryForm\";\r\nimport handleSidebarFooter from \"../components/menus/sidebarFooter\";\r\nimport handleShortCutsModal from \"../components/menus/shortcutsModal\";\r\nimport getSidebarSubMenu from \"../components/menus/sidebarSubMenu\";\r\nimport createGoTo from \"../components/forms/goto\";\r\nimport createCategoryForm from \"../components/menus/editCategory\";\r\n\r\nconst appBody = document.querySelector(\".body\");\r\nconst colorSchemeMeta = document.getElementsByName(\"color-scheme\")[0];\r\n\r\nconst header = document.querySelector(\".h__container\");\r\nconst headerLogo = document.querySelector(\".logo\")\r\n\r\nconst toggleForm = document.querySelector(\".toggle-form\")\r\nconst sbToggleForm = document.querySelector(\".sb-toggle-form-btn\")\r\nconst sbToggleSubBtn = document.querySelector(\".sb-data-btn\")\r\nconst sbToggleThemeBtn = document.querySelector(\".sb-theme-btn\")\r\nconst formOverlay = document.querySelector(\".form-overlay\")\r\nconst form = document.querySelector(\".entries__form\")\r\n\r\nconst headerPrevBtn = document.querySelector(\".prev\")\r\nconst headerNextBtn = document.querySelector(\".next\")\r\n\r\nconst datepicker = document.querySelector(\".datepicker\")\r\nconst datepickeroverlay = document.querySelector(\".datepicker-overlay\")\r\nconst dateTimeWrapper = document.querySelector(\".datetime-wrapper\")\r\n\r\nconst selectElement = document.querySelector(\".select__modal\")\r\nconst selectOverlay = document.querySelector(\".change-view--overlay\")\r\nconst optionswrapper = document.querySelector(\".change-view--wrapper\")\r\nconst options = document.querySelectorAll(\".view-option\")\r\n\r\nconst sidebar = document.querySelector(\".sidebar\");\r\n\r\nconst viewsContainer = document.querySelector(\".container__calendars\")\r\nconst yearwrapper = document.querySelector(\".yearview\")\r\nconst monthwrapper = document.querySelector(\".monthview\")\r\nconst listviewBody = document.querySelector(\".listview__body\");\r\n\r\nexport default function renderViews(context, datepickerContext, store) {\r\n  function setColorScheme() {\r\n    const darkicon = document.querySelector(\".sbti-one\")\r\n    const lighticon = document.querySelector(\".sbti-two\")\r\n    const contrasticon = document.querySelector(\".sbti-three\")\r\n\r\n    const setlight = () => {\r\n      context.setColorScheme(\"light\")\r\n      colorSchemeMeta.setAttribute(\"content\", \"light\");\r\n      appBody.classList.add(\"light-mode\");\r\n      appBody.classList.remove(\"contrast-mode\")\r\n      darkicon.classList.add(\"sb-theme-icon-hide\")\r\n      contrasticon.classList.add(\"sb-theme-icon-hide\")\r\n      lighticon.classList.remove(\"sb-theme-icon-hide\")\r\n    }\r\n\r\n    const setdark = () => {\r\n      context.setColorScheme(\"dark\")\r\n      colorSchemeMeta.setAttribute(\"content\", \"dark light\");\r\n      appBody.classList.remove(\"light-mode\");\r\n      appBody.classList.remove(\"contrast-mode\")\r\n      darkicon.classList.remove(\"sb-theme-icon-hide\")\r\n      contrasticon.classList.add(\"sb-theme-icon-hide\")\r\n      lighticon.classList.add(\"sb-theme-icon-hide\")\r\n    }\r\n\r\n    const setcontrast = () => {\r\n      context.setColorScheme(\"contrast\")\r\n      colorSchemeMeta.setAttribute(\"content\", \"dark\");\r\n      appBody.classList.remove(\"light-mode\");\r\n      appBody.classList.add(\"contrast-mode\")\r\n      contrasticon.classList.remove(\"sb-theme-icon-hide\")\r\n      darkicon.classList.add(\"sb-theme-icon-hide\")\r\n      lighticon.classList.add(\"sb-theme-icon-hide\")\r\n    }\r\n\r\n    const currentScheme = context.getColorScheme()\r\n    if (currentScheme === \"light\") {\r\n      setdark()\r\n    } else if (currentScheme === \"dark\") {\r\n      setcontrast()\r\n    } else {\r\n      setlight()\r\n    }\r\n  }\r\n\r\n  function fullRender(component) {\r\n    setViews(component, context, store, datepickerContext);\r\n  }\r\n\r\n  function setInitialAttributes() {\r\n    selectElement.setAttribute(\"data-value\", `${context.getComponent().slice(0, 1).toUpperCase()}`)\r\n\r\n    headerLogo.setAttribute(\"data-current-day-of-month\", new Date().getDate())\r\n  }\r\n\r\n  function renderSidebarDatepicker() {\r\n    if (!sidebar.classList.contains(\"hide-sidebar\")) {\r\n      datepickerContext.setDate(context.getYear(), context.getMonth(), context.getDay())\r\n      setSidebarDatepicker(context, store, datepickerContext)\r\n    }\r\n  }\r\n\r\n  function renderSidebarCategories() {\r\n    if (!sidebar.classList.contains(\"hide-sidebar\")) {\r\n      handleSidebarCategories(context, store, datepickerContext)\r\n      handleSidebarFooter(store)\r\n    }\r\n  }\r\n\r\n  function getPreviousDay() {\r\n    context.setPrevDay()\r\n    fullRender(\"day\")\r\n    context.setDateSelected(context.getDay())\r\n    renderSidebarDatepicker()\r\n  }\r\n\r\n  function getNextDay() {\r\n    context.setNextDay()\r\n    fullRender(\"day\")\r\n    context.setDateSelected(context.getDay())\r\n    renderSidebarDatepicker()\r\n  }\r\n\r\n  function getPreviousWeek() {\r\n    context.setPrevWeek()\r\n    fullRender(\"week\")\r\n    renderSidebarDatepicker()\r\n  }\r\n\r\n  function getNextWeek() {\r\n    context.setNextWeek()\r\n    fullRender(\"week\")\r\n    renderSidebarDatepicker()\r\n  }\r\n\r\n  function getPreviousMonth() {\r\n    context.setPrevMonth()\r\n    fullRender(\"month\")\r\n    renderSidebarDatepicker()\r\n  }\r\n\r\n  function getNextMonth() {\r\n    context.setNextMonth()\r\n    fullRender(\"month\")\r\n    renderSidebarDatepicker()\r\n  }\r\n\r\n  function getPreviousYear() {\r\n    context.setPrevYear()\r\n    fullRender(\"year\")\r\n    renderSidebarDatepicker()\r\n    return;\r\n  }\r\n\r\n  function getNextYear() {\r\n    context.setNextYear()\r\n    fullRender(\"year\")\r\n    renderSidebarDatepicker()\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * handleTransition\r\n   * @desc  The main purpose of this function is to handle situations where a user is holding down a hotkey to navigate through previous and next periods. Rather than having the swipe fire every single time, it will wait until after the user has stopped holding down the hotkey.\r\n   * Same goes for swipe gestures/prev & next button clicks.\r\n   * \r\n   * @param {HTMLElement} view (current calendar view to be transitioned)\r\n   * @param {String} keyframeDirection (direction of the keyframe animation) prev/next period\r\n   * @param {Function} callback (load next and previous periods)\r\n   */\r\n  let tm = 250; // define timeout out of scope so that it can be \r\n  function handleTransition(view, keyframeDirection, callback) {\r\n    const removeslide = (dir) => {\r\n      dir === \"left\" ? view.classList.remove(\"transition--right\") : view.classList.remove(\"transition--left\");\r\n    }\r\n\r\n    removeslide(keyframeDirection)\r\n    const slide = `transition--${keyframeDirection}`\r\n    if (view.classList.contains(slide)) {\r\n      // prevent transition from firing too often\r\n      callback()\r\n      tm += 250\r\n    } else {\r\n      view.classList.add(slide)\r\n      setTimeout(() => {\r\n        view.classList.remove(slide)\r\n      }, tm)\r\n      callback()\r\n      tm = 250;\r\n    }\r\n  }\r\n\r\n  // define a means for opening the form then provide it to the store so that it can be accessed by other components\r\n  function handleForm() {\r\n    setEntryForm(context, store, datepickerContext)\r\n\r\n    form.setAttribute(\"style\", \"top:5%;left:5%;right:5%;bottom:5%;margin:auto;\")\r\n    form.classList.remove(\"hide-form\")\r\n    formOverlay.classList.remove(\"hide-form-overlay\")\r\n    store.addActiveOverlay(\"hide-form-overlay\")\r\n\r\n    function closeform(e) {\r\n      if (e.target === formOverlay) {\r\n        form.classList.add(\"hide-form\")\r\n        formOverlay.classList.add(\"hide-form-overlay\")\r\n        store.removeActiveOverlay(\"hide-form-overlay\")\r\n        formOverlay.removeEventListener(\"click\", closeform)\r\n      }\r\n    }\r\n    formOverlay.addEventListener(\"click\", closeform)\r\n  }\r\n\r\n  // the submenu (meatball? menu) adjacent to \"create\" button in sidebar\r\n  // opens instance of settings menu\r\n  function handleToggleSubmenu() {\r\n    getSidebarSubMenu(store, context)\r\n  }\r\n\r\n  // open / close sidebar\r\n  // triggers via \"s\" keypress or by clicking on the hamburger menu icon\r\n  // will also trigger in instances where the user tries to create a new entry on a blank day but no categories are selected.\r\n  function handleBtnMainMenu() {\r\n    const currentSidebarState = context.getSidebarState()\r\n    if (currentSidebarState === \"hide\") {\r\n      toggleForm.classList.remove(\"hide-toggle--form\")\r\n      viewsContainer.classList.remove(\"container__calendars-sb-active\")\r\n      sidebar.classList.add(\"hide-sidebar\");\r\n      dateTimeWrapper.classList.remove(\"datetime-inactive\");\r\n      listviewBody.removeAttribute(\"style\");\r\n      // listviewBody.style.width = \"100%\";\r\n    } else {\r\n      // if a callback has been provided to the store (from the datepicker), this means that the header datepicker is open and needs to be closed to prevent two calendars that share the same date state from coinciding.\r\n      // this can only happen if datepicker is open and user presses \"s\" on their keyboard to open sidebar\r\n      const resetdatepicker = store.getResetDatepickerCallback()\r\n      if (resetdatepicker !== null) {\r\n        resetdatepicker()\r\n        store.setResetDatepickerCallback(null)\r\n      }\r\n      listviewBody.style.width = \"100%\";\r\n      listviewBody.style.marginLeft = \"0\";\r\n      toggleForm.classList.add(\"hide-toggle--form\")\r\n      viewsContainer.classList.add(\"container__calendars-sb-active\")\r\n      dateTimeWrapper.classList.add(\"datetime-inactive\");\r\n      sidebar.classList.remove(\"hide-sidebar\");\r\n      datepickerContext.setDate(context.getYear(), context.getMonth(), context.getDay());\r\n      datepickerContext.setDateSelected(context.getDay())\r\n\r\n      renderSidebarCategories();\r\n      renderSidebarDatepicker();\r\n      sbToggleSubBtn.onclick = handleToggleSubmenu\r\n      sbToggleThemeBtn.onclick = setColorScheme;\r\n    }\r\n  }\r\n\r\n  function handleBtnToday() {\r\n    if (!context.isToday() && context.getComponent() !== \"list\") {\r\n      let tempdate = new Date();\r\n      context.setDate(\r\n        tempdate.getFullYear(),\r\n        tempdate.getMonth(),\r\n        tempdate.getDate(),\r\n      )\r\n\r\n      fullRender(context.getComponent())\r\n      renderSidebarDatepicker()\r\n    }\r\n  }\r\n\r\n  function handleBtnPrev() {\r\n    switch (context.getComponent()) {\r\n      case \"day\":\r\n        // transition day header rather than entire view (too jarring)\r\n        handleTransition(document.querySelector(\".dayview--header-day\"), \"right\", getPreviousDay)\r\n        break;\r\n      case \"week\":\r\n        handleTransition(document.querySelector(\".weekview--calendar\"), \"right\", getPreviousWeek)\r\n        break;\r\n      case \"month\":\r\n        handleTransition(monthwrapper, \"right\", getPreviousMonth)\r\n        break;\r\n      case \"year\":\r\n        handleTransition(yearwrapper, \"right\", getPreviousYear)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function handleBtnNext() {\r\n    switch (context.getComponent()) {\r\n      case \"day\":\r\n        // transition day header rather than entire view (too jarring)\r\n        handleTransition(document.querySelector(\".dayview--header-day\"), \"left\", getNextDay)\r\n        break;\r\n      case \"week\":\r\n        handleTransition(document.querySelector(\".weekview--calendar\"), \"left\", getNextWeek)\r\n        break;\r\n      case \"month\":\r\n        handleTransition(monthwrapper, \"left\", getNextMonth)\r\n        break;\r\n      case \"year\":\r\n        handleTransition(yearwrapper, \"left\", getNextYear)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function handleDatePickerBtn(e) {\r\n    datepicker.classList.remove(\"hide-datepicker\")\r\n    datepickeroverlay.classList.remove(\"hide-datepicker-overlay\")\r\n    datepickerContext.setDate(context.getYear(), context.getMonth(), context.getDay())\r\n    headerPrevBtn.style.display = \"none\";\r\n    headerNextBtn.style.display = \"none\";\r\n\r\n\r\n\r\n    const newDatepickerLeft = parseInt(e.target.getBoundingClientRect().left) - 22\r\n    const perc = parseInt((newDatepickerLeft / window.innerWidth) * 100)\r\n    datepicker.setAttribute(\"style\", `left:${perc}%;top:12px;`)\r\n    setDatepicker(context, store, datepickerContext, \"header\")\r\n  }\r\n\r\n  function setOptionStyle(option) {\r\n    const views = ['day', 'week', 'month', 'year', 'list']\r\n    const activeIndex = views.indexOf(option)\r\n    for (let i = 0; i < options.length; i++) {\r\n      if (i === activeIndex) {\r\n        options[i].classList.add(\"change-view--option__active\")\r\n      } else {\r\n        options[i].classList.remove(\"change-view--option__active\")\r\n      }\r\n    }\r\n  }\r\n\r\n  function closeOptionsModal() {\r\n    selectElement.classList.remove(\"selection--active\")\r\n    selectOverlay.style.display = \"none\";\r\n    selectOverlay.classList.add(\"toggle-options\")\r\n    optionswrapper.classList.add(\"toggle-options\")\r\n    optionswrapper.classList.remove(\"toggle-animate\")\r\n  }\r\n\r\n  function renderOption(option, initialRender) {\r\n    const comp = context.getComponent()\r\n    if (option === comp && !initialRender) return;\r\n    closeOptionsModal()\r\n    context.setComponent(option)\r\n    fullRender(option)\r\n    setOptionStyle(option)\r\n    // week datepicker is the only one that has any stylistic difference\r\n    if (comp || option === \"week\") {\r\n      renderSidebarDatepicker()\r\n    }\r\n    document.activeElement.blur()\r\n\r\n    // handleTransition(option, keyframeDirection, callback)\r\n  }\r\n\r\n  function handleSelect(e) {\r\n    selectElement.classList.add(\"selection--active\")\r\n    selectOverlay.classList.remove(\"toggle-options\")\r\n    selectOverlay.style.display = \"block\";\r\n    optionswrapper.classList.remove(\"toggle-options\")\r\n    optionswrapper.classList.add(\"toggle-animate\")\r\n    const setOption = (e) => {\r\n      const option = e.target.getAttribute(\"data-view-option\");\r\n      renderOption(option);\r\n    }\r\n    optionswrapper.onclick = setOption\r\n    selectOverlay.onclick = closeOptionsModal\r\n  }\r\n\r\n  // EVENT DELEGATION : HEADER ELEMENTS\r\n  function delegateHeaderEvents(e) {\r\n    e.preventDefault();\r\n    const btnMainMenu = getClosest(e, \".menu\");\r\n    const btnToday = getClosest(e, \".btn-today\");\r\n    const btnPrev = getClosest(e, \".prev\");\r\n    const btnNext = getClosest(e, \".next\");\r\n    const dateTime = getClosest(e, \".datetime-content\");\r\n    const settings = getClosest(e, \".settings\");\r\n    const select = getClosest(e, \".select__modal\");\r\n\r\n    if (btnMainMenu) {\r\n      context.toggleSidebarState();\r\n      handleBtnMainMenu();\r\n      return;\r\n    }\r\n\r\n    if (btnToday) {\r\n      handleBtnToday();\r\n      return;\r\n    }\r\n\r\n    if (btnPrev) {\r\n      handleBtnPrev();\r\n      return;\r\n    }\r\n\r\n    if (btnNext) {\r\n      handleBtnNext();\r\n      return;\r\n    }\r\n\r\n    if (dateTime) {\r\n      handleDatePickerBtn(e);\r\n      return;\r\n    }\r\n\r\n    if (settings) {\r\n      handleToggleSubmenu(e);\r\n      return;\r\n    }\r\n\r\n    if (select) {\r\n      handleSelect(e);\r\n      return;\r\n    }\r\n  }\r\n\r\n  /* configure keyboard shortcuts */\r\n  /* 2022-01-14\r\n  * Google calendar has recently updated their app wide throttling from a global value of around 150 to the minimum of 4ms(might be 10) for period changes and (250-300) for view changes. \r\n  * For now, I'm keeping the throttle at 150ms. \r\n  */\r\n  function delegateGlobalKeyDown(e) {\r\n    const toggleChangeview = (e) => {\r\n      if (selectElement.classList.contains(\"selection--active\")) {\r\n        if (e.key.toLowerCase() === \"v\") {\r\n          closeOptionsModal()\r\n        }\r\n      } else {\r\n        handleSelect();\r\n      }\r\n    }\r\n\r\n    const getNextPrevMonth = (direction) => {\r\n      let comp = context.getComponent()\r\n      if (comp === \"week\" || comp === \"day\") {\r\n        if (direction === \"next\") {\r\n          context.setNextMonth()\r\n          fullRender(comp)\r\n          renderSidebarDatepicker()\r\n        } else {\r\n          context.setPrevMonth()\r\n          fullRender(comp)\r\n          renderSidebarDatepicker()\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    switch (e.key.toLowerCase()) {\r\n      // switch to day view\r\n      case \"d\":\r\n        renderOption(\"day\");\r\n        break;\r\n      case \"1\":\r\n        renderOption(\"day\");\r\n        break;\r\n\r\n      // switch to week view\r\n      case \"w\":\r\n        renderOption(\"week\");\r\n        break;\r\n      case \"2\":\r\n        renderOption(\"week\");\r\n        break;\r\n\r\n      // switch to month view\r\n      case \"m\":\r\n        renderOption(\"month\");\r\n        break;\r\n      case \"3\":\r\n        renderOption(\"month\");\r\n        break;\r\n\r\n      // switch to year view\r\n      case \"y\":\r\n        renderOption(\"year\");\r\n        break;\r\n      case \"4\":\r\n        renderOption(\"year\");\r\n        break;\r\n\r\n      // switch to list view\r\n      case \"l\":\r\n        renderOption(\"list\");\r\n        break;\r\n      case \"5\":\r\n        renderOption(\"list\");\r\n        break;\r\n\r\n      // toggle sidebar open/close\r\n      case \"s\":\r\n        context.toggleSidebarState();\r\n        handleBtnMainMenu();\r\n        break;\r\n\r\n      // toggle form open (close with escape)\r\n      case \"f\":\r\n        handleForm();\r\n        break;\r\n\r\n      // open \"views\" menu\r\n      case \"v\":\r\n        toggleChangeview(e);\r\n        break;\r\n\r\n      // (day/week) next month\r\n      case \"n\":\r\n        getNextPrevMonth(\"next\");\r\n        break;\r\n\r\n      // (day/week) prev month\r\n      case \"p\":\r\n        getNextPrevMonth(\"prev\");\r\n        break;\r\n\r\n      // set date to today\r\n      case \"t\":\r\n        handleBtnToday();\r\n        break;\r\n\r\n      // open submenu\r\n      case \"a\":\r\n        handleToggleSubmenu();\r\n        break;\r\n\r\n      // prev day/week/month/year\r\n      case \"arrowleft\":\r\n        handleBtnPrev();\r\n        break;\r\n\r\n      // next day/week/month/year\r\n      case \"arrowright\":\r\n        handleBtnNext();\r\n        break;\r\n\r\n      // open keyboard shortcuts modal\r\n      case \"?\":\r\n        handleShortCutsModal(store);\r\n        break;\r\n      case \"/\":\r\n        handleShortCutsModal(store);\r\n        break;\r\n\r\n      // toggle between light/dark mode\r\n      case \"0\":\r\n        setColorScheme()\r\n        break;\r\n\r\n      // opens search modal\r\n      case \"g\":\r\n        createGoTo(context, store, datepickerContext);\r\n        break;\r\n\r\n      case \"+\":\r\n        const targetcat = {\r\n          name: \"new category\",\r\n          color: \"#2C52BA\",\r\n        }\r\n        createCategoryForm(store, targetcat, false, null);\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const getKeyPressThrottled = throttle(delegateGlobalKeyDown, 150)\r\n  // shortcuts defined within this function are global and will work anywhere within the application (except for modal/popup/form windows)\r\n\r\n  // If a modal/popup is open, all keyboard shortcuts defined within this function will be disabled until the modal/popup is closed.\r\n  // Note that Each modal/popup has its own keydown close event on escape thats defined within the scope of its own function,\r\n  // once it is closed, the event listener is removed from the DOM.\r\n  let [lk, lk2] = ['', ''];\r\n  function handleGlobalKeydown(e) {\r\n    if (!store.getShortcutsStatus()) return;\r\n    if (store.hasActiveOverlay()) return;\r\n\r\n    // prevent ctrl + key shortcuts from triggering at all\r\n    lk = e.key\r\n    if (lk === \"Control\") {\r\n      lk2 = \"Control\"\r\n      return;\r\n    }\r\n\r\n    if (lk2 === \"Control\" && lk !== \"Control\") {\r\n      lk2 = \"\"\r\n      return;\r\n    }\r\n    getKeyPressThrottled(e)\r\n  }\r\n\r\n  const appinit = () => {\r\n    /*************************/\r\n    // render initial view and set initial attributes\r\n    renderOption(context.getComponent(), true);\r\n    setInitialAttributes();\r\n    handleBtnMainMenu();\r\n    /*************************/\r\n    // supply callbacks to store for opening form and sidebar\r\n    store.setRenderFormCallback(handleForm);\r\n    const ensureSidebarIsOpen = () => {\r\n      context.setSidebarState(\"open\")\r\n      handleBtnMainMenu()\r\n    }\r\n    store.setRenderSidebarCallback(ensureSidebarIsOpen);\r\n    /*************************/\r\n    // establish delegation\r\n    toggleForm.onclick = handleForm;\r\n    sbToggleForm.onclick = handleForm;\r\n    header.onmousedown = delegateHeaderEvents;\r\n    document.addEventListener(\"keydown\", handleGlobalKeydown);\r\n  }\r\n  // store.setShortcutsStatus(true)\r\n  appinit();\r\n}","import setHeader from \"../components/menus/header\"\r\nimport setYearView from \"../components/views/yearview\"\r\nimport setMonthView from \"../components/views/monthview\"\r\nimport setWeekView from \"../components/views/weekview\"\r\nimport setDayView from \"../components/views/dayview\"\r\nimport setListView from \"../components/views/listview\"\r\n// import setListView from \"../components/views/listview\"\r\n\r\nconst yearComponent = document.querySelector(\".yearview\")\r\nconst monthComponent = document.querySelector(\".monthview\")\r\nconst weekComponent = document.querySelector(\".weekview\")\r\nconst dayComponent = document.querySelector(\".dayview\")\r\nconst listComponent = document.querySelector(\".listview\")\r\n\r\n/**\r\n * \r\n * @param {string} component \r\n * @param {object} context \r\n * @param {object} store \r\n * @param {object} datepickerContext \r\n * @desc  hides all views and renders @component passed in\r\n * \r\n */\r\n\r\nlet previousview = \"month\";\r\nexport default function setViews(component, context, store, datepickerContext) {\r\n  function hideViews() {\r\n    const views = [\r\n      yearComponent, \r\n      monthComponent, \r\n      weekComponent, \r\n      dayComponent,\r\n      listComponent\r\n    ];\r\n    // only the month view relies on a resize listener\r\n    // more info provided @readme > monthview > box queries\r\n    views.forEach((view) => {\r\n      view.classList.add(\"hide-view\")\r\n      if (view !== monthComponent) {\r\n        window.removeEventListener(\"resize\", store.getResizeHandle(\"month\"))\r\n      }\r\n    })\r\n  }\r\n\r\n  function initView(component) {\r\n    switch (component) {\r\n      case \"day\":\r\n        context.setComponent(component);\r\n        setHeader(context, component);\r\n        setDayView(context, store, datepickerContext);\r\n        dayComponent.classList.remove(\"hide-view\");\r\n        break;\r\n      case \"week\":\r\n        context.setComponent(component);\r\n        setHeader(context, component);\r\n        setWeekView(context, store, datepickerContext);\r\n        weekComponent.classList.remove(\"hide-view\");\r\n        break;\r\n      case \"month\":\r\n        context.setComponent(component);\r\n        setHeader(context, component);\r\n        setMonthView(context, store, datepickerContext);\r\n        monthComponent.classList.remove(\"hide-view\");\r\n        window.addEventListener(\"resize\", store.getResizeHandle(\"month\"))\r\n        break;\r\n      case \"year\":\r\n        context.setComponent(component);\r\n        setHeader(context, component);\r\n        setYearView(context, store, datepickerContext);\r\n        yearComponent.classList.remove(\"hide-view\");\r\n        break;\r\n      case \"list\":\r\n        context.setComponent(component);\r\n        setHeader(context, component, store);\r\n        setListView(context, store, datepickerContext);\r\n        listComponent.classList.remove(\"hide-view\");\r\n        break;\r\n      default:\r\n        context.setComponent(\"month\");\r\n        setHeader(context, \"month\");\r\n        setMonthView(context, store, datepickerContext);\r\n        monthComponent.classList.remove(\"hide-view\");\r\n        break;\r\n    }\r\n  }\r\n\r\n  hideViews();\r\n  document.title = context.getMonthName();\r\n  initView(component);\r\n}","import { compareDates } from \"../utilities/dateutils\"\r\nimport locales from \"../locales/en\"\r\nconst labels = locales.labels;\r\n\r\nclass Context {\r\n  constructor() {\r\n    this.colorScheme = \"dark\";\r\n    this.component = \"month\";\r\n    this.sidebarState = \"hide\";\r\n    this.date = new Date();\r\n\r\n    this.dateSelected = 1;\r\n    this.daySelected = this.date.getDate();\r\n    this.monthSelected = this.date.getMonth();\r\n    this.yearSelected = this.date.getFullYear();\r\n\r\n    this.month = this.getMonth();\r\n    this.monthArray = this.getMonthArray();\r\n    this.week = this.getWeek();\r\n  }\r\n\r\n  setDateDefaults() {\r\n    if (localStorage.getItem(\"yearSelected\") === null) {\r\n      if (this.yearSelected === undefined) {\r\n        this.yearSelected = this.date.getFullYear();\r\n      }\r\n      Context.setLocalYear(this.yearSelected);\r\n    }\r\n\r\n    if (localStorage.getItem(\"monthSelected\") === null) {\r\n      if (this.monthSelected === undefined) {\r\n        this.monthSelected = this.date.getMonth();\r\n      }\r\n      Context.setLocalMonth(this.monthSelected);\r\n    }\r\n\r\n    if (localStorage.getItem(\"daySelected\") === null) {\r\n      if (this.daySelected === undefined) {\r\n        this.daySelected = this.date.getDate();\r\n      }\r\n      Context.setLocalDay(this.daySelected);\r\n    }\r\n\r\n    if (localStorage.getItem(\"dateSelected\") === null) {\r\n      if (this.dateSelected === undefined) {\r\n        this.dateSelected = 1;\r\n      }\r\n      Context.setLocalDateSelected(this.dateSelected);\r\n    }\r\n  }\r\n\r\n  setSchemaDefaults() {\r\n    if (localStorage.getItem(\"colorScheme\") === null) {\r\n      if (this.colorScheme === undefined) {\r\n        this.colorScheme = \"dark\";\r\n      }\r\n      Context.setLocalColorScheme(this.colorScheme);\r\n    }\r\n\r\n    if (localStorage.getItem(\"component\") === null) {\r\n      if (this.component === undefined) {\r\n        this.component = \"month\";\r\n      }\r\n      Context.setLocalComponent(this.component);\r\n    }\r\n\r\n    if (localStorage.getItem(\"sidebarState\") === null) {\r\n      if (this.sidebarState === undefined) {\r\n        this.sidebarState = \"hide\";\r\n      }\r\n      Context.setLocalSidebarState(this.sidebarState);\r\n    }\r\n  }\r\n\r\n  setDefaults() {\r\n    this.setSchemaDefaults();\r\n    this.setDateDefaults();\r\n  }\r\n\r\n  /* **************************************** */\r\n  /* LOCAL STATE MANAGEMENT */\r\n  static getLocalDay() {\r\n    return +localStorage.getItem(\"daySelected\") === undefined ? 1 : +localStorage.getItem(\"daySelected\");\r\n  }\r\n\r\n  static getLocalMonth() {\r\n    return +localStorage.getItem(\"monthSelected\") === undefined ? 1 : +localStorage.getItem(\"monthSelected\");\r\n  }\r\n\r\n  static getLocalYear() {\r\n    return +localStorage.getItem(\"yearSelected\") === undefined ? 1 : +localStorage.getItem(\"yearSelected\");\r\n  }\r\n\r\n  static getLocalDateSelected() {\r\n    return +localStorage.getItem(\"dateSelected\");\r\n  }\r\n\r\n  static getLocalComponent() {\r\n    return localStorage.getItem(\"component\");\r\n  }\r\n\r\n  static getLocalColorScheme() {\r\n    return localStorage.getItem(\"colorScheme\");\r\n  }\r\n\r\n  static getLocalSidebarState() {\r\n    return localStorage.getItem(\"sidebarState\");\r\n  }\r\n\r\n  static setLocalDay(day) {\r\n    localStorage.setItem(\"daySelected\", day);\r\n  }\r\n\r\n  static setLocalMonth(month) {\r\n    localStorage.setItem(\"monthSelected\", month);\r\n  }\r\n\r\n  static setLocalYear(year) {\r\n    localStorage.setItem(\"yearSelected\", year);\r\n  }\r\n\r\n  static setLocalDateSelected(date) {\r\n    localStorage.setItem(\"dateSelected\", date);\r\n  }\r\n\r\n  static setLocalComponent(component) {\r\n    localStorage.setItem(\"component\", component);\r\n  }\r\n\r\n  static setLocalSidebarState(state) {\r\n    localStorage.setItem(\"sidebarState\", state);\r\n  }\r\n\r\n  static setLocalColorScheme(colorScheme) {\r\n    localStorage.setItem(\"colorScheme\", colorScheme);\r\n  }\r\n  /* **************************************** */\r\n\r\n\r\n  /* **************************************** */\r\n  /* APPLICATION THEME (DARK/LIGHT) */\r\n  getColorScheme() {\r\n    return Context.getLocalColorScheme();\r\n  }\r\n  setColorScheme(colorScheme) {\r\n    this.colorScheme = colorScheme;\r\n    Context.setLocalColorScheme(colorScheme);\r\n  }\r\n  setSidebarState(state) {\r\n    this.sidebarState = state;\r\n    Context.setLocalSidebarState(state);\r\n  }\r\n  toggleSidebarState() {\r\n    this.sidebarState = this.getSidebarState() === \"open\" ? \"hide\" : \"open\";\r\n    Context.setLocalSidebarState(this.sidebarState);\r\n  }\r\n  /* **************************************** */\r\n\r\n\r\n  /* **************************************** */\r\n  /* APPLICATION CURRENT COMPONENT */\r\n  getComponent() {\r\n    return Context.getLocalComponent() || \"month\";\r\n  }\r\n  setComponent(component) {\r\n    this.component = component;\r\n    Context.setLocalComponent(component);\r\n  }\r\n  getSidebarState() {\r\n    return Context.getLocalSidebarState() || \"hide\";\r\n  }\r\n  /* **************************************** */\r\n\r\n\r\n\r\n  /* **************************************** */\r\n  /* APPLICATION DATE HANDLING */\r\n  // set the current date for the following\r\n  /* DAY, MONTH, YEAR, DATE, DAY_SELECTED */\r\n  setDay(day) {\r\n    this.daySelected = day;\r\n    Context.setLocalDay(day);\r\n  }\r\n\r\n  setMonth(month) {\r\n    this.monthSelected = month;\r\n    Context.setLocalMonth(month);\r\n  }\r\n\r\n  setYear(year) {\r\n    this.yearSelected = year;\r\n    Context.setLocalYear(year);\r\n  }\r\n\r\n  setDate(year, month, day) {\r\n    this.setYear(year);\r\n    this.setMonth(month);\r\n    this.setDay(day);\r\n  }\r\n\r\n  setDateSelected(date) {\r\n    this.dateSelected = date;\r\n    Context.setLocalDateSelected(date);\r\n  }\r\n  /* ************** */\r\n  // Take current date and set it to previous day/week/month/year\r\n  /* PREVIOUS : DAY, WEEK, MONTH, YEAR */\r\n  setPrevDay() {\r\n    const prevDay = new Date(this.getYear(), this.getMonth(), this.getDay() - 1);\r\n    this.setDate(prevDay.getFullYear(), prevDay.getMonth(), prevDay.getDate());\r\n  }\r\n\r\n  setPrevWeek() {\r\n    const prevWeek = new Date(this.getYear(), this.getMonth(), this.getDay() - 7);\r\n    this.setDate(prevWeek.getFullYear(), prevWeek.getMonth(), prevWeek.getDate());\r\n  }\r\n\r\n  setPrevMonth() {\r\n    const prevMonth = new Date(this.getYear(), this.getMonth() - 1, this.getDay());\r\n    this.setDate(prevMonth.getFullYear(), prevMonth.getMonth(), prevMonth.getDate());\r\n  }\r\n\r\n  setPrevYear() {\r\n    this.setYear(this.getYear() - 1);\r\n  }\r\n  /* ************** */\r\n\r\n  // Take current date and set it to next day/week/month/year\r\n  /* NEXT : DAY, WEEK, MONTH, YEAR */\r\n  setNextDay() {\r\n    const nextDay = new Date(this.getYear(), this.getMonth(), this.getDay() + 1);\r\n    this.setDate(nextDay.getFullYear(), nextDay.getMonth(), nextDay.getDate());\r\n  }\r\n\r\n  setNextWeek() {\r\n    const nextWeek = new Date(this.getYear(), this.getMonth(), this.getDay() + 7);\r\n    this.setDate(nextWeek.getFullYear(), nextWeek.getMonth(), nextWeek.getDate());\r\n  }\r\n\r\n  setNextMonth() {\r\n    const nextMonth = new Date(this.getYear(), this.getMonth() + 1, this.getDay());\r\n    this.setDate(nextMonth.getFullYear(), nextMonth.getMonth(), nextMonth.getDate());\r\n  }\r\n\r\n  setNextYear() {\r\n    this.setYear(this.getYear() + 1);\r\n  }\r\n  /* ************** */\r\n\r\n\r\n  /* ************** */\r\n  /* GETTERS */\r\n  getDateSelected() {\r\n    return +Context.getLocalDateSelected() || this.date.getDate();\r\n    // return this.dateSelected;\r\n  }\r\n\r\n  getDay() {\r\n    return +Context.getLocalDay() || this.date.getDate();\r\n    // return +this.daySelected;\r\n  }\r\n\r\n  getMonth() {\r\n    return +Context.getLocalMonth() || this.date.getMonth();\r\n    // return this.monthSelected;\r\n  }\r\n\r\n  getYear() {\r\n    return +Context.getLocalYear() || this.date.getFullYear();\r\n    // return this.yearSelected;\r\n  }\r\n\r\n  getDate() {\r\n    return new Date(this.getYear(), this.getMonth(), this.getDay());\r\n  }\r\n\r\n  getToday() {\r\n    return this.date;\r\n  }\r\n\r\n  getWeek() {\r\n    let tempdate = this.getDate();\r\n    tempdate.setDate(tempdate.getDate() - tempdate.getDay());\r\n    return tempdate;\r\n  }\r\n\r\n  getWeekday() {\r\n    return this.getDate().getDay();\r\n  }\r\n\r\n  getWeekArray() {\r\n    let week = this.getWeek();\r\n    let weekArray = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      if (i < 6) {\r\n        weekArray.push(new Date(week.getFullYear(), week.getMonth(), week.getDate() + i));\r\n      } else {\r\n        weekArray.push(new Date(week.getFullYear(), week.getMonth(), week.getDate() + i, 23, 59, 59, 999))\r\n      }\r\n    }\r\n    return weekArray;\r\n  }\r\n\r\n  getWeekRange() {\r\n    let weekArray = this.getWeekArray();\r\n    let [m1, m2] = [weekArray[0].getMonth(), weekArray[6].getMonth()]\r\n    let [d1, d2] = [weekArray[0].getDate(), weekArray[6].getDate()]\r\n\r\n    if (m1 === m2) {\r\n      return `${labels.monthsShort[m1]} ${d1} – ${d2}, ${weekArray[0].getFullYear()}`;\r\n    } else {\r\n      return `${labels.monthsShort[m1]} ${d1} – ${d2} ${labels.monthsShort[m2]}, ${weekArray[1].getFullYear()}`;\r\n    }\r\n  }\r\n\r\n  getWeekNumber() {\r\n    // fuction to get the week number for a date 1 - 52\r\n    let d = new Date(Date.UTC(this.getYear(), this.getMonth(), this.getDay()));\r\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\r\n    let yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);\r\n  }\r\n\r\n  getMonthName() {\r\n    return labels.monthsLong[this.getMonth()];\r\n  }\r\n\r\n  getDaysInMonth() {\r\n    return new Date(this.getYear(), this.getMonth() + 1, 0).getDate();\r\n  }\r\n\r\n  getMonthArrayStartDay() {\r\n    return new Date(this.getYear(), this.getMonth(), 1).getDay();\r\n  }\r\n\r\n  getMonthArrayStart() {\r\n    let monthArrayStart = [];\r\n    let [year, month] = [this.getYear(), this.getMonth()]\r\n    for (let i = 0; i < this.getMonthArrayStartDay(); i++) {\r\n      monthArrayStart.push(new Date(year, month, 0 - i));\r\n    }\r\n    return monthArrayStart;\r\n  }\r\n\r\n  getMonthArrayEndDay() {\r\n    return new Date(this.getYear(), this.getMonth() + 1, 0).getDay();\r\n  }\r\n\r\n  getMonthArrayEnd(handleFourWeeks) {\r\n    let monthArrayEnd = [];\r\n    let [year, month] = [this.getYear(), this.getMonth()]\r\n\r\n    if (handleFourWeeks) {\r\n      for (let i = 1; i < 8; i++) {\r\n        monthArrayEnd.push(new Date(year, +month + 1, i));\r\n      }\r\n      return monthArrayEnd;\r\n    } else {\r\n      for (let i = 1; i < 7 - this.getMonthArrayEndDay(); i++) {\r\n        monthArrayEnd.push(new Date(year, +month + 1, i));\r\n      }\r\n      return monthArrayEnd;\r\n    }\r\n  }\r\n\r\n  getMonthArray() {\r\n    let monthArray = [];\r\n    let start = this.getMonthArrayStart();\r\n    let daysInMonth = this.getDaysInMonth();\r\n    let [year, month] = [this.getYear(), this.getMonth()];\r\n    let end = this.getMonthArrayEnd();\r\n    let tempend;\r\n\r\n    for (let i = start.length - 1; i >= 0; i--) {\r\n      monthArray.push(start[i]);\r\n    }\r\n\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      monthArray.push(new Date(year, month, i));\r\n    }\r\n    monthArray[monthArray.length - 1].setHours(23, 59, 59, 999);\r\n\r\n\r\n\r\n    if (monthArray.length === 28 && end.length < 7) {\r\n      end = this.getMonthArrayEnd(true);\r\n    }\r\n\r\n    for (let i = 0; i < end.length; i++) {\r\n      if (i === end.length - 1) {\r\n        end[i].setHours(23, 59, 59, 999);\r\n      }\r\n      monthArray.push(end[i]);\r\n    }\r\n    return monthArray;\r\n  }\r\n\r\n  isToday(testDate) {\r\n    if (!testDate) {\r\n      return compareDates(this.getDate(), new Date());\r\n    } else {\r\n      return compareDates(testDate, new Date());\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n  * DatepickerContext\r\n  * @class\r\n  * @classdesc date context for datepicker -- \r\n  * slimmed down version of @Context class \r\n  * @property {Date} date - today's date\r\n  * @property {Date} dateSelected - selected date\r\n  * @property {number} daySelected - selected day\r\n  * @property {number} monthSelected - selected month\r\n  * @property {number} yearSelected - selected year\r\n  * @property {number} month - current month\r\n  * @property {Array} monthArray - current month array\r\n  * \r\n */\r\nclass DatepickerContext {\r\n  constructor() {\r\n    this.date = new Date();\r\n    this.dateSelected = this.date.getDate();\r\n    this.daySelected = this.date.getDate();\r\n    this.monthSelected = this.date.getMonth();\r\n    this.yearSelected = this.date.getFullYear();\r\n    this.month = this.getMonth();\r\n    this.monthArray = this.getMonthArray();\r\n  }\r\n\r\n  setDefaults() {\r\n    if (localStorage.getItem(\"pickerYearSelected\") === null) {\r\n      if (this.yearSelected === undefined) {\r\n        this.yearSelected = this.date.getFullYear();\r\n      }\r\n      DatepickerContext.setLocalPickerYear(this.yearSelected);\r\n    }\r\n\r\n    if (localStorage.getItem(\"pickerMonthSelected\") === null) {\r\n      if (this.monthSelected === undefined) {\r\n        this.monthSelected = this.date.getMonth();\r\n      }\r\n      DatepickerContext.setLocalPickerMonth(this.monthSelected);\r\n    }\r\n\r\n    if (localStorage.getItem(\"pickerDaySelected\") === null) {\r\n      if (this.daySelected === undefined) {\r\n        this.daySelected = this.date.getDate();\r\n      }\r\n      DatepickerContext.setLocalPickerDay(this.daySelected);\r\n    }\r\n\r\n    if (localStorage.getItem(\"pickerDateSelected\") === null) {\r\n      if (this.dateSelected === undefined) {\r\n        this.dateSelected = this.date.getDate();\r\n      }\r\n      DatepickerContext.setLocalPickerDateSelected(this.dateSelected);\r\n    }\r\n  }\r\n\r\n  /* **************************************** */\r\n  /* LOCAL STATE MANAGEMENT */\r\n  static getLocalPickerDay() {\r\n    return +localStorage.getItem(\"pickerDaySelected\");\r\n  }\r\n\r\n  static getLocalPickerMonth() {\r\n    return +localStorage.getItem(\"pickerMonthSelected\");\r\n  }\r\n\r\n  static getLocalPickerYear() {\r\n    return +localStorage.getItem(\"pickerYearSelected\");\r\n  }\r\n\r\n  static getLocalPickerDateSelected() {\r\n    return +localStorage.getItem(\"pickerDateSelected\");\r\n  }\r\n\r\n  static setLocalPickerDay(day) {\r\n    localStorage.setItem(\"pickerDaySelected\", day);\r\n  }\r\n\r\n  static setLocalPickerMonth(month) {\r\n    localStorage.setItem(\"pickerMonthSelected\", month);\r\n  }\r\n\r\n  static setLocalPickerYear(year) {\r\n    localStorage.setItem(\"pickerYearSelected\", year);\r\n  }\r\n\r\n  static setLocalPickerDateSelected(date) {\r\n    localStorage.setItem(\"pickerDateSelected\", date);\r\n  }\r\n  /* **************************************** */\r\n  /* DAY, MONTH, YEAR, DATE, DAY_SELECTED */\r\n  setDay(day) {\r\n    this.daySelected = day;\r\n    DatepickerContext.setLocalPickerDay(day);\r\n  }\r\n\r\n  setMonth(month) {\r\n    this.monthSelected = month;\r\n    DatepickerContext.setLocalPickerMonth(month);\r\n  }\r\n\r\n  setYear(year) {\r\n    this.yearSelected = year;\r\n    DatepickerContext.setLocalPickerYear(year);\r\n  }\r\n\r\n  setDateSelected(date) {\r\n    this.dateSelected = date;\r\n    DatepickerContext.setLocalPickerDateSelected(date);\r\n  }\r\n\r\n  setDate(year, month, day) {\r\n    this.setYear(year);\r\n    this.setMonth(month);\r\n    this.setDay(day);\r\n  }\r\n  /* ************** */\r\n  setPrevMonth() {\r\n    const prevMonth = new Date(this.getYear(), this.getMonth() - 1, this.getDay());\r\n    this.setDate(prevMonth.getFullYear(), prevMonth.getMonth(), prevMonth.getDate());\r\n  }\r\n\r\n  setNextMonth() {\r\n    const nextMonth = new Date(this.getYear(), this.getMonth() + 1, this.getDay());\r\n    this.setDate(nextMonth.getFullYear(), nextMonth.getMonth(), nextMonth.getDate());\r\n  }\r\n  /* ************** */\r\n  getDateSelected() {\r\n    return DatepickerContext.getLocalPickerDateSelected() || this.date.getDate();\r\n  }\r\n\r\n  getDay() {\r\n    return DatepickerContext.getLocalPickerDay() || this.date.getDate();\r\n  }\r\n\r\n  getMonth() {\r\n    return DatepickerContext.getLocalPickerMonth() || this.date.getMonth();\r\n  }\r\n\r\n  getYear() {\r\n    return DatepickerContext.getLocalPickerYear() || this.date.getFullYear();\r\n  }\r\n\r\n  getDate() {\r\n    return new Date(this.getYear(), this.getMonth(), this.getDay());\r\n  }\r\n\r\n  getToday() {\r\n    return this.date;\r\n  }\r\n\r\n  getMonthName() {\r\n    return labels.monthsLong[this.getMonth()];\r\n  }\r\n\r\n  getDaysInMonth() {\r\n    return new Date(this.getYear(), this.getMonth() + 1, 0).getDate();\r\n  }\r\n\r\n  getMonthArrayStartDay() {\r\n    return new Date(this.getYear(), this.getMonth(), 1).getDay();\r\n  }\r\n\r\n  getMonthArrayStart() {\r\n    let monthArrayStart = [];\r\n    let [year, month] = [this.getYear(), this.getMonth()]\r\n    for (let i = 0; i < this.getMonthArrayStartDay(); i++) {\r\n      monthArrayStart.push(new Date(year, month, 0 - i));\r\n    }\r\n    return monthArrayStart;\r\n  }\r\n\r\n  getMonthArrayEndDay() {\r\n    return new Date(this.getYear(), this.getMonth() + 1, 0).getDay();\r\n  }\r\n\r\n  getMonthArrayEnd() {\r\n    let monthArrayEnd = [];\r\n    let [year, month] = [this.getYear(), this.getMonth()]\r\n    for (let i = 1; i < 7 - this.getMonthArrayEndDay(); i++) {\r\n      monthArrayEnd.push(new Date(year, +month + 1, i));\r\n    }\r\n    return monthArrayEnd;\r\n  }\r\n\r\n  getMonthArray() {\r\n    let monthArray = [];\r\n\r\n    let start = this.getMonthArrayStart();\r\n    for (let i = start.length - 1; i >= 0; i--) {\r\n      monthArray.push(start[i]);\r\n    }\r\n\r\n    let [year, month] = [this.getYear(), this.getMonth()];\r\n    for (let i = 1; i <= this.getDaysInMonth(); i++) {\r\n      monthArray.push(new Date(year, month, i));\r\n    }\r\n\r\n    let end = this.getMonthArrayEnd();\r\n    for (let i = 0; i < end.length; i++) {\r\n      if (i === end.length - 1) {\r\n        end[i].setHours(23, 59, 59, 999);\r\n      }\r\n      monthArray.push(end[i]);\r\n    }\r\n    return monthArray;\r\n  }\r\n}\r\n\r\nconst context = new Context();\r\ncontext.setDefaults();\r\nexport default context;\r\n\r\nconst datepickerContext = new DatepickerContext();\r\ndatepickerContext.setDefaults();\r\nexport { datepickerContext }","const localStoreKeyNames = [\r\n  \"activeCtg\",\r\n  \"dateSelected\",\r\n  \"pickerDaySelected\",\r\n  \"pickerMonthSelected\",\r\n  \"sidebarState\",\r\n  \"refresh\",\r\n  \"component\",\r\n  \"yearSelected\",\r\n  \"ctg\",\r\n  \"monthSelected\",\r\n  \"daySelected\",\r\n  \"pickerDateSelected\",\r\n  \"pickerYearSelected\",\r\n  \"store\",\r\n  \"colorScheme\",\r\n  \"keyboardShortcutsStatus\",\r\n]\r\n\r\nexport default localStoreKeyNames","import Entry from \"../factory/entries\"\r\nimport localStoreKeyNames from \"./constants\"\r\nimport { testDate, compareDates } from '../utilities/dateutils'\r\nimport locales from \"../locales/en\"\r\nimport defautlKeyboardShortcuts from \"../locales/kbDefault\"\r\nimport testdata from \"../testdata.json\"\r\nconst colors = locales.colors\r\n/*\r\n  ***************************************\r\n  // ENTRY MANAGEMENT\r\n  \"addEntry\",\r\n  \"createEntry\",\r\n  \"deleteEntry\",\r\n  \"getActiveEntries\",\r\n  \"getEntry\",\r\n  \"getEntries\",\r\n  \"removeLastEntry\",\r\n  \"updateEntry\",\r\n  \"searchBy\",\r\n  \"sortBy\",\r\n  \"getFirstAndLastEntry\",\r\n  \"generateCoordinates\",\r\n  \"getDayEntries\",\r\n  \"getDayEntriesArray\",\r\n  \"getMonthEntries\",\r\n  \"getMonthEntryDates\",\r\n  \"getGroupedMonthEntries\",\r\n  \"getWeekEntries\",\r\n  \"getYearEntries\",\r\n  \"getGroupedYearEntries\",\r\n  ***************************************\r\n\r\n\r\n  ***************************************\r\n  // CATEGORY MANAGEMENT\r\n  \"addNewCtg\",\r\n  \"deleteCategory\",\r\n  \"getDefaultCtg\",\r\n  \"getFirstActiveCategory\",\r\n  \"getFirstActiveCategoryKeyPair\",\r\n  \"getActiveCategories\",\r\n  \"getActiveCategoriesKeyPair\",\r\n  \"getAllCtg\",\r\n  \"getAllCtgColors\",\r\n  \"getAllCtgNames\",\r\n  \"getCategoryStatus\",\r\n  \"getCtgColor\",\r\n  \"getCtgLength\",\r\n  \"hasCtg\",\r\n  \"moveCategoryEntriesToNewCategory\",\r\n  \"removeCategoryAndEntries\",\r\n  \"setCategoryStatus\",\r\n  \"updateCtgColor\",\r\n  ***************************************\r\n\r\n\r\n  ***************************************\r\n  // KEYBOARD SHORTCUT MANAGEMENT\r\n  \"getShortcuts\",\r\n  \"setShortCut\",\r\n  \"setShortcutsStatus\",\r\n  \"getShortcutsStatus\",\r\n  ***************************************\r\n\r\n\r\n  ***************************************\r\n  // POPUP/TOAST/NOTIFICATION MANAGEMENT\r\n  \"addActiveOverlay\",\r\n  \"removeActiveOverlay\",\r\n  \"getActiveOverlay\",\r\n  \"hasActiveOverlay\",\r\n  ***************************************\r\n\r\n\r\n  ***************************************\r\n  // USER UPLOAD/DOWNLOAD MANAGEMNET\r\n  \"validateUserUpload\",\r\n  \"setUserUpload\",\r\n  \"setDataReconfigCallback\",\r\n  \"getUserUpload\",\r\n  \"getDataReconfigCallback\",\r\n  ***************************************\r\n\r\n\r\n  ***************************************\r\n  // FORM MANAGEMENT \r\n  \"setFormRenderHandle\",\r\n  \"getFormRenderHandle\",\r\n\r\n  \"setFormResetHandle\",\r\n  \"getFormResetHandle\",\r\n\r\n  \"setRenderFormCallback\",\r\n  \"getRenderFormCallback\",\r\n  ***************************************\r\n\r\n\r\n  ***************************************\r\n  // SIDEBAR MANAGEMENT\r\n  \"setRenderSidebarCallback\",\r\n  \"getRenderSidebarCallback\"\r\n  ***************************************\r\n\r\n\r\n  ***************************************\r\n  // DATEPICKER MANAGEMENT\r\n  \"setResetDatepickerCallback\",\r\n  \"getResetDatepickerCallback\",\r\n  ***************************************\r\n\r\n\r\n  ***************************************\r\n  // CALENDAR MANAGEMENT\r\n  \"setResizeHandle\",\r\n  \"getResizeHandle\",\r\n  ***************************************\r\n]\r\n*/\r\n// Store is passed to all calendar views in the following order : \r\n// ./index > ./renderViews > ./setViews > component\r\n\r\nclass Store {\r\n  constructor() {\r\n    this.store = localStorage.getItem(\"store\") \r\n    ? JSON.parse(localStorage.getItem(\"store\")) : testdata;\r\n\r\n    this.userUpload;\r\n\r\n    this.ctg = localStorage.getItem(\"ctg\") ? JSON.parse(localStorage.getItem(\"ctg\")) : {\r\n      \"default\": {color: colors.blue[4], active: true},\r\n      \"misc\": {color: colors.grey[2], active: true},\r\n      \"school\": {color: colors.grey[4], active: true},\r\n    }\r\n\r\n    this.activeCtg = [\"default\", \"misc\", \"school\"];\r\n\r\n    this.activeOverlay = new Set();\r\n\r\n    this.handleRenders = {\r\n      sidebar: {\r\n        callback: null\r\n      },\r\n      datepicker: {\r\n        reset: null\r\n      },\r\n      form: {\r\n        callback: null\r\n      },\r\n      reconfig: {\r\n        callback: null\r\n      },\r\n      categories: {\r\n        callback: null\r\n      },\r\n      calendars: {\r\n        \"month\": {\r\n          reset: null,\r\n          resize: null,\r\n        },\r\n        \"week\": {\r\n          reset: null, \r\n          render: null,\r\n        },\r\n        \"day\": {\r\n          reset: null\r\n        },\r\n        \"list\": {\r\n          reset: null\r\n        }\r\n      },\r\n    }\r\n\r\n    this.keyboardShortcuts = defautlKeyboardShortcuts;\r\n    this.keyboardShortcutsStatus = true;\r\n  }\r\n\r\n  setStoreForTesting(store) {\r\n    this.store = store;\r\n    Store.setStore(this.store);\r\n  }\r\n\r\n  getStoreStats() {\r\n    return [this.store.length, this.getAllCtgNames().length] \r\n  }\r\n\r\n  getAllMethodNames() {\r\n    return Object.getOwnPropertyNames(Object.getPrototypeOf(this)).filter((method) => {\r\n      return method !== \"constructor\" && method !== \"getStoreStats\"\r\n    })\r\n  }\r\n\r\n  /* ************************* */\r\n  /* LOCAL STORAGE MANAGEMENT */\r\n  static getStore() {\r\n    return JSON.parse(localStorage.getItem(\"store\")) || [];\r\n  }\r\n  \r\n  static getActiveStore() {\r\n    return JSON.parse(localStorage.getItem(\"activeStore\")) || [];\r\n  }\r\n\r\n  static getCtg() {\r\n    return JSON.parse(localStorage.getItem(\"ctg\")) || [];\r\n  }\r\n\r\n  static getShortcutsStatus() {\r\n    return JSON.parse(localStorage.getItem(\"keyboardShortcutsStatus\"));\r\n  }\r\n\r\n  // *******************\r\n  static setStore(store) {\r\n    localStorage.setItem(\"store\", JSON.stringify(store));\r\n  }\r\n\r\n  static setActiveStore(activeStore) {\r\n    localStorage.setItem(\"activeStore\", JSON.stringify(activeStore));\r\n  }\r\n\r\n  static setCtg(ctg) {\r\n    localStorage.setItem(\"ctg\", JSON.stringify(ctg));\r\n  }\r\n\r\n  static setShortcutsStatus(status) {\r\n    localStorage.setItem(\"keyboardShortcutsStatus\", JSON.stringify(status))\r\n  }\r\n  /* ************************* */\r\n\r\n\r\n\r\n\r\n  /* ************** */\r\n  /* essential crud (entries) - create, read, update, delete */\r\n  addEntry(entry) {\r\n    this.store.push(entry);\r\n    Store.setStore(this.store);\r\n  }\r\n\r\n  createEntry(...args) {\r\n    this.addEntry(new Entry(...args));\r\n    Store.setStore(this.store);\r\n  }\r\n\r\n  deleteEntry(id) {\r\n    this.store = this.store.filter(entry => entry.id !== id)\r\n    Store.setStore(this.store);\r\n  }\r\n\r\n  getActiveEntries() {\r\n    const active = this.getActiveCategories()\r\n    if (!active) return [];\r\n    const activeEntries = this.store.filter((entry) => {\r\n      return active ? active.indexOf(entry.category) > -1 : [];\r\n    })\r\n    return activeEntries\r\n  }\r\n  \r\n  getEntry(id) {\r\n    return this.store.find(entry => entry.id === id);\r\n  }\r\n\r\n  getEntries() {\r\n    return this.store || [];\r\n  }\r\n\r\n  getEntriesByCtg(ctg) {\r\n    return this.store.filter((entry) => {\r\n      return entry.category === ctg;\r\n    })\r\n  }\r\n\r\n  removeLastEntry() {\r\n    this.store.pop();\r\n    Store.setStore(this.store);\r\n  }\r\n\r\n  updateEntry(id, data) {\r\n    let entry = this.getEntry(id)\r\n    entry = Object.assign(entry, data)\r\n    Store.setStore(this.store);\r\n  }\r\n  /* ************ */\r\n\r\n\r\n\r\n\r\n  /* **************************** */\r\n  /* (ENTRIES) FILTER/SORT/PARTITION/ */\r\n  searchBy(entries, searchtype, value) {\r\n    if (entries.length === 0) return;\r\n    return entries.filter((entry) => {\r\n      return entry[searchtype].toLowerCase().slice(0, value.length) === value\r\n    })\r\n  }\r\n  \r\n  sortBy(entries, type, direction) {\r\n    if (entries.length === 0) return;\r\n  \r\n    if (direction === \"desc\") {\r\n      return entries.sort((a, b) => {\r\n        if (type === \"start\") {\r\n          return new Date(a.start) - new Date(b.start)\r\n        } else if (type === \"end\") {\r\n          return new Date(a.end) - new Date(b.end)\r\n        } else if (type === \"description\" || type === \"title\" || type === \"category\") {\r\n          return a[type].localeCompare(b[type])\r\n        } else {\r\n          return a[type] - b[type]\r\n        }\r\n      })\r\n  \r\n    } else {\r\n      return entries.sort((a, b) => {\r\n        if (type === \"start\") {\r\n          return new Date(b.start) - new Date(a.start)\r\n        } else if (type === \"end\") {\r\n          return new Date(b.end) - new Date(a.end)\r\n        } else if (type === \"description\" || type === \"title\" || type === \"category\") {\r\n          return b[type].localeCompare(a[type])\r\n        } else {\r\n          return b[type] - a[type]\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @returns {Array} [\r\n   *    start date/time of earliest entry,  {string}\r\n   *    end date/time of last entry         {string}\r\n   * ]\r\n   */\r\n  getFirstAndLastEntry() {\r\n    let sorted = this.sortBy(this.getActiveEntries(), \"start\", \"desc\")\r\n    if (sorted === undefined) {\r\n      return [0, 0]\r\n    } else {\r\n      return [sorted[0].start, sorted[sorted.length - 1].end]\r\n    }\r\n  }\r\n  /* **************************** */\r\n\r\n\r\n\r\n  /* *************************************** */\r\n  /* SEGMENT ENTRIES FOR SPECIFIC VIEWS (YEAR/MONTH/...ect)*/\r\n\r\n  // @generateCoordinates -- (only used in week and day view)\r\n  // generates coordinates based on start and end times for a given entry\r\n  // if an entry spans beyond a day, it will render at the top of the grid in \r\n  // a static (immobile) position. \r\n  generateCoordinates(start, end) {\r\n    [start, end] = [testDate(start), testDate(end)];\r\n\r\n    let startMin = start.getHours() * 4 + Math.floor(start.getMinutes() / 15);\r\n    let endMin = end.getHours() * 4 + Math.floor(end.getMinutes() / 15);\r\n    let height = endMin - startMin;\r\n    let total = startMin + height;\r\n\r\n    if (!compareDates(start, end)) {\r\n      return {\r\n        allDay: true,\r\n        x: start.getDay(),\r\n        x2: end.getDay(),\r\n      }\r\n    } else {\r\n      return {\r\n        allDay: false,\r\n        x: start.getDay(),\r\n        y: startMin,\r\n        h: height,\r\n        e: total\r\n      }\r\n    }\r\n  }\r\n\r\n  getDayEntries(day) {\r\n    let activeEntries = this.getActiveEntries();\r\n    let boxes = {\r\n      allDay: [], // entries that start on one day and end on another\r\n      day: []     // entries that start and end on same day\r\n    }\r\n\r\n    if (activeEntries.length === 0) return boxes;\r\n\r\n    let dayEntries = activeEntries.filter((entry) => {\r\n      let entryDate = new Date(entry.start);\r\n      const [y, m, d] = [\r\n        entryDate.getFullYear(),\r\n        entryDate.getMonth(),\r\n        entryDate.getDate(),\r\n      ];\r\n      return y === day.getFullYear() && m === day.getMonth() && d === day.getDate();\r\n    })\r\n\r\n    dayEntries.forEach((entry) => {\r\n      entry.coordinates = this.generateCoordinates(\r\n        new Date(entry.start), new Date(entry.end)\r\n      );\r\n\r\n      if (entry.coordinates.allDay) {\r\n        boxes.allDay.push(entry)\r\n      } else {\r\n        boxes.day.push(entry)\r\n      }\r\n    })\r\n    return boxes\r\n  }\r\n\r\n  getDayEntriesArray(targetDate) {\r\n    let activeEntries = this.getActiveEntries();\r\n    if (activeEntries.length === 0) return [];\r\n\r\n    return activeEntries.filter((entry) => {\r\n      let entryDate = new Date(entry.start);\r\n      const [y, m, d] = [\r\n        entryDate.getFullYear(),\r\n        entryDate.getMonth(),\r\n        entryDate.getDate()\r\n      ];\r\n      return y === targetDate.getFullYear() && m === targetDate.getMonth() && d === targetDate.getDate();\r\n    })\r\n  }\r\n\r\n  getMonthEntries(montharr) {\r\n    let activeEntries = this.getActiveEntries()\r\n    if (activeEntries.length === 0) return []\r\n\r\n    return activeEntries.filter((entry) => {\r\n      let entryDate = new Date(entry.start)\r\n      // console.log(entryDate)\r\n      return entryDate >= montharr[0] && entryDate <= montharr[montharr.length - 1]\r\n    })\r\n  }\r\n  \r\n  getMonthEntryDates(montharr) {\r\n    let entries = this.getMonthEntries(montharr)\r\n    let grouped = {}\r\n    entries.forEach((entry) => {\r\n      let entryDate = new Date(entry.start)\r\n      const [y, m, d] = [entryDate.getFullYear(), entryDate.getMonth(), entryDate.getDate()]\r\n      let key = `${y}-${m}-${d}`\r\n      if (!grouped[key]) {\r\n        grouped[key] = []\r\n      }\r\n      grouped[key].push(entry)\r\n    })\r\n    return Object.keys(grouped)\r\n  }\r\n\r\n  getGroupedMonthEntries(entries) {\r\n    return entries.reduce((acc, entry) => {\r\n      let tempDate = new Date(entry.start)\r\n      let day = tempDate.getDate()\r\n      if (!acc[day]) {\r\n        acc[day] = []\r\n      }\r\n      acc[day].push(entry)\r\n      return acc;\r\n    }, {})\r\n  }\r\n\r\n  getWeekEntries(week) {\r\n    let activeEntries = this.getActiveEntries()\r\n    let [start, end] = [week[0], week[6]]\r\n    let boxes = {\r\n      allDay: [], // entries that start on one day and end on another\r\n      day: []     // entries that start and end on same day\r\n    }\r\n\r\n    if (activeEntries.length === 0) return boxes;\r\n    let entries = activeEntries.filter((entry) => {\r\n      let entryDate = new Date(entry.start)\r\n      return entryDate >= start && entryDate <= end\r\n    })\r\n\r\n    entries.forEach((entry) => {\r\n      entry.coordinates = this.generateCoordinates(\r\n        new Date(entry.start), \r\n        new Date(entry.end)\r\n      )\r\n\r\n      if (entry.coordinates.allDay) {\r\n        boxes.allDay.push(entry)\r\n      } else {\r\n        boxes.day.push(entry)\r\n      }\r\n    })\r\n    \r\n    return boxes\r\n  }\r\n\r\n  getYearEntries(year) {\r\n    let activeEntries = this.getActiveEntries()\r\n    if (activeEntries.length === 0) return []\r\n    return activeEntries.filter(entry => new Date(entry.start).getFullYear() === year)\r\n  }\r\n\r\n  getGroupedYearEntries(yearentries) {\r\n    let grouped = {}\r\n    yearentries.forEach(entry => {\r\n      let entryDate = new Date(entry.start)\r\n      let month = entryDate.getMonth()\r\n      let day = entryDate.getDate()\r\n\r\n      if (!grouped[month]) {\r\n        grouped[month] = {}\r\n      }\r\n\r\n      if (!grouped[month][day]) {\r\n        grouped[month][day] = []\r\n      }\r\n\r\n      grouped[month][day].push(entry)\r\n    })\r\n\r\n    return grouped;\r\n  }\r\n\r\n  \r\n  /* ************************************* */\r\n\r\n\r\n\r\n  /* ********************* */\r\n  /*  CATEGORY MANAGEMENT */\r\n  addNewCtg(categoryName, color) {\r\n    if (!this.hasCtg(categoryName)) {\r\n      this.ctg[categoryName] = {\r\n        color: color,\r\n        active: true,\r\n      }\r\n      Store.setCtg(this.ctg);\r\n    }\r\n  }\r\n\r\n  deleteCategory(category) {\r\n    if (this.hasCtg(category)) {\r\n      delete this.ctg[category];\r\n      Store.setCtg(this.ctg);\r\n    }\r\n  }\r\n\r\n  getDefaultCtg() {\r\n    return Object.entries(this.ctg)[0];\r\n  }\r\n\r\n  getFirstActiveCategory() {\r\n    for (let [key, value] of Object.entries(this.ctg)) {\r\n      if (value.active) {\r\n        return key;\r\n      }\r\n    }\r\n    return \"default\";\r\n  }\r\n\r\n  getFirstActiveCategoryKeyPair() {\r\n    for (let [key, value] of Object.entries(this.ctg)) {\r\n      if (value.active) {\r\n        return [key, value.color];\r\n      }\r\n    }\r\n    const backup = this.getDefaultCtg()\r\n    return [backup[0], backup[1].color]\r\n  }\r\n\r\n  getActiveCategories() {\r\n    let active = Object.keys(this.ctg).filter(key => this.ctg[key].active);\r\n    if (active.length > 0) {\r\n      return active;\r\n    } else {\r\n      active = [];\r\n    }\r\n  }\r\n\r\n  getActiveCategoriesKeyPair() {\r\n    return Object.entries(this.ctg).filter(key => key[1].active);\r\n  }\r\n\r\n  getAllCtg() {\r\n    return this.ctg;\r\n  }\r\n  \r\n  getAllCtgColors() {\r\n    return Object.values(this.ctg).map(ctg => ctg.color);\r\n  }\r\n\r\n  getAllCtgNames() {\r\n    return Object.keys(this.ctg);\r\n  }\r\n\r\n  getCategoryStatus(category) {\r\n    if (this.ctg.hasOwnProperty(category)) {\r\n      return this.ctg[category].active;\r\n    }\r\n  }\r\n\r\n  getCtgColor(ctg) {\r\n    return this.ctg[ctg].color;\r\n  }\r\n\r\n  getCtgLength(category) {\r\n    return this.store.filter(entry => entry.category === category).length\r\n  }\r\n\r\n  hasCtg(categoryName) {\r\n    let hasctg = false;\r\n    for (let key in this.ctg) {\r\n      if (key.toLowerCase() === categoryName.toLowerCase()) {\r\n        hasctg = true;\r\n      }\r\n    }\r\n    return hasctg;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} category \r\n   * @param {string} newCategory \r\n   */\r\n  moveCategoryEntriesToNewCategory(category, newCategory, newName) {\r\n    if (this.hasCtg(category) || newName === true) {\r\n      this.store.forEach(entry => {\r\n        if (entry.category === category) {\r\n          entry.category = newCategory;\r\n        }\r\n      })\r\n      Store.setStore(this.store)\r\n    }\r\n    this.deleteCategory(category)\r\n    console.log(this.getEntriesByCtg('test'))\r\n  }\r\n  \r\n  removeCategoryAndEntries(category) {\r\n    if (this.hasCtg(category)) {\r\n      this.store = this.store.filter(entry => entry.category !== category);\r\n      Store.setStore(this.store)\r\n    }\r\n    this.deleteCategory(category)\r\n  }\r\n\r\n  setCategoryStatus(category, status) {\r\n    if (this.hasCtg(category)) {\r\n      this.ctg[category].active = status;\r\n      Store.setCtg(this.ctg)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} categoryName \r\n   * @param {string} color \r\n   * @desc updates the color of a category\r\n   */\r\n  updateCtgColor(categoryName, color) {\r\n    console.log(\"ran new color\")\r\n    if (this.hasCtg(categoryName)) {\r\n      this.ctg[categoryName].color = color;\r\n      Store.setCtg(this.ctg)\r\n    }\r\n  }\r\n\r\n  getCtgIndex(category) {\r\n    return Object.keys(this.ctg).indexOf(category);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} newName \r\n   * @param {string} newColor \r\n   * @param {string} oldName \r\n   * @returns new category object\r\n   * @desc note that 'value' @ [key, value] is necessary to segment the object, even if it is not directly referenced\r\n   */\r\n  updateCtg(newName, newColor, oldName) {\r\n    console.log('ran update everything')\r\n    let entries = Object.entries(this.ctg);\r\n    let hasColor = newColor !== null;\r\n    let count = 0;\r\n    let length = entries.length;\r\n\r\n    for (let [key, value] of entries) {\r\n      count++\r\n      if (count === 1) {\r\n        if (oldName === key) {\r\n          entries[0][0] = newName\r\n          if (hasColor) {\r\n            entries[0][1].color = newColor\r\n          }\r\n        }\r\n      } else {\r\n        if (oldName === key) {\r\n          entries[count - 1][0] = newName;\r\n          if (hasColor) {\r\n            entries[count - 1][1].color = newColor;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (entries.length !== length) {\r\n      console.error(\"something went wrong with category name/color change\")\r\n      return;\r\n    } else {\r\n      this.ctg = Object.fromEntries(entries);\r\n      this.moveCategoryEntriesToNewCategory(\r\n        oldName, \r\n        newName, \r\n        true\r\n      )\r\n      Store.setCtg(this.ctg)\r\n    }\r\n  }\r\n  /* ********************* */\r\n\r\n\r\n\r\n  /* ***************************** */\r\n  /*  KEYBOARD SHORTCUT MANAGEMENT */\r\n  getShortcuts() {\r\n    return this.keyboardShortcuts\r\n  }\r\n\r\n  setShortCut(shortcut) {\r\n    const keys = Object.keys(this.getShortcuts())\r\n    let idx = keys.indexOf(shortcut)\r\n    if (idx > -1) {\r\n      return `Shortcut (${shortcut}) is already in use`\r\n    } else {\r\n      return;   \r\n    }\r\n  }\r\n\r\n  setShortcutsStatus(status) {\r\n    this.keyboardShortcutsStatus = status\r\n    Store.setShortcutsStatus(status)\r\n  }\r\n\r\n  getShortcutsStatus() {\r\n    const status = Store.getShortcutsStatus()\r\n    return status !== null ? status : true;\r\n  }\r\n  /* ***************************** */\r\n\r\n\r\n  /* ******************** */\r\n  /*  OVERLAY MANAGEMENT */\r\n  // see readme @ --overlay management-- for more info\r\n  addActiveOverlay(overlay) {\r\n    this.activeOverlay.add(overlay);\r\n  }\r\n\r\n  removeActiveOverlay(overlay) {\r\n    const len = this.activeOverlay.size\r\n    if (len === 0) {\r\n      return;\r\n    } else if (this.activeOverlay.size === 1) {\r\n      this.activeOverlay = new Set();\r\n      return;\r\n    } else {\r\n      this.activeOverlay = new Set([...this.activeOverlay].filter((o) => o !== overlay));\r\n      return;\r\n    }\r\n  }\r\n\r\n  getActiveOverlay() {\r\n    return this.activeOverlay;\r\n  }\r\n\r\n  hasActiveOverlay() {\r\n    return this.activeOverlay.size > 0;\r\n  }\r\n  /* ******************** */\r\n\r\n\r\n\r\n\r\n  /* ************************ */\r\n  /*  JSON UPLOAD & DOWNLOAD */\r\n  validateUserUpload(userUpload) {\r\n    const keys = Object.keys(userUpload);\r\n    let message = {};\r\n    console.log(userUpload)\r\n    if (keys.length > localStoreKeyNames.length) {\r\n      message.err1 = \"invalid number of keys (too many)\"\r\n    }\r\n    \r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (!localStoreKeyNames.includes(keys[i])) {\r\n        let errname = \"err\" + Object.keys(message).length;\r\n        message[errname] = \"invalid key: \" + keys[i]\r\n      }\r\n    }\r\n\r\n    if (Object.keys(message).length > 0) {\r\n      return message;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  setUserUpload(userUpload) {\r\n    const validation = this.validateUserUpload(userUpload);\r\n    console.log(validation)\r\n    let validated;\r\n    if (validation === true) {\r\n      localStorage.clear()\r\n      validated = true;\r\n      for (const [key, value] of Object.entries(userUpload)) {\r\n        localStorage.setItem(key, value)\r\n        console.log(key)\r\n      }\r\n    } else {\r\n      return validation;\r\n    }\r\n    if (validated) {\r\n      const refresh = localStorage.getItem(\"refresh\");\r\n      if (refresh === null) {\r\n        window.location.reload();\r\n        window.localStorage.setItem(\"refresh\", \"1\");\r\n      }\r\n    }\r\n  }\r\n  \r\n  getUserUpload() {\r\n    return this.userUpload;\r\n  }\r\n  /* ************************ */\r\n\r\n\r\n\r\n  /* ******************************************* */\r\n  /*  STATE MANAGEMENT : RENDERING / RESET / RESIZE */\r\n  setFormRenderHandle(type, callback) {\r\n    this.handleRenders.calendars[type].render = callback;\r\n  }\r\n  \r\n  setFormResetHandle(type, callback) {\r\n    this.handleRenders.calendars[type].reset = callback;\r\n  }\r\n  \r\n  setRenderFormCallback(callback) {\r\n    this.handleRenders.form.callback = callback;\r\n  }\r\n  \r\n  setRenderSidebarCallback(callback) {\r\n    this.handleRenders.sidebar.callback = callback;\r\n  }\r\n\r\n  setResizeHandle(type, callback) {\r\n    this.handleRenders.calendars[type].resize = callback;\r\n  }\r\n\r\n  setDataReconfigCallback(callback) {\r\n    this.handleRenders.reconfig.callback = callback;\r\n  }\r\n\r\n  setResetDatepickerCallback(callback) {\r\n    this.handleRenders.datepicker.reset = callback;\r\n  }\r\n\r\n  setRenderCategoriesCallback(callback) {\r\n    this.handleRenders.categories.callback = callback;\r\n  }\r\n\r\n  getRenderCategoriesCallback() {\r\n    return this.handleRenders.categories.callback;\r\n  }\r\n\r\n  getResetDatepickerCallback() {\r\n    return this.handleRenders.datepicker.reset;\r\n  }\r\n\r\n  getDataReconfigCallback() {\r\n    return this.handleRenders.reconfig.callback;\r\n  }\r\n\r\n  getResizeHandle(type) {\r\n    if (this.handleRenders.calendars[type] === undefined) {\r\n      return null;\r\n    } else {\r\n      return this.handleRenders.calendars[type].resize;\r\n    }\r\n  }\r\n\r\n  getFormRenderHandle(type) {\r\n    if (this.handleRenders.calendars[type] === undefined) {\r\n      return null;\r\n    } else {\r\n      return this.handleRenders.calendars[type].render;\r\n    }\r\n  }\r\n  \r\n  getFormResetHandle(type) {\r\n    if (this.handleRenders.calendars[type] === undefined) {\r\n      return null;\r\n    } else {\r\n      return this.handleRenders.calendars[type].reset;\r\n    }\r\n  }\r\n\r\n  getRenderFormCallback() {\r\n    const callback = this.handleRenders.form.callback\r\n    if (callback !== null) {\r\n      return callback;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getRenderSidebarCallback() {\r\n    const callback = this.handleRenders.sidebar.callback;\r\n    if (callback !== null) {\r\n      return callback;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  /* ************************************ */\r\n}\r\n\r\n// single\r\nexport default new Store()","import { generateId } from \"../utilities/helpers\"\r\n\r\n/**\r\n * @class Entry\r\n * @param {String} id - Unique identifier\r\n * @param {String} title\r\n * @param {String} description\r\n * @param {Date} start\r\n * @param {Date} end\r\n * @param {String} category\r\n * @param {Boolean} completed\r\n */\r\nexport default class Entry {\r\n  constructor(category, completed, description, end, start, title) {\r\n    this.category = category;\r\n    this.completed = completed;\r\n    this.description = description;\r\n    this.end = end;\r\n    this.id = generateId();\r\n    this.start = start;\r\n    this.title = title;\r\n  }\r\n}\r\n\r\nclass CoordinateEntry {\r\n  constructor(category, completed, coordinates, description, id, title) {\r\n    this.category = category;\r\n    this.completed = completed || false;\r\n    this.coordinates = coordinates || {};\r\n    this.description = description;\r\n    this.id = id;\r\n    this.title = title;\r\n  }\r\n}\r\n\r\n/**\r\n * @class Week\r\n * \r\n * @param {Array} dayEntries\r\n * @description Array of entries that span a single day.\r\n * \r\n * @param {Array} allDayEntries\r\n * @description Array of entries that span multiple days.\r\n */\r\nclass Week {\r\n  constructor(dayEntries, allDayEntries) {\r\n    this.boxes = dayEntries;\r\n    this.boxesTop = allDayEntries;\r\n  }\r\n\r\n  setAllBoxes(tempEntries) {\r\n    this.boxes = tempEntries.day\r\n    this.boxesTop = tempEntries.allDay\r\n  }\r\n\r\n  addBox(box) {\r\n    this.boxes.push(box);\r\n  }\r\n\r\n  addBoxTop(box) {\r\n    this.boxesTop.push(box)\r\n  }\r\n\r\n  getBox(id) {\r\n    return this.boxes.find(box => box.id === id);\r\n  }\r\n\r\n  getBoxes() {\r\n    return this.boxes;\r\n  }\r\n\r\n  getBoxesTop() {\r\n    return this.boxesTop;\r\n  }\r\n\r\n  getLength() {\r\n    return this.boxes.length;\r\n  }\r\n\r\n  getBoxesByColumn(col) {\r\n    return this.boxes.filter(box => +box.coordinates.x == col);\r\n  }\r\n\r\n  getBoxesByColumnTop(col) {\r\n    return this.boxesTop.filter(box => +box.coordinates.x == col);\r\n  }\r\n\r\n  getBoxesTopByDay(day) {\r\n    return this.boxesTop.filter(box => +box.coordinates.y == day);\r\n  }\r\n\r\n  getBoxesTopLengths() {\r\n    return this.getBoxesTop().reduce((a, c) => {\r\n      let start = new Date(c.start)\r\n      if (a[start.getDay()]) {\r\n        a[start.getDay()]++\r\n      }\r\n      else {\r\n        a[start.getDay()] = 1\r\n      }\r\n      return a\r\n    }, {})\r\n  }\r\n\r\n  getColumnsWithMultipleBoxes() {\r\n    let temp = {}\r\n    let columns = []\r\n    for (const box of this.boxes) {\r\n      if (temp[box.coordinates.x]) {\r\n        temp[box.coordinates.x]++\r\n        if (temp[box.coordinates.x] === 2) {\r\n          columns.push(box.coordinates.x)\r\n        }\r\n      } else {\r\n        temp[box.coordinates.x] = 1\r\n      }\r\n    }\r\n    return columns\r\n  }\r\n\r\n  getEntriesByTitle(title) {\r\n    return this.boxes.filter(box => box.title.toLowerCase().includes(title.toLowerCase()));\r\n  }\r\n\r\n  updateCoordinates(id, coordinates) {\r\n    this.getBox(id).coordinates = coordinates;\r\n  }\r\n\r\n  sortByY(bxs) {\r\n    return bxs.sort((a, b) => +a.coordinates.y - +b.coordinates.y)\r\n  }\r\n\r\n  checkForCollision(col) {\r\n    const bxs = this.getBoxesByColumn(col)\r\n    const arr = []\r\n    let collisions = new Set()\r\n\r\n    for (const box of bxs) {\r\n      arr.push([box.coordinates.y, box.coordinates.e])\r\n    }\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      for (let j = i + 1; j < arr.length; j++) {\r\n        if (arr[i][1] > arr[j][0] && arr[i][0] < arr[j][1]) {\r\n          collisions.add(bxs[i])\r\n          collisions.add(bxs[j])\r\n        }\r\n      }\r\n    }\r\n    return this.sortByY([...collisions])\r\n  }\r\n\r\n  updateStore(store, id, weekArray) {\r\n    const boxEntry = this.getBox(id)\r\n    const coords = boxEntry.coordinates\r\n    let boxstart = +coords.y * 15\r\n    let boxend = +coords.e * 15\r\n    let day = weekArray[+coords.x]\r\n\r\n    const startDate = new Date(day)\r\n    const starthours = Math.floor(boxstart / 60)\r\n    const startminutes = boxstart % 60\r\n    startDate.setHours(starthours)\r\n    startDate.setMinutes(startminutes)\r\n\r\n    const endDate = new Date(day)\r\n    const endhours = Math.floor(boxend / 60)\r\n    const endminutes = boxend % 60\r\n    endDate.setHours(endhours)\r\n    endDate.setMinutes(endminutes)\r\n\r\n    store.updateEntry(id, {\r\n      start: startDate,\r\n      end: endDate,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @class Week\r\n * \r\n * @param {Array} dayEntries\r\n * @description Array of entries that span a single day.\r\n * \r\n * @param {Array} allDayEntries\r\n * @description Array of entries that span multiple days.\r\n */\r\nclass Day {\r\n  constructor(dayEntries, allDayEntries) {\r\n    this.boxes = dayEntries;\r\n    this.boxesTop = allDayEntries;\r\n  }\r\n\r\n  setAllBoxes(tempEntries) {\r\n    this.boxes = tempEntries.day\r\n    this.boxesTop = tempEntries.allDay\r\n  }\r\n\r\n  addBox(box) {\r\n    this.boxes.push(box);\r\n  }\r\n\r\n  addBoxTop(box) {\r\n    this.boxesTop.push(box)\r\n  }\r\n\r\n  getBox(id) {\r\n    return this.boxes.find(box => box.id === id);\r\n  }\r\n\r\n  getBoxes() {\r\n    return this.boxes;\r\n  }\r\n\r\n  getBoxesTop() {\r\n    return this.boxesTop;\r\n  }\r\n\r\n  getAllBoxes() {\r\n    return [...this.boxes, ...this.boxesTop]\r\n  }\r\n\r\n  getLength() {\r\n    return this.boxes.length;\r\n  }\r\n\r\n  getBoxesTopLengths() {\r\n    return this.getBoxesTop().reduce((a, c) => {\r\n      let start = new Date(c.start)\r\n      if (a[start.getDay()]) {\r\n        a[start.getDay()]++\r\n      }\r\n      else {\r\n        a[start.getDay()] = 1\r\n      }\r\n      return a\r\n    }, {})\r\n  }\r\n\r\n  getEntriesByTitle(title) {\r\n    return this.boxes.filter(box => box.title.toLowerCase().includes(title.toLowerCase()));\r\n  }\r\n\r\n  updateCoordinates(id, coordinates) {\r\n    this.getBox(id).coordinates = coordinates;\r\n  }\r\n\r\n  getEntriesEndingOnDay(day) {\r\n    return this.boxes.filter(box => +box.coordinates.e === day);\r\n  }\r\n\r\n  sortByY(bxs) {\r\n    return bxs.sort((a, b) => +a.coordinates.y - +b.coordinates.y)\r\n  }\r\n\r\n  checkForCollision() {\r\n    const bxs = this.getBoxes()\r\n    const arr = []\r\n    let collisions = new Set()\r\n\r\n    for (const box of bxs) {\r\n      arr.push([box.coordinates.y, box.coordinates.e])\r\n    }\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      for (let j = i + 1; j < arr.length; j++) {\r\n        if (arr[i][1] > arr[j][0] && arr[i][0] < arr[j][1]) {\r\n          collisions.add(bxs[i])\r\n          collisions.add(bxs[j])\r\n        }\r\n      }\r\n    }\r\n    return this.sortByY([...collisions])\r\n  }\r\n\r\n  updateStore(store, id) {\r\n    const boxEntry = this.getBox(id)\r\n    const coords = boxEntry.coordinates\r\n    let boxstart = +coords.y * 15\r\n    let boxend = +coords.e * 15\r\n\r\n    const startDate = new Date(boxEntry.start)\r\n    const starthours = Math.floor(boxstart / 60)\r\n    const startminutes = boxstart % 60\r\n    startDate.setHours(starthours)\r\n    startDate.setMinutes(startminutes)\r\n\r\n    const endDate = new Date(boxEntry.start)\r\n    let endhours = Math.floor(boxend / 60)\r\n    let endminutes = boxend % 60\r\n    if (endhours === 24) {\r\n      endhours = 23\r\n      endminutes = 59\r\n    }\r\n\r\n    endDate.setHours(endhours)\r\n    endDate.setMinutes(endminutes)\r\n\r\n    store.updateEntry(id, {\r\n      start: startDate,\r\n      end: endDate,\r\n    })\r\n  }\r\n}\r\n\r\nexport {\r\n  CoordinateEntry,\r\n  Week,\r\n  Day,\r\n}","class MonthBoxQuery {\r\n  constructor(flag) {\r\n    this.flag = flag;\r\n    this.tops = [16, 20];\r\n    this.heights = [14, 18];\r\n  }\r\n\r\n  updateFlag() {\r\n    this.flag = window.innerWidth <= 530 || window.innerHeight <= 470;\r\n  }\r\n\r\n  getFlag() {\r\n    return this.flag;\r\n  }\r\n\r\n  getTop() {\r\n    const [a, b] = this.tops;\r\n    return this.flag ? a : b;\r\n  }\r\n\r\n  getHeight() {\r\n    const [a, b] = this.heights;\r\n    return this.flag ? a : b;\r\n  }\r\n\r\n  getPrevTop(top) {\r\n    const [a, b] = this.tops;\r\n    return top === a ? b : a;\r\n  }\r\n}\r\n\r\nexport default MonthBoxQuery;","export default {\r\n  labels: {\r\n    monthsLong: [\r\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\r\n    ],\r\n    monthsShortLower: [\r\n      'jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'\r\n    ],\r\n    monthsLongLower: [\r\n      'january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'\r\n    ],\r\n    monthsShort: [\r\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n    ],\r\n    weekdaysLong: [\r\n      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\r\n    ],\r\n    weekdaysShort: [\r\n      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\r\n    ],\r\n    weekdaysNarrow: [\r\n      'S', 'M', 'T', 'W', 'T', 'F', 'S'\r\n    ],\r\n\r\n  },\r\n\r\n  /*\r\n    - the following are colors for calendar categories\r\n    - they are optimized for dark modes \r\n\r\n  */\r\n  colors: {\r\n    red: {\r\n      1: '#DF2A79',\r\n      2: '#A51955',\r\n      3: '#73113C',\r\n      4: '#C20000',\r\n      5: '#9D0000',\r\n      6: '#690000',\r\n      7: '#460000',\r\n    },\r\n\r\n    orange: { \r\n      1: '#EE756A',\r\n      2: '#E84334',\r\n      3: '#E77C2B',\r\n      4: '#D56A18',\r\n      5: '#954A11',\r\n      6: '#6B350C',\r\n      7: '#402007',\r\n    },\r\n    \r\n    green: {\r\n      1: '#1E9E98',\r\n      2: '#1A8A84',\r\n      3: '#167671',\r\n      4: '#115855',\r\n      5: '#0F4E4B',\r\n      6: '#09312F',\r\n      7: '#072726',\r\n    },\r\n    \r\n    blue: { \r\n      1: '#14489A',\r\n      2: '#125ab8',\r\n      3: '#5578D7',\r\n      4: '#2C52BA',\r\n      5: '#234295',\r\n      6: '#1B3375',\r\n      7: '#142555',\r\n    },\r\n\r\n    purple: {\r\n      1: '#42338B',\r\n      2: '#513FAB',\r\n      3: '#614E7A',\r\n      4: '#604793',\r\n      5: '#49356F',\r\n      6: '#342650',\r\n      7: '#271D3C',\r\n    },\r\n\r\n    grey: {\r\n      1: '#858F93',\r\n      2: '#4D5458',\r\n      3: '#272B2C',\r\n      4: '#202B31',\r\n      5: '#2C3C44',\r\n      6: '#384C56',\r\n      7: '#516C7B',\r\n    },\r\n  },\r\n}","export default {\r\n  0: { shortcut: '0', action: \"change app theme\" },\r\n  1: { shortcut: ['d', '1'], action: 'open day view' },\r\n  2: { shortcut: ['w', '2'], action: 'open week view' },\r\n  3: { shortcut: ['m', '3'], action: 'open month view' },\r\n  4: { shortcut: ['y', '4'], action: 'open year view' },\r\n  5: { shortcut: ['l', '5'], action: 'open list view' },\r\n  6: { shortcut: 'v', action: 'toggle view options' },\r\n  7: { shortcut: 't', action: 'set date to today' },\r\n  8: { shortcut: \"g\", action: 'enter date manually' },\r\n  9: { shortcut: \"n\", action: '(week/day) next month.' },\r\n  10: {shortcut: \"p\", action: '(week/day) previous month.'},\r\n  11: {shortcut: \"←\", action: 'previous period.'},\r\n  12: {shortcut: \"→\", action: 'next period.'},\r\n  13: { shortcut: 's', action: 'toggle sidebar' },\r\n  14: { shortcut: 'f', action: 'open form' },\r\n  15: { shortcut: '+', action: 'open new category form' },\r\n  16: { shortcut: 'a', action: 'open settings' },\r\n  17: { shortcut: ['/', '?'], action: 'open keyboard shortcuts' },\r\n  18: { shortcut: \"esc\", action: 'return to calendar' },\r\n}","import { formatTime, formatStartEndTimes } from \"./timeutils\"\r\nimport locales from \"../locales/en\"\r\nconst labels = locales.labels;\r\nconst monthNames = labels.monthsShort\r\n\r\nexport default function createDate(year, month, day) {\r\n  const pad = (num) => { return num < 10 ? `0${num}` : num; }\r\n  Date.prototype.toCustomISO = function () {\r\n    return this.getFullYear() +\r\n      '-' + pad(this.getMonth() + 1) +\r\n      '-' + pad(this.getDate()) +\r\n      'T' + pad(this.getHours()) +\r\n      ':' + pad(this.getMinutes()) +\r\n      ':' + pad(this.getSeconds()) +\r\n      '.' + (this.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\r\n      'Z';\r\n  }\r\n  if (!year && !month && !day) {\r\n    return new Date().toCustomISO()\r\n  } else {\r\n    return new Date(year, month, day, 0, 0, 0, 0).toCustomISO().slice(0, 10)\r\n  }\r\n}\r\n\r\nfunction testDate(date) {\r\n  return date instanceof Date && !isNaN(date) ? date : new Date(date)\r\n}\r\n\r\nfunction getDateFormatted(date) {\r\n  date = testDate(date)\r\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\r\n}\r\n\r\nfunction getDateForStore(date) {\r\n  date = testDate(date)\r\n  return `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`\r\n}\r\n\r\nfunction formatDateForDisplay(date) {\r\n  date = testDate(date)\r\n  const month = locales.labels.monthsShort[date.getMonth()]\r\n  const day = date.getDate()\r\n  let hours = date.getHours()\r\n  let minutes = date.getMinutes()\r\n  hours = hours < 10 ? `0${hours}` : hours\r\n  minutes = minutes < 10 ? `0${minutes}` : minutes\r\n  let hm = `${hours}:${minutes}`\r\n  return `${month} ${day} ${date.getFullYear()}, (${hm}) `\r\n}\r\n\r\nfunction compareDates(date1, date2) {\r\n  [date1, date2] = [testDate(date1), testDate(date2)]\r\n  return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate()\r\n}\r\n\r\nfunction formatDuration(seconds) {\r\n  let time = { year: 31536000, day: 86400, hour: 3600},\r\n    res = [];\r\n  if (seconds === 0) return 'now';\r\n  for (let key in time) {\r\n    if (seconds >= time[key]) {\r\n      let val = Math.floor(seconds / time[key]);\r\n      res.push(val += val > 1 ? ' ' + key + 's' : ' ' + key);\r\n      seconds = seconds % time[key];\r\n    }\r\n  }\r\n  return res.length > 1 ? res.join(', ').replace(/,([^,]*)$/, ' &' + '$1') : res[0]\r\n}\r\n\r\nfunction formatStartEndDate(start, end, flag) {\r\n  [start, end] = [testDate(start), testDate(end)]\r\n\r\n  const [startday, startmonth, startyear] = [\r\n    start.getDate(),\r\n    monthNames[start.getMonth()],\r\n    start.getFullYear()\r\n  ]\r\n\r\n  const [endday, endmonth, endyear] = [\r\n    end.getDate(),\r\n    monthNames[end.getMonth()],\r\n    end.getFullYear()\r\n  ]\r\n\r\n  let tempstartyear = startyear;\r\n  let tempendyear = endyear;\r\n  if (flag) {\r\n    tempstartyear = startyear.toString().slice(2, 4);\r\n    tempendyear = endyear.toString().slice(2, 4);\r\n  }\r\n\r\n  if (startyear === endyear) {\r\n    if (startmonth === endmonth) {\r\n      if (startday === endday) {\r\n        // same : day, month, year\r\n        return `${startmonth} ${startday} ${startyear}`\r\n      } else {\r\n        // same : month, year\r\n        return `${startmonth} ${startday} – ${endday}, ${startyear}`\r\n      }\r\n    } else {\r\n      // same : year\r\n      return `${startmonth} ${startday} – ${endmonth} ${endday}, ${startyear}`\r\n    }\r\n  } else {\r\n    // same : nothing\r\n    return `${startmonth} ${startday}, ${tempstartyear} – ${endmonth} ${endday}, ${tempendyear}`\r\n  }\r\n}\r\n\r\nfunction formatStartEndTime(start, end) {\r\n  [start, end] = [new Date(start), new Date(end)]\r\n\r\n  let startmin = start.getMinutes()\r\n  let endmin = end.getMinutes()\r\n  endmin = endmin % 15 === 0 ? endmin : endmin + (15 - (endmin % 15))\r\n  startmin = startmin % 15 === 0 ? startmin : startmin + (15 - (startmin % 15))\r\n  let starttime = formatTime(start.getHours(), startmin)\r\n  let endtime = formatTime(end.getHours(), endmin)\r\n  if (starttime.slice(-2) === endtime.slice(-2)) {\r\n    starttime = starttime.slice(0, -2)\r\n  }\r\n\r\n  return `${starttime} – ${endtime}`\r\n}\r\n\r\nfunction getDuration(start, end) {\r\n  [start, end] = [new Date(start), new Date(end)]\r\n\r\n  const duration = formatDuration((Math.floor(end.getTime() / 1000)) - (Math.floor(start.getTime() / 1000)))\r\n  if (duration === undefined) {\r\n    return \"completed\"\r\n  } else {\r\n    return duration\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction createDateFromFormattedString(dateString) {\r\n  const dateArray = dateString.split(\"-\")\r\n  // if (flag) {\r\n  //   return new Date(dateArray[0], dateArray[1], dateArray[2])\r\n  // }\r\n  return new Date(dateArray[0], dateArray[1] - 1, dateArray[2])\r\n}\r\n\r\nfunction isBeforeDate(date1, date2) {\r\n  [date1, date2] = [new Date(date1), new Date(date2)]\r\n  return date1.getTime() < date2.getTime()\r\n}\r\n\r\nfunction isDate(value) {\r\n  return value instanceof Date && !isNaN(value);\r\n}\r\n\r\nfunction getDateFromAttribute(target, attribute, view) {\r\n  return target.getAttribute(attribute).split(\"-\").map((x, i) => {\r\n    if (view === \"month\") {\r\n      return i === 1 ? parseInt(x) - 1 : parseInt(x)\r\n    } else {\r\n      return parseInt(x)\r\n    }\r\n  })\r\n}\r\n\r\nfunction getTimeFromAttribute(target, attribute) {\r\n  return target.getAttribute(attribute).split(\":\").map((x) => {\r\n    return parseInt(x);\r\n  })\r\n}\r\n\r\nfunction getDateTimeFormatted(date, hour, minute) {\r\n  date = testDate(date)\r\n  return new Date(\r\n    date.getFullYear(),\r\n    date.getMonth(),\r\n    date.getDate(),\r\n    parseInt(hour),\r\n    parseInt(minute),\r\n    1,\r\n    1,\r\n  )\r\n}\r\n\r\nfunction getTempDates(tempdate, hours, minutes) {\r\n  tempdate = testDate(tempdate);\r\n  return [\r\n    getDateTimeFormatted(tempdate, hours[0], minutes[0]),\r\n    getDateTimeFormatted(tempdate, hours[1], minutes[1]),\r\n  ];\r\n}\r\n\r\nfunction generateTempStartEnd(data) {\r\n  let tempdate = new Date()\r\n\r\n  const [year, month, day] = data\r\n  let startDate = new Date(year, month, day)\r\n  startDate.setHours(tempdate.getHours())\r\n  startDate.setMinutes(0)\r\n\r\n  let endDate = new Date(startDate)\r\n  endDate.setHours(tempdate.getHours())\r\n  endDate.setMinutes(30)\r\n\r\n  return [startDate, endDate];\r\n}\r\n\r\nfunction getFormDateObject(start, end) {\r\n  [start, end] = [testDate(start), testDate(end)]\r\n\r\n  const setmin = min => min === 0 ? \"00\" : min;\r\n  return {\r\n    dateObj: [start, end],\r\n    minutes: [setmin(start.getMinutes()), setmin(end.getMinutes())],\r\n    formatted: [getDateForStore(start), getDateForStore(end)],\r\n  }\r\n}\r\n\r\nfunction sortDates(dates, dir) {\r\n  return dates.sort((a, b) => {\r\n    let [date1, date2] = [new Date(a), new Date(b)];\r\n    if (dir === \"asc\") {\r\n      return date1 - date2;\r\n    } else {\r\n      return date2 - date1;\r\n    }\r\n  })\r\n}\r\n\r\nfunction getDurationSeconds(date1, date2) {\r\n  return (Math.floor(date2.getTime() / 1000)) - (Math.floor(date1.getTime() / 1000))\r\n}\r\n\r\nfunction formatEntryOptionsDate(date1, date2) {\r\n  let [y1, y2] = [date1.getFullYear(), date2.getFullYear()];\r\n  let [m1, m2] = [date1.getMonth(), date2.getMonth()];\r\n  let [d1, d2] = [date1.getDate(), date2.getDate()];\r\n  let [h1, h2] = [date1.getHours(), date2.getHours()];\r\n  let [min1, min2] = [date1.getMinutes(), date2.getMinutes()]\r\n  // if same day, month, & year -- return time as start-end\r\n  // otherwise, return time as duration between start & end\r\n  if (y1 === y2) {\r\n    if (m1 === m2) {\r\n      if (d1 === d2) {\r\n        // === year, month, day\r\n        return {\r\n          date: `${labels.monthsLong[m1]} ${d1}, ${y1} (${formatStartEndTimes([h1, h2], [min1, min2])})`,\r\n          time: null,\r\n        }\r\n      } else {\r\n        // === year, month\r\n        let duration = getDurationSeconds(date1, date2)\r\n        return {\r\n          date: `${labels.monthsLong[m1]} ${d1} – ${d2}, ${y1}`,\r\n          time: formatDuration(duration),\r\n        }\r\n      }\r\n    } else {\r\n      // === year\r\n      let duration = getDurationSeconds(date1, date2)\r\n      return {\r\n        date: `${labels.monthsShort[m1]} ${d1} – ${labels.monthsShort[m2]} ${d2}, ${y2}`,\r\n        time: formatDuration(duration),\r\n      }\r\n    }\r\n  } else {\r\n    // different year --- return full date\r\n    let duration = getDurationSeconds(date1, date2)\r\n    return {\r\n      date: `${labels.monthsShort[m1]} ${d1}, ${y1} – ${labels.monthsShort[m2]} ${d2}, ${y2}`,\r\n      time: formatDuration(duration),\r\n    }\r\n  }\r\n}\r\n\r\nfunction createTimestamp() {\r\n  const date = new Date();\r\n  const year = date.getFullYear().toString().slice(-2);\r\n  const month = monthNames[date.getMonth()].toUpperCase();\r\n  const day = parseInt(date.getDate());\r\n  return `${month}${day}`\r\n  // return `${date.getFullYear()}${date.getMonth()}${date.getDate()}${date.getHours()}${date.getMinutes()}`;\r\n}\r\n\r\nfunction longerThanDay(date1, date2) {\r\n  return getDurationSeconds(date1, date2) > 86400;\r\n}\r\n\r\nexport {\r\n  testDate,\r\n  getDateFormatted,\r\n  getDateForStore,\r\n  formatDateForDisplay,\r\n  compareDates,\r\n  createDateFromFormattedString,\r\n  formatStartEndDate,\r\n  formatStartEndTime,\r\n  getDuration,\r\n  isBeforeDate,\r\n  isDate,\r\n  getDateFromAttribute,\r\n  getTimeFromAttribute,\r\n  getDateTimeFormatted,\r\n  getTempDates,\r\n  generateTempStartEnd,\r\n  getFormDateObject,\r\n  sortDates,\r\n  formatEntryOptionsDate,\r\n  getDurationSeconds,\r\n  createTimestamp,\r\n  longerThanDay,\r\n}","import calcTime from \"./timeutils\"\r\n\r\n/**\r\n * For a full explanation see readme @grid-engines\r\n * \r\n * The weekiew & dayview drag/resize systems are 90% similar with the only difference of course being some additional calculations to drag between days in the weekview.\r\n * \r\n * \r\n * All drag / resize events throughout each view follow these steps;\r\n * -- capture :\r\n * document.onmousedown captures the position of cursor & defines variables for start/end points\r\n * \r\n * -- relay :\r\n * document.onmousemove relays the new position to start/end point variables, which in turn relay a new set of styling rules to the element target (entry) \r\n * \r\n * -- render :\r\n * document.onmouseup intitiates all render logic\r\n * \r\n * \r\n * \r\n */\r\n\r\n\r\nconst identifiers = {\r\n  boxnumarr: {\r\n    week: [\r\n      'box-one', 'box-two', 'box-three',\r\n      'box-four', 'box-five', 'box-six',\r\n      'box-seven', 'box-eight', 'box-nine',\r\n      'box-ten',\r\n    ],\r\n    day: [\r\n      'dv-box-one', 'dv-box-two', 'dv-box-three',\r\n      'dv-box-four', 'dv-box-five', 'dv-box-six',\r\n      'dv-box-seven', 'dv-box-eight', 'dv-box-nine',\r\n    ],\r\n  },\r\n\r\n  boxClasses: {\r\n    week: {\r\n      base: \"box\",\r\n      ontop: \"box-ontop\",\r\n      active: \"box-mv-dragactive\",\r\n      temporary: \"temporary-box\",\r\n      prepend: \"box-\",\r\n\r\n    },\r\n    day: {\r\n      base: \"dv-box\",\r\n      ontop: \"dv-box-ontop\",\r\n      active: \"dv-box-mv-dragactive\",\r\n      temporary: \"dv-temporary-box\",\r\n      prepend: \"dv-box-\",\r\n    },\r\n  },\r\n\r\n  boxAttributes: {\r\n    week: {\r\n      updatecoord: [\r\n        \"data-box-id\",\r\n        \"data-start-time\",\r\n        \"data-time-intervals\"\r\n      ],\r\n      dataIdx: \"box-idx\",\r\n      dataId: \"data-box-id\",\r\n      dataCol: \"data-box-col\",\r\n      prepend: \"data-\",\r\n      prepentwo: \"data-wv-\"\r\n    },\r\n    day: {\r\n      updatecoord: [\r\n        \"data-dv-box-id\",\r\n        \"data-dv-start-time\",\r\n        \"data-dv-time-intervals\",\r\n      ],\r\n      dataIdx: \"data-dv-box-index\",\r\n      dataId: \"data-dv-box-id\",\r\n      prepend: \"data-dv-\",\r\n      prepentwo: \"data-dv-\"\r\n    },\r\n  },\r\n\r\n  styles: {\r\n    newBox: {\r\n      left: \"calc((100% - 0px) * 0 + 0px)\",\r\n      height: \"12.5px\",\r\n      width: \"calc((100% - 4px) * 1)\",\r\n    }\r\n  }\r\n}\r\n\r\nfunction calcNewLeft(index) {\r\n  let base = 0.1;\r\n  let add = 0.05;\r\n\r\n  if (index === 0) {\r\n    return 0;\r\n  }\r\n\r\n  if (index >= 1 && index <= 5) {\r\n    return (index * add) + base;\r\n  }\r\n}\r\n\r\nfunction setBoxWidth(box, prepend, dataidx) {\r\n  const attr = box.getAttribute(dataidx);\r\n\r\n  switch (attr) {\r\n    case `${prepend}one`:\r\n      box.style.left = 'calc((100% - 0px) * 0 + 0px)';\r\n      box.style.width = \"calc((100% - 4px) * 1)\"\r\n      break;\r\n    case `${prepend}two`:\r\n      box.style.left = \"calc((100% - 0px) * 0.1 + 0px)\"\r\n      box.style.width = \"calc((100% - 4px) * 0.9)\";\r\n      break;\r\n    case `${prepend}three`:\r\n      box.style.left = \"calc((100% - 0px) * 0.15 + 0px)\"\r\n      box.style.width = \"calc((100% - 4px) * 0.85)\";\r\n      break;\r\n    case `${prepend}four`:\r\n      box.style.left = \"calc((100% - 0px) * 0.35 + 0px)\"\r\n      box.style.width = \"calc((100% - 4px) * 0.65)\"\r\n      break;\r\n    case `${prepend}five`:\r\n      box.style.left = \"calc((100% - 0px) * 0 + 0px)\"\r\n      box.style.width = \"calc((100% - 4px) * 0.34)\"\r\n      break;\r\n    case `${prepend}six`:\r\n      box.style.left = \"calc((100% - 0px) * 0.05 + 0px)\"\r\n      box.style.width = \"calc((100% - 4px) * 0.4)\"\r\n      break;\r\n    case `${prepend}seven`:\r\n      box.style.left = \"calc((100% - 0px) * 0.1 + 0px)\"\r\n      box.style.width = \"calc((100% - 4px) * 0.38)\"\r\n      break;\r\n    case `${prepend}eight`:\r\n      box.style.left = \"calc((100% - 0px) * 0.1)\"\r\n      box.style.width = \"calc((100% - 4px) * 0.4)\"\r\n      break;\r\n    case `${prepend}nine`:\r\n      box.style.left = \"calc((100% - 0px) * 0.3)\"\r\n      box.style.width = \"calc((100% - 4px) * 0.7)\"\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction handleOverlap(col, view, boxes) {\r\n  const collisions = view === \"day\" ? boxes.checkForCollision() : boxes.checkForCollision(col);\r\n\r\n  const identifyBox = identifiers.boxnumarr[view]\r\n\r\n  const [baseClass, classPrepend] = [\r\n    identifiers.boxClasses[view],\r\n    identifiers.boxClasses[view].prepend,\r\n  ]\r\n\r\n  const [boxIdxAttr, boxIdAttr] = [\r\n    identifiers.boxAttributes[view].dataIdx,\r\n    identifiers.boxAttributes[view].dataId,\r\n  ]\r\n\r\n  for (let i = 0; i < collisions.length; i++) {\r\n    const box = document.querySelector(`[${boxIdAttr}=\"${collisions[i].id}\"]`)\r\n    if (i === 0) {\r\n      box.setAttribute(\"class\", `${baseClass.base} ${identifyBox[i]}`)\r\n      box.setAttribute(boxIdxAttr, identifyBox[i])\r\n    } else {\r\n      box.setAttribute(\"class\", `${baseClass.base} ${baseClass.ontop} ${identifyBox[i]}`)\r\n      box.setAttribute(boxIdxAttr, identifyBox[i])\r\n    }\r\n    setBoxWidth(box, classPrepend, boxIdxAttr)\r\n  }\r\n}\r\n\r\nfunction setStylingForEvent(clause, wrapper, store) {\r\n  const sidebar = document.querySelector(\".sidebar\")\r\n  const resizeoverlay = document.querySelector(\".resize-overlay\")\r\n\r\n  switch (clause) {\r\n    case \"dragstart\":\r\n      // console.log(wrapper.offsetLeft)\r\n\r\n      if (!sidebar.classList.contains(\"hide-sidebar\")) {\r\n        if (wrapper.offsetLeft === 0) {\r\n          sidebar.classList.add(\"sidebar--dragged-over\")\r\n        }\r\n      }\r\n\r\n      store.addActiveOverlay(\"hide-resize-overlay\");\r\n      resizeoverlay.classList.remove(\"hide-resize-overlay\");\r\n      if (!wrapper.classList.contains(\"monthview--calendar\")) {\r\n        document.body.style.cursor = \"move\";\r\n      }\r\n      break;\r\n    case \"dragend\":\r\n      store.removeActiveOverlay(\"hide-resize-overlay\")\r\n      sidebar.classList.remove(\"sidebar--dragged-over\")\r\n      resizeoverlay.classList.add(\"hide-resize-overlay\")\r\n      document.body.style.cursor = \"default\"\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction updateBoxCoordinates(box, view, boxes) {\r\n  let [id, y, h] = identifiers.boxAttributes[view].updatecoord.map((x) => {\r\n    return box.getAttribute(x)\r\n  })\r\n  let x = view === \"week\" ? box.getAttribute(\"data-box-col\") : 1;\r\n  boxes.updateCoordinates(id, {\r\n    x: parseInt(x),\r\n    y: parseInt(y),\r\n    h: parseInt(h),\r\n    e: parseInt(y) + parseInt(h),\r\n  })\r\n}\r\n\r\nfunction setBoxTimeAttributes(box, view) {\r\n  let start = +box.style.top.split(\"px\")[0]\r\n  start = start >= 0 ? start / 12.5 : 0\r\n  let length = +box.style.height.split(\"px\")[0] / 12.5\r\n  let end = start + length\r\n  let prepend = identifiers.boxAttributes[view].prepend\r\n  box.setAttribute(`${prepend}start-time`, start)\r\n  box.setAttribute(`${prepend}time-intervals`, length)\r\n  box.setAttribute(`${prepend}end-time`, end)\r\n}\r\n\r\nfunction createBox(col, entry, view, color) {\r\n  const baseClass = identifiers.boxClasses[view].base;\r\n  const attrPrepend = identifiers.boxAttributes[view].prepend;\r\n  const attrPrependTwo = identifiers.boxAttributes[view].prependtwo;\r\n  const coord = entry.coordinates\r\n  \r\n  const box = document.createElement('div');\r\n  box.classList.add(baseClass);\r\n  box.style.backgroundColor = color;\r\n  box.style.top = `${+coord.y * 12.5}px`;\r\n  box.style.height = `${+coord.h * 12.5}px`;\r\n  box.style.left = 'calc((100% - 0px) * 0 + 0px)';\r\n  box.style.width = \"calc((100% - 4px) * 1)\"\r\n\r\n  const boxheader = document.createElement('div');\r\n  boxheader.classList.add(`${baseClass}__header`);\r\n  const entryTitle = document.createElement('div');\r\n  entryTitle.classList.add(`${baseClass}-title`);\r\n  entryTitle.textContent = entry.title;\r\n  boxheader.appendChild(entryTitle);\r\n\r\n  const boxcontent = document.createElement('div');\r\n  boxcontent.classList.add(`${baseClass}__content`);\r\n  const entryTime = document.createElement('span');\r\n  entryTime.classList.add(`${baseClass}-time`)\r\n  boxcontent.appendChild(entryTime);\r\n\r\n  const resizehandleS = document.createElement('div');\r\n  resizehandleS.classList.add(`${baseClass}-resize-s`)\r\n\r\n  if (col.getAttribute(`${attrPrependTwo}top`) === \"true\") {\r\n    box.setAttribute(`${attrPrependTwo}start`, coord.x)\r\n    box.setAttribute(`${attrPrependTwo}end`, coord.x2)\r\n  } else {\r\n    box.setAttribute(`${attrPrepend}start-time`, coord.y)\r\n    box.setAttribute(`${attrPrepend}time-intervals`, coord.h)\r\n    box.setAttribute(`${attrPrepend}end-time`, +coord.y + +coord.h)\r\n    if (view === \"week\") {\r\n      box.setAttribute(\"data-box-col\", coord.x)\r\n      box.setAttribute(\"box-idx\", 1)\r\n    } else {\r\n      box.setAttribute(\"data-dv-box-index\", 1)\r\n    }\r\n    entryTime.textContent = calcTime(coord.y, +coord.h)\r\n  }\r\n\r\n  box.setAttribute(`${attrPrepend}box-id`, entry.id)\r\n  box.setAttribute(`${attrPrepend}box-category`, entry.category)\r\n  box.append(boxheader, boxcontent, resizehandleS)\r\n  col.appendChild(box);\r\n}\r\n\r\nfunction createTemporaryBox(box, col, hasSibling, view) {\r\n  const clone = box.cloneNode(true)\r\n  clone.classList.add(`${identifiers.boxClasses[view].temporary}`)\r\n  if (hasSibling) {\r\n    col.insertBefore(clone, box.nextElementSibling)\r\n  } else {\r\n    col.appendChild(clone)\r\n  }\r\n}\r\n\r\nfunction getBoxDefaultStyle(y, backgroundColor) {\r\n  const style = identifiers.styles.newBox\r\n  return `top:${y}px; left:${style.left}; height:${style.height}; width:${style.width}; background-color:${backgroundColor};`\r\n}\r\n\r\nfunction resetStyleOnClick(view, box) {\r\n  box.setAttribute(\"class\", identifiers.boxClasses[view].base)\r\n  box.style.left = 'calc((100% - 0px) * 0 + 0px)';\r\n  box.style.width = \"calc((100% - 4px) * 1)\"\r\n}\r\n\r\nfunction createTempBoxHeader(view) {\r\n  const baseClass = identifiers.boxClasses[view].base\r\n  const boxheader = document.createElement('div');\r\n  const boxtitle = document.createElement('div');\r\n  boxheader.classList.add(`${baseClass}__header`);\r\n  boxtitle.classList.add(`${baseClass}-title`);\r\n  boxtitle.textContent = \"(no title)\";\r\n  boxheader.appendChild(boxtitle)\r\n  return boxheader\r\n}\r\n\r\nfunction startEndDefault(y) {\r\n  let tempstarthour = Math.floor((y / 12.5) / 4);\r\n  let tempstartmin = Math.floor((y / 12.5) % 4) * 15;\r\n  return [\r\n    tempstarthour,        // start hour\r\n    tempstartmin,         // start minute\r\n    tempstarthour,        // end hour\r\n    +tempstartmin + 15    // end minute\r\n  ];\r\n}\r\n\r\nfunction calcNewHourFromCoords(h, y) {\r\n  return Math.floor(((h + y) / 12.5) / 4)\r\n}\r\n\r\nfunction calcNewMinuteFromCoords(h, y) {\r\n  return Math.floor(((h + y) / 12.5) % 4) * 15\r\n}\r\n\r\nfunction calcDateOnClick(date, start, length) {\r\n  let [startDate, endDate] = [new Date(date), new Date(date)];\r\n  startDate.setHours(Math.floor(+start / 4));\r\n  startDate.setMinutes((+start * 15) % 60);\r\n  endDate.setHours(Math.floor((start + length) / 4));\r\n  endDate.setMinutes(((start + length) * 15) % 60);\r\n  return [startDate, endDate];\r\n}\r\n\r\nfunction getOriginalBoxObject(box) {\r\n  return { \r\n    height: box.style.height,\r\n    left: box.style.left,\r\n    width: box.style.width,\r\n    class: box.getAttribute(\"class\"),\r\n  }\r\n}\r\n\r\nfunction resetOriginalBox(box, boxorig) {\r\n  box.setAttribute(\"class\", boxorig.class)\r\n  box.style.left = boxorig.left;\r\n  box.style.width = boxorig.width;\r\n}\r\n\r\nexport default handleOverlap\r\nexport {\r\n  setStylingForEvent,\r\n  updateBoxCoordinates,\r\n  setBoxTimeAttributes,\r\n  createBox,\r\n  createTemporaryBox,\r\n  getBoxDefaultStyle,\r\n  resetStyleOnClick,\r\n  createTempBoxHeader,\r\n  startEndDefault,\r\n  calcNewHourFromCoords,\r\n  calcNewMinuteFromCoords,\r\n  calcDateOnClick,\r\n  getOriginalBoxObject,\r\n  resetOriginalBox\r\n}","/**\r\n * \r\n * @param {callback} func \r\n * @param {number} limit \r\n * @returns strict debounce \r\n */\r\nfunction debounce(func, limit) {\r\n  let timeoutId;\r\n  return function (...args) {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => func.apply(this, args), limit)\r\n  }\r\n}\r\n/**\r\n * \r\n * @param {*} e \r\n * @param {*} element \r\n * \r\n * With the exception of popup modals, all events in the app\r\n * are delegated from their parent element.\r\n */\r\nfunction getClosest(e, element) {\r\n  return e.target.closest(element)\r\n}\r\n\r\nfunction hextorgba(hex, alpha) {\r\n  let r = 0, g = 0, b = 0, a = alpha;\r\n  r = \"0x\" + hex[1] + hex[2];\r\n  g = \"0x\" + hex[3] + hex[4];\r\n  b = \"0x\" + hex[5] + hex[6];\r\n  return \"rgba(\" + +r + \",\" + +g + \",\" + +b + \",\" + a + \")\";\r\n}\r\n\r\nfunction generateId() {\r\n  return Date.now().toString(36) + Math.random().toString(36).substring(2)\r\n}\r\n\r\nconst throttle = (fn, wait) => {\r\n  let inThrottle, lastFn, lastTime;\r\n  return function() {\r\n    const context = this,\r\n      args = arguments;\r\n    if (!inThrottle) {\r\n      fn.apply(context, args);\r\n      lastTime = Date.now();\r\n      inThrottle = true;\r\n    } else {\r\n      clearTimeout(lastFn);\r\n      lastFn = setTimeout(function() {\r\n        if (Date.now() - lastTime >= wait) {\r\n          fn.apply(context, args);\r\n          lastTime = Date.now();\r\n        }\r\n      }, Math.max(wait - (Date.now() - lastTime), 0));\r\n    }\r\n  };\r\n};\r\n\r\nfunction setTheme(context) {\r\n  const appBody = document.querySelector(\".body\");\r\n  const colorSchemeMeta = document.getElementsByName(\"color-scheme\")[0];\r\n  const currentScheme = context.getColorScheme();\r\n  const hasLightMode = appBody.classList.contains(\"light-mode\");\r\n  const hasContrastMode = appBody.classList.contains(\"contrast-mode\");\r\n\r\n  const setColorSchema = () => {\r\n    if (currentScheme === \"light\" && hasLightMode && !hasContrastMode) {\r\n      return;\r\n    } else if (currentScheme === \"dark\" && !hasLightMode && !hasContrastMode) {\r\n      return;\r\n    } else if (currentScheme === \"contrast\" && hasContrastMode && !hasLightMode) {\r\n      return;\r\n    }\r\n\r\n    const darkicon = document.querySelector(\".sbti-one\")\r\n    const lighticon = document.querySelector(\".sbti-two\")\r\n    const contrasticon = document.querySelector(\".sbti-three\")\r\n\r\n    const setlight = () => {\r\n      context.setColorScheme(\"light\")\r\n      colorSchemeMeta.setAttribute(\"content\", \"light\");\r\n\r\n      appBody.classList.remove(\"contrast-mode\")\r\n      appBody.classList.add(\"light-mode\");\r\n\r\n      lighticon.classList.remove(\"sb-theme-icon-hide\")\r\n      darkicon.classList.add(\"sb-theme-icon-hide\")\r\n      contrasticon.classList.add(\"sb-theme-icon-hide\")\r\n    }\r\n\r\n    const setdark = () => {\r\n      context.setColorScheme(\"dark\")\r\n      colorSchemeMeta.setAttribute(\"content\", \"dark light\");\r\n\r\n      appBody.classList.remove(\"light-mode\");\r\n      appBody.classList.remove(\"contrast-mode\")\r\n\r\n      darkicon.classList.remove(\"sb-theme-icon-hide\")\r\n      contrasticon.classList.add(\"sb-theme-icon-hide\")\r\n      lighticon.classList.add(\"sb-theme-icon-hide\")\r\n    }\r\n\r\n    const setcontrast = () => {\r\n      context.setColorScheme(\"contrast\")\r\n      colorSchemeMeta.setAttribute(\"content\", \"dark\");\r\n\r\n      appBody.classList.remove(\"light-mode\");\r\n      appBody.classList.add(\"contrast-mode\")\r\n\r\n      contrasticon.classList.remove(\"sb-theme-icon-hide\")\r\n      darkicon.classList.add(\"sb-theme-icon-hide\")\r\n      lighticon.classList.add(\"sb-theme-icon-hide\")\r\n    }\r\n\r\n\r\n    if (currentScheme === \"light\") {\r\n      setlight()\r\n      return;\r\n    } \r\n\r\n    if (currentScheme === \"contrast\") {\r\n      setcontrast()\r\n      return;\r\n    }\r\n\r\n    if (currentScheme === \"dark\") {\r\n      setdark()\r\n      return;\r\n    }\r\n  }\r\n  setColorSchema()\r\n}\r\n\r\nexport default debounce;\r\nexport {\r\n  getClosest,\r\n  hextorgba,\r\n  generateId,\r\n  throttle,\r\n  setTheme\r\n} ","let n = 40;\r\nexport default n\r\n\r\nconst createSortPlaceholderIcon = () => {\r\n  const iconwrapper = document.createElement(\"span\")\r\n  iconwrapper.classList.add(\"lvhi-sort--placeholder\")\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"20\");\r\n  icon.setAttribute(\"width\", \"20\");\r\n  icon.style.transform = \"scale(0.7) rotate(90deg)\"\r\n  const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  path.setAttribute(\"d\", \"M8.5 15 3 10l5.5-5Zm-1-2.25v-5.5L4.5 10Zm4 2.25V5l5.5 5Z\");\r\n  icon.appendChild(path);\r\n  iconwrapper.appendChild(icon)\r\n  return iconwrapper;\r\n}\r\n\r\nconst createStatusIcon = () => {\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"24\");\r\n  icon.setAttribute(\"width\", \"24\");\r\n  icon.setAttribute(\"viewBox\", \"0 0 24 24\");\r\n  icon.setAttribute(\"fill\", \"var(--white3)\")\r\n  icon.classList.add(\"lvhi-status--icon\")\r\n  const pathone = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathone.setAttribute(\"d\", \"M0 0h24v24H0z\")\r\n  pathone.setAttribute(\"fill\", \"none\")\r\n  const pathtwo = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathtwo.setAttribute(\"d\", \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-2 14l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\");\r\n  icon.append(pathone, pathtwo)\r\n  return icon\r\n}\r\n\r\nconst createCategoryIcon = () => {\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"24\");\r\n  icon.setAttribute(\"width\", \"24\");\r\n  icon.setAttribute(\"viewBox\", \"0 0 24 24\");\r\n  icon.setAttribute(\"fill\", \"var(--white3)\");\r\n  const pathone = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathone.setAttribute(\"d\", \"M0 0h24v24H0z\")\r\n  pathone.setAttribute(\"fill\", \"none\")\r\n  const pathtwo = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathtwo.setAttribute(\"d\", \"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\");\r\n  icon.classList.add(\"lvhi-category--icon\")\r\n  icon.append(pathone, pathtwo);\r\n  return icon;\r\n}\r\n\r\nconst createEditIcon = () => {\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"20\");\r\n  icon.setAttribute(\"width\", \"20\");\r\n  icon.setAttribute(\"fill\", \"var(--white3)\")\r\n  const pathone = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathone.setAttribute(\"d\", \"M10 16q-.625 0-1.062-.438Q8.5 15.125 8.5 14.5t.438-1.062Q9.375 13 10 13t1.062.438q.438.437.438 1.062t-.438 1.062Q10.625 16 10 16Zm0-4.5q-.625 0-1.062-.438Q8.5 10.625 8.5 10t.438-1.062Q9.375 8.5 10 8.5t1.062.438q.438.437.438 1.062t-.438 1.062q-.437.438-1.062.438ZM10 7q-.625 0-1.062-.438Q8.5 6.125 8.5 5.5t.438-1.062Q9.375 4 10 4t1.062.438q.438.437.438 1.062t-.438 1.062Q10.625 7 10 7Z\")\r\n  icon.appendChild(pathone)\r\n  return icon;\r\n}\r\n\r\nconst createPencilIcon = (fill) => {\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"20\");\r\n  icon.setAttribute(\"width\", \"20\");\r\n  icon.setAttribute(\"viewBox\", \"0 0 24 24\")\r\n  if (!fill) {\r\n    icon.setAttribute(\"fill\", \"var(--white3)\")\r\n  } else {\r\n    icon.setAttribute(\"fill\", fill)\r\n  }\r\n  const pathone = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathone.setAttribute(\"d\", \"M20.41 4.94l-1.35-1.35c-.78-.78-2.05-.78-2.83 0L3 16.82V21h4.18L20.41 7.77c.79-.78.79-2.05 0-2.83zm-14 14.12L5 19v-1.36l9.82-9.82 1.41 1.41-9.82 9.83z\");\r\n  icon.appendChild(pathone)\r\n  return icon;\r\n}\r\n\r\nconst createTrashIcon = (fill) => {\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"24\");\r\n  icon.setAttribute(\"width\", \"24\");\r\n  icon.setAttribute(\"viewBox\", \"0 0 24 24\");\r\n  if (!fill) {\r\n    icon.setAttribute(\"fill\", \"var(--white3)\")\r\n  } else {\r\n    icon.setAttribute(\"fill\", fill)\r\n  }\r\n  const pathone = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathone.setAttribute(\"d\", \"M15 4V3H9v1H4v2h1v13c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6h1V4h-5zm2 15H7V6h10v13z\")\r\n  const pathtwo = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathtwo.setAttribute(\"d\", \"M9 8h2v9H9zm4 0h2v9h-2z\")\r\n  icon.append(pathone, pathtwo)\r\n  return icon;\r\n}\r\n\r\nconst createCloseIcon = (fill) => {\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"20\");\r\n  icon.setAttribute(\"width\", \"20\");\r\n  if (!fill) {\r\n    icon.setAttribute(\"fill\", \"var(--white3)\")\r\n  } else {\r\n    icon.setAttribute(\"fill\", fill)\r\n  }\r\n  const pathone = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathone.setAttribute(\"d\", \"M6.062 15 5 13.938 8.938 10 5 6.062 6.062 5 10 8.938 13.938 5 15 6.062 11.062 10 15 13.938 13.938 15 10 11.062Z\")\r\n  icon.appendChild(pathone)\r\n  return icon;\r\n}\r\n\r\nconst createCaretDownIcon = (fill) => {\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"18\");\r\n  icon.setAttribute(\"width\", \"18\");\r\n  icon.setAttribute(\"viewBox\", \"0 0 24 24\");\r\n  if (!fill) {\r\n    icon.setAttribute(\"fill\", \"var(--white3)\")\r\n  } else {\r\n    icon.setAttribute(\"fill\", fill)\r\n  }\r\n\r\n  const pathone = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathone.setAttribute(\"d\", \"M0 0h24v24H0z\");\r\n  pathone.setAttribute(\"fill\", \"none\");\r\n  const pathtwo = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathtwo.setAttribute(\"d\", \"M7 10l5 5 5-5z\");\r\n  icon.append(pathone, pathtwo)\r\n  return icon;\r\n}\r\n\r\nconst createCaretUpIcon = (fill) => {\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"18\");\r\n  icon.setAttribute(\"width\", \"18\");\r\n  icon.setAttribute(\"viewBox\", \"0 0 24 24\");\r\n  if (!fill) {\r\n    icon.setAttribute(\"fill\", \"var(--white3)\")\r\n  } else {\r\n    icon.setAttribute(\"fill\", fill)\r\n  }\r\n  const pathone = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathone.setAttribute(\"d\", \"M0 0h24v24H0V0z\");\r\n  pathone.setAttribute(\"fill\", \"none\");\r\n  const pathtwo = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathtwo.setAttribute(\"d\", \"M7 14l5-5 5 5H7z\");\r\n  icon.append(pathone, pathtwo)\r\n  return icon;\r\n}\r\n\r\nconst createCaretRightIcon = (fill) => {\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"20\");\r\n  icon.setAttribute(\"width\", \"20\");\r\n  if (!fill) {\r\n    icon.setAttribute(\"fill\", \"var(--white3)\")\r\n  } else {\r\n    icon.setAttribute(\"fill\", fill)\r\n  }\r\n  const pathone = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathone.setAttribute(\"d\", \"m6 18.167-1.583-1.584L11 10 4.417 3.417 6 1.833 14.167 10Z\");\r\n  icon.appendChild(pathone)\r\n  return icon;  \r\n}\r\n\r\nconst createCheckIcon = (fill) => {\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"20\");\r\n  icon.setAttribute(\"width\", \"20\");\r\n  if (!fill) {\r\n    icon.setAttribute(\"fill\", \"var(--white2)\")\r\n  } else {\r\n    icon.setAttribute(\"fill\", fill)\r\n  }\r\n  const pathone = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathone.setAttribute(\"d\", \"m8.229 14.062-3.521-3.541L5.75 9.479l2.479 2.459 6.021-6L15.292 7Z\")\r\n  icon.appendChild(pathone)\r\n  return icon;\r\n}\r\n\r\nconst createCheckBoxIcon = (fill) => {\r\n  const icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  icon.setAttribute(\"height\", \"24\");\r\n  icon.setAttribute(\"width\", \"24\");\r\n  if (!fill) {\r\n    icon.setAttribute(\"fill\", \"var(--white2)\")\r\n  } else {\r\n    icon.setAttribute(\"fill\", fill)\r\n  }\r\n  const pathone = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n  pathone.setAttribute(\"d\", \"m10.6 16.2 7.05-7.05-1.4-1.4-5.65 5.65-2.85-2.85-1.4 1.4ZM5 21q-.825 0-1.413-.587Q3 19.825 3 19V5q0-.825.587-1.413Q4.175 3 5 3h14q.825 0 1.413.587Q21 4.175 21 5v14q0 .825-.587 1.413Q19.825 21 19 21Zm0-2h14V5H5v14ZM5 5v14V5Z\")\r\n  icon.appendChild(pathone)\r\n  return icon;\r\n}\r\n\r\nexport {\r\n  createSortPlaceholderIcon,\r\n  createStatusIcon,\r\n  createCategoryIcon,\r\n  createEditIcon,\r\n  createPencilIcon,\r\n  createTrashIcon, \r\n  createCloseIcon,\r\n  createCaretDownIcon,\r\n  createCaretUpIcon,\r\n  createCaretRightIcon,\r\n  createCheckIcon,\r\n  createCheckBoxIcon,\r\n}\r\n","function formatTime(hours, minutes) {\r\n  let md;\r\n  if (minutes === 60) {\r\n    minutes = 0;\r\n    hours += 1;\r\n  }\r\n  if (+hours === 0) {\r\n    hours = 12;\r\n    md = \"am\";\r\n  } else if (hours < 12) {\r\n    md = \"am\";\r\n  } else if (hours === 12) {\r\n    md = \"pm\";\r\n  } else if (hours === 24) {\r\n    md = \"am\";\r\n    hours -= 12;\r\n  } else {\r\n    hours -= 12;\r\n    md = \"pm\";\r\n  }\r\n\r\n  if (+minutes === 0) {\r\n    return `${hours}${md}`;\r\n  } else {\r\n    return `${hours}:${minutes}${md}`;\r\n  }\r\n}\r\n\r\nfunction formatStartEndTimes(hours, minutes) {\r\n  let [startHours, endHours] = hours;\r\n  let [startMinutes, endMinutes] = minutes;\r\n\r\n  let [start, end] = [\r\n    formatTime(startHours, startMinutes),\r\n    formatTime(endHours, endMinutes),\r\n  ];\r\n\r\n  if (start.slice(-2) === end.slice(-2)) { \r\n    start = start.slice(0, -2);\r\n  }\r\n\r\n  return `${start} – ${end}`;\r\n}\r\n\r\nfunction configMinutesForStore(minutes) {\r\n  return minutes === 0 ? \"00\" : minutes;\r\n}\r\n\r\nfunction calcTime(start, length) {\r\n  let startHours = Math.floor(+start / 4);\r\n  let startMinutes = (+start * 15) % 60;\r\n\r\n  let endHours = Math.floor((start + length) / 4);\r\n  let endMinutes = ((start + length) * 15) % 60;\r\n\r\n  let startingtime = formatTime(startHours, startMinutes);\r\n  let endingtime = formatTime(endHours, endMinutes);\r\n\r\n  if (startingtime.slice(-2) == endingtime.slice(-2)) {\r\n    startingtime = startingtime.slice(0, -2);\r\n  }\r\n\r\n  const boxtime = `${startingtime} – ${endingtime}`;\r\n  return boxtime;\r\n}\r\n\r\nexport default calcTime;\r\nexport { \r\n  configMinutesForStore,\r\n  formatStartEndTimes,\r\n  formatTime,\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import context, { datepickerContext } from \"./context/appContext\"\r\nimport store from \"./context/store\"\r\nimport setAppDefaults from \"./config/appDefaults\"\r\nimport renderViews from \"./config/renderViews\"\r\n// import generateRandomEvents from \"./utilities/testing\"\r\n// store.setStoreForTesting(generateRandomEvents())\r\n/*!*************************************!*\\\r\n// (CSS) \r\n/*!*************************************!*/\r\n// css variables and reset\r\nimport \"./styles/root.css\";\r\n// main app header -- fixed to top of app\r\nimport \"./styles/header.css\"\r\n// (sidebar, yearview, monthview, weekview, dayview, listview)\r\nimport \"./styles/containers.css\"\r\nimport \"./styles/yearview.css\"\r\nimport \"./styles/monthview.css\"\r\nimport \"./styles/weekview.css\"\r\nimport \"./styles/dayview.css\"\r\nimport \"./styles/listview.css\"\r\nimport \"./styles/sidebar.css\"\r\nimport \"./styles/sbdatepicker.css\"\r\n// popup / modals\r\nimport \"./styles/aside/toast.css\"\r\nimport \"./styles/aside/goto.css\"\r\nimport \"./styles/aside/toggleForm.css\"\r\nimport \"./styles/aside/sidebarSubMenu.css\"\r\nimport \"./styles/aside/changeViewModule.css\"\r\nimport \"./styles/aside/editCategoryForm.css\"\r\n\r\nimport \"./styles/aside/form.css\"\r\nimport \"./styles/datepicker.css\"\r\nimport \"./styles/aside/popup.css\"\r\nimport \"./styles/aside/entryOptions.css\"\r\nimport \"./styles/aside/info.css\"\r\nimport \"./styles/aside/shortcuts.css\"\r\n/*!*************************************!*/\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// NOTES;\r\n// * finish settings\r\n// * finish privacy,terms,notes\r\n// * do a write up on all of the features that I've either added or changed\r\n\r\n// FIX;\r\n// * clicking on item in more modal and then escaping out of form causes error\r\n// * validate .json files\r\n// * top modal for day and week view\r\n// * numbers monospace in form / table\r\n// * set min width for week view\r\n// * redo listview\r\n// * time picker form\r\n// * only show times from period of day in sidebar\r\n// * aria labels and links not crawable\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n// localStorage.clear()\r\nsetAppDefaults(context, store);\r\nrenderViews(context, datepickerContext, store);\r\n"],"names":[],"sourceRoot":""}